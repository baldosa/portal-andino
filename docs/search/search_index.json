{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Portal Andino Portal Andino Github Comienzo r\u00e1pido Manual de uso Desarrolladores Instalaci\u00f3n Actualizaci\u00f3n Recomendaciones para la puesta en producci\u00f3n de una instancia de Andino Migraci\u00f3n Mantenimiento Configuraci\u00f3n HTTPS Configuraci\u00f3n de DNS Desarrollo Tests","title":"Inicio"},{"location":"#portal-andino","text":"Portal Andino Github Comienzo r\u00e1pido Manual de uso Desarrolladores Instalaci\u00f3n Actualizaci\u00f3n Recomendaciones para la puesta en producci\u00f3n de una instancia de Andino Migraci\u00f3n Mantenimiento Configuraci\u00f3n HTTPS Configuraci\u00f3n de DNS Desarrollo Tests","title":"Portal Andino"},{"location":"quickstart/","text":"Comienzo r\u00e1pido Indice Primeros pasos Entrar y salir de tu portal Permisos de usuario Elementos de tu portal Organizaciones Secci\u00f3n Organizaciones con datos Secci\u00f3n Acerca Tipos de Acerca \u00bfC\u00f3mo elijo el tipo de Acerca? \u00bfC\u00f3mo puedo escribir y mostrar informaci\u00f3n b\u00e1sica? \u00bfC\u00f3mo puedo crear y mostrar mis secciones personalizadas? \u00bfD\u00f3nde a\u00f1ado los archivos requeridos para las secciones? \u00bfD\u00f3nde y c\u00f3mo puedo guardar im\u00e1genes para mostrarlas en mis secciones? \u00bfC\u00f3mo las muestro en mis templates? Temas Datasets Recursos \u00bfD\u00f3nde los veo en el portal? Buenas pr\u00e1cticas al crear recursos \u00bfC\u00f3mo los creo? Campos de un recurso \u00bfD\u00f3nde los veo en el portal? Buenas pr\u00e1cticas al cargar campos de un recurso Series de tiempo \u00bfC\u00f3mo documento una serie de tiempo? Etiquetas Personalizar el portal Integrar Andino con Google Analytics Consultas sobre Andino Otros contenidos \u00fatiles Primeros pasos \u00a1Un aplauso, ya est\u00e1s abriendo tus datos! Esta gu\u00eda te ayudar\u00e1 a: Conocer los elementos del cat\u00e1logo e identificar d\u00f3nde se ven en el portal. Personalizar el portal. Crear datasets, recursos, organizaciones y temas. Asignar permisos de usuarios. Integrar con Google Analytics. \u00a1Arranquemos! Entrar y salir de tu portal Cada vez que quieras entrar al portal, podr\u00e1s hacerlo desde http:// tu-url.com /ingresar . Permisos de usuario Desde agosto de 2017, en Andino hay dos tipos de usuarios: los administradores y los colaboradores . El primer usuario administrador siempre es creado por el t\u00e9cnico en sistemas que instal\u00f3 Andino. Los administradores de Andino pueden invitar a m\u00e1s personas a colaborar en la apertura de datos, eligiendo el tipo que quieren asignar : Administrador : podr\u00e1 crear usuarios, editar la configuraci\u00f3n general del portal; crear, actualizar y borrar todos los datasets; y gestionar temas y organizaciones. Colaborador : podr\u00e1 crear, actualizar y borrar datasets s\u00f3lo de las organizaciones que tenga asignadas (por eso es importante que primero crees en tu Andino las organizaciones en las que necesit\u00e1s colaboradores). Asign\u00e1 permisos desde Mi cuenta Crear usuarios . Elementos de tu portal Organizaciones Son los organismos que abren o mantienen cada dataset. Es muy importante que crees las organizaciones antes de que generes un dataset que est\u00e9 asociado a ella. \u00bfD\u00f3nde lo veo en el portal? Como uno de los filtros de la vista de Datasets. Como n\u00famero agregado, en la P\u00e1gina principal de tu portal, en caso de que hayas elegido la vista que muestra el n\u00famero de Organizaciones con datos. Buenas pr\u00e1cticas al crear Organizaciones con datos Ten\u00e9 en cuenta que siempre que borres una organizaci\u00f3n, todos los conjuntos de datos (y tambi\u00e9n los recursos), se borrar\u00e1n definitivamente. \u00bfC\u00f3mo los creo? And\u00e1 a P\u00e1gina principal Crear Organizaciones . En caso de que hayas elegido que tu portal tenga una secci\u00f3n de Organizaciones con datos, tambi\u00e9n se mostrar\u00e1n all\u00ed. Secci\u00f3n Organizaciones con datos Esta secci\u00f3n es opcional . Te permite armar un \u00e1rbol de jerarqu\u00edas con las organizaciones que abrieron datos en tu portal. Los organismos que se muestran en esta parte de tu portal son los mismos que asign\u00e1s a los datasets y que cre\u00e1s antes de generar estos \u00faltimos. \u00bfD\u00f3nde lo veo en el portal? En P\u00e1gina principal Organizaciones con datos . Buenas pr\u00e1cticas al crear la secci\u00f3n Organizaciones con datos Es importante que tengas bien en claro qu\u00e9 organizaciones dependenden de otras, para que el \u00e1rbol de jerarqu\u00edas represente bien las correspondencias. \u00bfC\u00f3mo las creo? Como la secci\u00f3n Organizaciones con datos es opcional, pod\u00e9s elegir que se vea en tu portal. Para eso, and\u00e1 a Configuraciones Organizaciones con datos y tild\u00e1 la habilitaci\u00f3n. Secci\u00f3n Acerca Esta secci\u00f3n es opcional . Te permite darle la oportunidad a los usuarios que naveguen tu portal de leer informaci\u00f3n del mismo para un mejor entendimiento. Tipos de Acerca Existen tres tipos diferentes que vas a poder elegir: Sin secci\u00f3n de acerca : para cuando se decida no mostrar informaci\u00f3n. Secci\u00f3n con informaci\u00f3n b\u00e1sica : existir\u00e1 un bot\u00f3n que lleve al usuario a una p\u00e1gina donde encontrar\u00e1 informaci\u00f3n b\u00e1sica sobre el portal (un t\u00edtulo y una descripci\u00f3n). Estar\u00e1 ubicado en P\u00e1gina Principal Acerca . Secciones personalizadas : se crear\u00e1n varias secciones personalizadas que vas a poder modificar a gusto. El bot\u00f3n Acerca ahora desplegar\u00e1 un men\u00fa que contendr\u00e1 todas y cada una de las secciones que hayas a\u00f1adido al portal. Para cada secci\u00f3n, se necesitar\u00e1 un archivo (de formato .html) con el contenido que quieras mostrar. \u00bfC\u00f3mo elijo el tipo de Acerca? And\u00e1 a P\u00e1gina Principal Usuario Configuraci\u00f3n Otras secciones del portal Acerca (opcional) \u00bfC\u00f3mo puedo escribir y mostrar informaci\u00f3n b\u00e1sica? Habiendo elegido la segunda opci\u00f3n , pod\u00e9s modificar el t\u00edtulo y la descripci\u00f3n. \u00bfC\u00f3mo puedo crear y mostrar mis secciones personalizadas? Habiendo elegido la tercera opci\u00f3n , podr\u00e1s ir creando tus secciones escribiendo un t\u00edtulo y un nombre de archivo. Record\u00e1 que, para cada secci\u00f3n, ser\u00e1 necesario guardar un archivo (de formato .html) para que el portal pueda mostrar su contenido. \u00bfD\u00f3nde a\u00f1ado los archivos requeridos para las secciones? Dentro del container, dichos archivos deben ser guardados en el directorio /var/lib/ckan/theme_config/templates/ . De no existir la carpeta /templates , se deber\u00e1 crearla utilizando dos comandos: mkdir /var/lib/ckan/theme_config/templates chown www-data:www-data /var/lib/ckan/theme_config/templates/ (www-data es el usuario con el que se corre el proceso apache en el sistema operativo Ubuntu ) Dentro de cada archivo deber\u00e1 estar el contenido de su secci\u00f3n correspondiente. Por favor, no te olvides de que el nombre del archivo debe coincidir con lo escrito en el campo 'Nombre del archivo' de la secci\u00f3n. \u00bfD\u00f3nde y c\u00f3mo puedo guardar im\u00e1genes para mostrarlas en mis secciones? \u00bfC\u00f3mo las muestro en mis templates? Dentro del container, las im\u00e1genes deben ser guardadas en una carpeta llamada \"user_images\". Para poder copiar y pegar una imagen en dicha carpeta existe un comando que pod\u00e9s usar, pero primero ten\u00e9s que hacer tres cosas: Dentro del contenedor, ejecutar este comando: chown www-data:www-data /usr/lib/ckan/default/src/ckanext-gobar-theme/ckanext/gobar_theme/public/user_images/ En caso de que hayas cambiado manualmente el puerto del contenedor, saber cu\u00e1l es (el default es 8080) Tener preparado el nombre del contenedor (ya que queremos decirle al comando en qu\u00e9 lugar vamos a guardar la imagen) El nombre del contenedor se consigue escribiendo en una terminal dentro del host: sudo docker-compose -f latest.yml ps |grep puerto del container S\u00f3lo nos queda guardar la imagen: docker cp nombre de la imagen nombre del contendor portal :/usr/lib/ckan/default/src/ckanext-gobar-theme/ckanext/gobar_theme/public/user_images/ Supongamos que guardaste una imagen llamada 'mi_imagen.png'; para poder utilizarla, pod\u00e9s escribir dentro de tu template esta l\u00ednea (completa): img src= /user_images/mi_imagen.png Temas Son las categor\u00edas en las que se pueden clasificar todos los datasets de tu portal. Hay dos taxonom\u00edas de temas: Temas globales , que ya vienen con Andino, y que necesit\u00e1s elegir para cada dataset. Estos temas no se ven en tu portal, pero es necesario que lo elijas para que el portal nacional datos.gob.ar pueda republicar el dataset seg\u00fan esta clasificaci\u00f3n. Por ejemplo: \u201cEconom\u00eda y finanzas\u201d. Temas espec\u00edficos , que son opcionales, pero que te recomendamos con \u00e9nfasis que agregues a todos tus conjuntos de datos porque son los temas que van a ver tus usuarios. Por ejemplo, si el tema global era \u201cEconom\u00eda y finanzas\u201d, un tema espec\u00edfico podr\u00eda ser \u201cCompras\u201d. \u00bfD\u00f3nde lo veo en el portal? En la P\u00e1gina principal de tu cat\u00e1logo de datos. Tambi\u00e9n como detalle de cada dataset espec\u00edfico. Buenas pr\u00e1cticas al crear Temas espec\u00edficos Intent\u00e1 crear los temas espec\u00edficos a conciencia para poder reutilizarlos a futuro. No crees un tema espec\u00edfico por cada dataset. Asegurate de que cada tema espec\u00edfico sea un aparte m\u00e1s peque\u00f1a dentro de los Temas globales. \u00bfC\u00f3mo los creo? And\u00e1 a P\u00e1gina principal Crear tema . \u00bfC\u00f3mo los asigno? Cada vez que generes un nuevo dataset , el formulario te pedir\u00e1 que asignes temas. Record\u00e1 siempre reutilizar los que ya hayas creado y no repetirlos. Datasets Tambi\u00e9n los llamamos \u201cconjuntos de datos\u201d. Son la pieza principal de tu portal o cat\u00e1logo de datos. Cada dataset est\u00e1 formado por uno o m\u00e1s recursos. \u00bfD\u00f3nde los veo en el portal? Todos los datasets que subas al portal se ver\u00e1n en la secci\u00f3n Datasets . Adem\u00e1s, podr\u00e1s destacar los que creas m\u00e1s importantes en la P\u00e1gina principal. Buenas pr\u00e1cticas al crear datasets T\u00edtulos de los datasets : es el primer vistazo que los usuarios tendr\u00e1n sobre su contenido. Por eso, intent\u00e1 no superar los 100 caracteres. Prest\u00e1 especial atenci\u00f3n a las may\u00fasculas. S\u00f3lo los sustantivos propios las necesitan. Descripci\u00f3n de los datasets : es el detalle que le cont\u00e1s a los usuarios. Por esa raz\u00f3n, es importante que trates de dar una explicaci\u00f3n general de los datos con los que se va a encontrar. Intent\u00e1 no superar los 500 caracteres. \u00bfC\u00f3mo los creo? Ingres\u00e1 a tu cuenta y and\u00e1 a P\u00e1gina principal Crear dataset . Siempre podr\u00e1s editar los dataset que hayas creado. Para eso, ingres\u00e1 a tu cuenta P\u00e1gina principal Datasets Editar dataset . Recursos Cada dataset est\u00e1 formado por, al menos, un recurso. Por eso decimos que los recursos son la pieza de informaci\u00f3n m\u00e1s peque\u00f1a del cat\u00e1logo y los verdaderos activos de datos del portal. \u00bfD\u00f3nde los veo en el portal? P\u00e1gina principal Datasets Clic en el recurso espec\u00edfico. Buenas pr\u00e1cticas al crear recursos Segu\u00ed los mismos criterios de escritura que con los datasets. T\u00edtulos de los recursos : intent\u00e1 no superar los 150 caracteres. Descripci\u00f3n de los recursos : intent\u00e1 no superar los 200 caracteres. \u00bfC\u00f3mo los creo? Ingres\u00e1 a tu cuenta y and\u00e1 a P\u00e1gina principal Crear dataset. Una vez que completes el dataset, podr\u00e1s agregar recursos. Al igual que con los datasets, siempre podr\u00e1s editar los recursos que hayas creado. Para eso, ingres\u00e1 a tu cuenta P\u00e1gina principal Datasets Editar dataset Editar recursos. Campos de un recurso Los recursos pueden tener mucha informaci\u00f3n y ser dif\u00edciles de comprender. Para ayudar a los usuarios que ven nuestros recursos, Andino permite documentar qu\u00e9 contiene cada campo. \u00bfD\u00f3nde los veo en el portal? Los recursos que tengan informaci\u00f3n sobre sus campos se visualizar\u00e1n en la vista de un recurso. Buenas pr\u00e1cticas al cargar campos de un recurso Puede ser de mucha ayuda para los usuarios que siempre cargues al menos los siguientes campos: - T\u00edtulo de la columna - Tipo de dato - Descripci\u00f3n Tambi\u00e9n pod\u00e9s usar estos campos para documentar aspectos m\u00e1s avanzados de las columnas de un recurso: - Unidad de medida - Identificador - Tipo de dato especial - Detalle de tipo especial Series de tiempo Andino permite documentar recursos que publican series de tiempo . \u00bfC\u00f3mo documento una serie de tiempo? En el formulario de carga de un recurso vas a encontrar campos avanzados y especiales que necesit\u00e1s usar para documentar las columnas de una tabla que contiene series de tiempo. Los campos Tipo de dato especial y Detalle de tipo especial te permiten marcar la columna del \u00edndice de tiempo y qu\u00e9 frecuencia tiene. Los campos Unidad de medida e Identificador te permiten documentar cada una de las columnas que son series de tiempo. Para conocer m\u00e1s sobre series de tiempo mir\u00e1 la documentaci\u00f3n completa en el perfil de metadatos. Etiquetas Son las palabras que ayudan a los usuarios a filtrar y encontrar los datasets. Cuanto m\u00e1s amplia y uniforme sea la lista de Etiquetas, mayor es su poder de ayuda. \u00bfD\u00f3nde las veo en el portal? En cada dataset espec\u00edfico. Buenas pr\u00e1cticas al crear etiquetas Us\u00e1 may\u00fasculas s\u00f3lo donde corresponda. Identific\u00e1 palabras claves. Respet\u00e1 las etiquetas anteriores. Agreg\u00e1 sin\u00f3nimos y us\u00e1 lenguaje natural. Trat\u00e1 de usar una sola palabra, siempre en plural. Si la etiqueta tiene m\u00e1s de una palabra, separalas por un espacio. Por ejemplo: \u201cdeclaraciones juradas\u201d. \u00c9stas son algunas preguntas \u00fatiles a la hora de pensar las etiquetas: \u00bfCu\u00e1l es el tema? \u00bfQu\u00e9 aspectos ser\u00e1n de inter\u00e9s para los usuarios? \u00bfDe qu\u00e9 otro modo buscar\u00eda el usuario esta informaci\u00f3n? \u00bfDe qu\u00e9 tipo de informaci\u00f3n se trata? \u00bfQu\u00e9 \u00e1rea la provee? \u00bfC\u00f3mo las creo? Al igual que con los Temas, cada vez que generes un nuevo dataset, el formulario te pedir\u00e1 que asignes un etiqueta. Record\u00e1 siempre reutilizar las que ya hayas creado y no repetirlas. Personalizar el portal Hacer que tu portal represente tu organizaci\u00f3n es muy f\u00e1cil. Por favor, and\u00e1 a la P\u00e1gina principal Configuraci\u00f3n . Llegar\u00e1s a la secci\u00f3n que te permite cambiar c\u00f3mo luce la portada de tu cat\u00e1logo de datos y cada secci\u00f3n en particular. Integrar Andino con Google Analytics Por favor, escribinos y contanos con qu\u00e9 casilla de e-mail quer\u00e9s tener permisos para ver las m\u00e9tricas de tu Andino. Consultas sobre Andino Andino es un portal abierto en constante desarrollo para ser usado por toda la comunidad de datos. Por eso, cuando incorporamos una nueva mejora, cuidamos mucho su compatibilidad con la versi\u00f3n anterior . Como la comunidad de datos es grande, por ahora no podemos dar soporte t\u00e9cnico frente a modificaciones particulares del c\u00f3digo . Sin embargo, pod\u00e9s contactarnos para despejar dudas . Te invitamos a crear issues o enviarnos sugerencias en caso de que encuentren alg\u00fan bug o tengas feedback . Tambi\u00e9n pod\u00e9s mandarnos tu comentario o consulta a datos@modernizacion.gob.ar Otros contenidos \u00fatiles Gu\u00eda para el uso y la publicaci\u00f3n de metadatos Gu\u00eda para la identificaci\u00f3n y uso de entidades interoperables Gu\u00eda para la publicaci\u00f3n de datos en formatos abiertos","title":"Comienzo r\u00e1pido"},{"location":"quickstart/#comienzo-rapido","text":"","title":"Comienzo r\u00e1pido"},{"location":"quickstart/#indice","text":"Primeros pasos Entrar y salir de tu portal Permisos de usuario Elementos de tu portal Organizaciones Secci\u00f3n Organizaciones con datos Secci\u00f3n Acerca Tipos de Acerca \u00bfC\u00f3mo elijo el tipo de Acerca? \u00bfC\u00f3mo puedo escribir y mostrar informaci\u00f3n b\u00e1sica? \u00bfC\u00f3mo puedo crear y mostrar mis secciones personalizadas? \u00bfD\u00f3nde a\u00f1ado los archivos requeridos para las secciones? \u00bfD\u00f3nde y c\u00f3mo puedo guardar im\u00e1genes para mostrarlas en mis secciones? \u00bfC\u00f3mo las muestro en mis templates? Temas Datasets Recursos \u00bfD\u00f3nde los veo en el portal? Buenas pr\u00e1cticas al crear recursos \u00bfC\u00f3mo los creo? Campos de un recurso \u00bfD\u00f3nde los veo en el portal? Buenas pr\u00e1cticas al cargar campos de un recurso Series de tiempo \u00bfC\u00f3mo documento una serie de tiempo? Etiquetas Personalizar el portal Integrar Andino con Google Analytics Consultas sobre Andino Otros contenidos \u00fatiles","title":"Indice"},{"location":"quickstart/#primeros-pasos","text":"\u00a1Un aplauso, ya est\u00e1s abriendo tus datos! Esta gu\u00eda te ayudar\u00e1 a: Conocer los elementos del cat\u00e1logo e identificar d\u00f3nde se ven en el portal. Personalizar el portal. Crear datasets, recursos, organizaciones y temas. Asignar permisos de usuarios. Integrar con Google Analytics. \u00a1Arranquemos!","title":"Primeros pasos"},{"location":"quickstart/#entrar-y-salir-de-tu-portal","text":"Cada vez que quieras entrar al portal, podr\u00e1s hacerlo desde http:// tu-url.com /ingresar .","title":"Entrar y salir de tu portal"},{"location":"quickstart/#permisos-de-usuario","text":"Desde agosto de 2017, en Andino hay dos tipos de usuarios: los administradores y los colaboradores . El primer usuario administrador siempre es creado por el t\u00e9cnico en sistemas que instal\u00f3 Andino. Los administradores de Andino pueden invitar a m\u00e1s personas a colaborar en la apertura de datos, eligiendo el tipo que quieren asignar : Administrador : podr\u00e1 crear usuarios, editar la configuraci\u00f3n general del portal; crear, actualizar y borrar todos los datasets; y gestionar temas y organizaciones. Colaborador : podr\u00e1 crear, actualizar y borrar datasets s\u00f3lo de las organizaciones que tenga asignadas (por eso es importante que primero crees en tu Andino las organizaciones en las que necesit\u00e1s colaboradores). Asign\u00e1 permisos desde Mi cuenta Crear usuarios .","title":"Permisos de usuario"},{"location":"quickstart/#elementos-de-tu-portal","text":"","title":"Elementos de tu portal"},{"location":"quickstart/#organizaciones","text":"Son los organismos que abren o mantienen cada dataset. Es muy importante que crees las organizaciones antes de que generes un dataset que est\u00e9 asociado a ella.","title":"Organizaciones"},{"location":"quickstart/#donde-lo-veo-en-el-portal","text":"Como uno de los filtros de la vista de Datasets. Como n\u00famero agregado, en la P\u00e1gina principal de tu portal, en caso de que hayas elegido la vista que muestra el n\u00famero de Organizaciones con datos.","title":"\u00bfD\u00f3nde lo veo en el portal?"},{"location":"quickstart/#buenas-practicas-al-crear-organizaciones-con-datos","text":"Ten\u00e9 en cuenta que siempre que borres una organizaci\u00f3n, todos los conjuntos de datos (y tambi\u00e9n los recursos), se borrar\u00e1n definitivamente.","title":"Buenas pr\u00e1cticas al crear Organizaciones con datos"},{"location":"quickstart/#como-los-creo","text":"And\u00e1 a P\u00e1gina principal Crear Organizaciones . En caso de que hayas elegido que tu portal tenga una secci\u00f3n de Organizaciones con datos, tambi\u00e9n se mostrar\u00e1n all\u00ed.","title":"\u00bfC\u00f3mo los creo?"},{"location":"quickstart/#seccion-organizaciones-con-datos","text":"Esta secci\u00f3n es opcional . Te permite armar un \u00e1rbol de jerarqu\u00edas con las organizaciones que abrieron datos en tu portal. Los organismos que se muestran en esta parte de tu portal son los mismos que asign\u00e1s a los datasets y que cre\u00e1s antes de generar estos \u00faltimos.","title":"Secci\u00f3n Organizaciones con datos"},{"location":"quickstart/#donde-lo-veo-en-el-portal_1","text":"En P\u00e1gina principal Organizaciones con datos .","title":"\u00bfD\u00f3nde lo veo en el portal?"},{"location":"quickstart/#buenas-practicas-al-crear-la-seccion-organizaciones-con-datos","text":"Es importante que tengas bien en claro qu\u00e9 organizaciones dependenden de otras, para que el \u00e1rbol de jerarqu\u00edas represente bien las correspondencias.","title":"Buenas pr\u00e1cticas al crear la secci\u00f3n Organizaciones con datos"},{"location":"quickstart/#como-las-creo","text":"Como la secci\u00f3n Organizaciones con datos es opcional, pod\u00e9s elegir que se vea en tu portal. Para eso, and\u00e1 a Configuraciones Organizaciones con datos y tild\u00e1 la habilitaci\u00f3n.","title":"\u00bfC\u00f3mo las creo?"},{"location":"quickstart/#seccion-acerca","text":"Esta secci\u00f3n es opcional . Te permite darle la oportunidad a los usuarios que naveguen tu portal de leer informaci\u00f3n del mismo para un mejor entendimiento.","title":"Secci\u00f3n Acerca"},{"location":"quickstart/#tipos-de-acerca","text":"Existen tres tipos diferentes que vas a poder elegir: Sin secci\u00f3n de acerca : para cuando se decida no mostrar informaci\u00f3n. Secci\u00f3n con informaci\u00f3n b\u00e1sica : existir\u00e1 un bot\u00f3n que lleve al usuario a una p\u00e1gina donde encontrar\u00e1 informaci\u00f3n b\u00e1sica sobre el portal (un t\u00edtulo y una descripci\u00f3n). Estar\u00e1 ubicado en P\u00e1gina Principal Acerca . Secciones personalizadas : se crear\u00e1n varias secciones personalizadas que vas a poder modificar a gusto. El bot\u00f3n Acerca ahora desplegar\u00e1 un men\u00fa que contendr\u00e1 todas y cada una de las secciones que hayas a\u00f1adido al portal. Para cada secci\u00f3n, se necesitar\u00e1 un archivo (de formato .html) con el contenido que quieras mostrar.","title":"Tipos de Acerca"},{"location":"quickstart/#como-elijo-el-tipo-de-acerca","text":"And\u00e1 a P\u00e1gina Principal Usuario Configuraci\u00f3n Otras secciones del portal Acerca (opcional)","title":"\u00bfC\u00f3mo elijo el tipo de Acerca?"},{"location":"quickstart/#como-puedo-escribir-y-mostrar-informacion-basica","text":"Habiendo elegido la segunda opci\u00f3n , pod\u00e9s modificar el t\u00edtulo y la descripci\u00f3n.","title":"\u00bfC\u00f3mo puedo escribir y mostrar informaci\u00f3n b\u00e1sica?"},{"location":"quickstart/#como-puedo-crear-y-mostrar-mis-secciones-personalizadas","text":"Habiendo elegido la tercera opci\u00f3n , podr\u00e1s ir creando tus secciones escribiendo un t\u00edtulo y un nombre de archivo. Record\u00e1 que, para cada secci\u00f3n, ser\u00e1 necesario guardar un archivo (de formato .html) para que el portal pueda mostrar su contenido.","title":"\u00bfC\u00f3mo puedo crear y mostrar mis secciones personalizadas?"},{"location":"quickstart/#donde-anado-los-archivos-requeridos-para-las-secciones","text":"Dentro del container, dichos archivos deben ser guardados en el directorio /var/lib/ckan/theme_config/templates/ . De no existir la carpeta /templates , se deber\u00e1 crearla utilizando dos comandos: mkdir /var/lib/ckan/theme_config/templates chown www-data:www-data /var/lib/ckan/theme_config/templates/ (www-data es el usuario con el que se corre el proceso apache en el sistema operativo Ubuntu ) Dentro de cada archivo deber\u00e1 estar el contenido de su secci\u00f3n correspondiente. Por favor, no te olvides de que el nombre del archivo debe coincidir con lo escrito en el campo 'Nombre del archivo' de la secci\u00f3n.","title":"\u00bfD\u00f3nde a\u00f1ado los archivos requeridos para las secciones?"},{"location":"quickstart/#donde-y-como-puedo-guardar-imagenes-para-mostrarlas-en-mis-secciones-como-las-muestro-en-mis-templates","text":"Dentro del container, las im\u00e1genes deben ser guardadas en una carpeta llamada \"user_images\". Para poder copiar y pegar una imagen en dicha carpeta existe un comando que pod\u00e9s usar, pero primero ten\u00e9s que hacer tres cosas: Dentro del contenedor, ejecutar este comando: chown www-data:www-data /usr/lib/ckan/default/src/ckanext-gobar-theme/ckanext/gobar_theme/public/user_images/ En caso de que hayas cambiado manualmente el puerto del contenedor, saber cu\u00e1l es (el default es 8080) Tener preparado el nombre del contenedor (ya que queremos decirle al comando en qu\u00e9 lugar vamos a guardar la imagen) El nombre del contenedor se consigue escribiendo en una terminal dentro del host: sudo docker-compose -f latest.yml ps |grep puerto del container S\u00f3lo nos queda guardar la imagen: docker cp nombre de la imagen nombre del contendor portal :/usr/lib/ckan/default/src/ckanext-gobar-theme/ckanext/gobar_theme/public/user_images/ Supongamos que guardaste una imagen llamada 'mi_imagen.png'; para poder utilizarla, pod\u00e9s escribir dentro de tu template esta l\u00ednea (completa): img src= /user_images/mi_imagen.png","title":"\u00bfD\u00f3nde y c\u00f3mo puedo guardar im\u00e1genes para mostrarlas en mis secciones? \u00bfC\u00f3mo las muestro en mis templates?"},{"location":"quickstart/#temas","text":"Son las categor\u00edas en las que se pueden clasificar todos los datasets de tu portal. Hay dos taxonom\u00edas de temas: Temas globales , que ya vienen con Andino, y que necesit\u00e1s elegir para cada dataset. Estos temas no se ven en tu portal, pero es necesario que lo elijas para que el portal nacional datos.gob.ar pueda republicar el dataset seg\u00fan esta clasificaci\u00f3n. Por ejemplo: \u201cEconom\u00eda y finanzas\u201d. Temas espec\u00edficos , que son opcionales, pero que te recomendamos con \u00e9nfasis que agregues a todos tus conjuntos de datos porque son los temas que van a ver tus usuarios. Por ejemplo, si el tema global era \u201cEconom\u00eda y finanzas\u201d, un tema espec\u00edfico podr\u00eda ser \u201cCompras\u201d.","title":"Temas"},{"location":"quickstart/#donde-lo-veo-en-el-portal_2","text":"En la P\u00e1gina principal de tu cat\u00e1logo de datos. Tambi\u00e9n como detalle de cada dataset espec\u00edfico.","title":"\u00bfD\u00f3nde lo veo en el portal?"},{"location":"quickstart/#buenas-practicas-al-crear-temas-especificos","text":"Intent\u00e1 crear los temas espec\u00edficos a conciencia para poder reutilizarlos a futuro. No crees un tema espec\u00edfico por cada dataset. Asegurate de que cada tema espec\u00edfico sea un aparte m\u00e1s peque\u00f1a dentro de los Temas globales.","title":"Buenas pr\u00e1cticas al crear Temas espec\u00edficos"},{"location":"quickstart/#como-los-creo_1","text":"And\u00e1 a P\u00e1gina principal Crear tema .","title":"\u00bfC\u00f3mo los creo?"},{"location":"quickstart/#como-los-asigno","text":"Cada vez que generes un nuevo dataset , el formulario te pedir\u00e1 que asignes temas. Record\u00e1 siempre reutilizar los que ya hayas creado y no repetirlos.","title":"\u00bfC\u00f3mo los asigno?"},{"location":"quickstart/#datasets","text":"Tambi\u00e9n los llamamos \u201cconjuntos de datos\u201d. Son la pieza principal de tu portal o cat\u00e1logo de datos. Cada dataset est\u00e1 formado por uno o m\u00e1s recursos.","title":"Datasets"},{"location":"quickstart/#donde-los-veo-en-el-portal","text":"Todos los datasets que subas al portal se ver\u00e1n en la secci\u00f3n Datasets . Adem\u00e1s, podr\u00e1s destacar los que creas m\u00e1s importantes en la P\u00e1gina principal.","title":"\u00bfD\u00f3nde los veo en el portal?"},{"location":"quickstart/#buenas-practicas-al-crear-datasets","text":"T\u00edtulos de los datasets : es el primer vistazo que los usuarios tendr\u00e1n sobre su contenido. Por eso, intent\u00e1 no superar los 100 caracteres. Prest\u00e1 especial atenci\u00f3n a las may\u00fasculas. S\u00f3lo los sustantivos propios las necesitan. Descripci\u00f3n de los datasets : es el detalle que le cont\u00e1s a los usuarios. Por esa raz\u00f3n, es importante que trates de dar una explicaci\u00f3n general de los datos con los que se va a encontrar. Intent\u00e1 no superar los 500 caracteres.","title":"Buenas pr\u00e1cticas al crear datasets"},{"location":"quickstart/#como-los-creo_2","text":"Ingres\u00e1 a tu cuenta y and\u00e1 a P\u00e1gina principal Crear dataset . Siempre podr\u00e1s editar los dataset que hayas creado. Para eso, ingres\u00e1 a tu cuenta P\u00e1gina principal Datasets Editar dataset .","title":"\u00bfC\u00f3mo los creo?"},{"location":"quickstart/#recursos","text":"Cada dataset est\u00e1 formado por, al menos, un recurso. Por eso decimos que los recursos son la pieza de informaci\u00f3n m\u00e1s peque\u00f1a del cat\u00e1logo y los verdaderos activos de datos del portal.","title":"Recursos"},{"location":"quickstart/#donde-los-veo-en-el-portal_1","text":"P\u00e1gina principal Datasets Clic en el recurso espec\u00edfico.","title":"\u00bfD\u00f3nde los veo en el portal?"},{"location":"quickstart/#buenas-practicas-al-crear-recursos","text":"Segu\u00ed los mismos criterios de escritura que con los datasets. T\u00edtulos de los recursos : intent\u00e1 no superar los 150 caracteres. Descripci\u00f3n de los recursos : intent\u00e1 no superar los 200 caracteres.","title":"Buenas pr\u00e1cticas al crear recursos"},{"location":"quickstart/#como-los-creo_3","text":"Ingres\u00e1 a tu cuenta y and\u00e1 a P\u00e1gina principal Crear dataset. Una vez que completes el dataset, podr\u00e1s agregar recursos. Al igual que con los datasets, siempre podr\u00e1s editar los recursos que hayas creado. Para eso, ingres\u00e1 a tu cuenta P\u00e1gina principal Datasets Editar dataset Editar recursos.","title":"\u00bfC\u00f3mo los creo?"},{"location":"quickstart/#campos-de-un-recurso","text":"Los recursos pueden tener mucha informaci\u00f3n y ser dif\u00edciles de comprender. Para ayudar a los usuarios que ven nuestros recursos, Andino permite documentar qu\u00e9 contiene cada campo.","title":"Campos de un recurso"},{"location":"quickstart/#donde-los-veo-en-el-portal_2","text":"Los recursos que tengan informaci\u00f3n sobre sus campos se visualizar\u00e1n en la vista de un recurso.","title":"\u00bfD\u00f3nde los veo en el portal?"},{"location":"quickstart/#buenas-practicas-al-cargar-campos-de-un-recurso","text":"Puede ser de mucha ayuda para los usuarios que siempre cargues al menos los siguientes campos: - T\u00edtulo de la columna - Tipo de dato - Descripci\u00f3n Tambi\u00e9n pod\u00e9s usar estos campos para documentar aspectos m\u00e1s avanzados de las columnas de un recurso: - Unidad de medida - Identificador - Tipo de dato especial - Detalle de tipo especial","title":"Buenas pr\u00e1cticas al cargar campos de un recurso"},{"location":"quickstart/#series-de-tiempo","text":"Andino permite documentar recursos que publican series de tiempo .","title":"Series de tiempo"},{"location":"quickstart/#como-documento-una-serie-de-tiempo","text":"En el formulario de carga de un recurso vas a encontrar campos avanzados y especiales que necesit\u00e1s usar para documentar las columnas de una tabla que contiene series de tiempo. Los campos Tipo de dato especial y Detalle de tipo especial te permiten marcar la columna del \u00edndice de tiempo y qu\u00e9 frecuencia tiene. Los campos Unidad de medida e Identificador te permiten documentar cada una de las columnas que son series de tiempo. Para conocer m\u00e1s sobre series de tiempo mir\u00e1 la documentaci\u00f3n completa en el perfil de metadatos.","title":"\u00bfC\u00f3mo documento una serie de tiempo?"},{"location":"quickstart/#etiquetas","text":"Son las palabras que ayudan a los usuarios a filtrar y encontrar los datasets. Cuanto m\u00e1s amplia y uniforme sea la lista de Etiquetas, mayor es su poder de ayuda.","title":"Etiquetas"},{"location":"quickstart/#donde-las-veo-en-el-portal","text":"En cada dataset espec\u00edfico.","title":"\u00bfD\u00f3nde las veo en el portal?"},{"location":"quickstart/#buenas-practicas-al-crear-etiquetas","text":"Us\u00e1 may\u00fasculas s\u00f3lo donde corresponda. Identific\u00e1 palabras claves. Respet\u00e1 las etiquetas anteriores. Agreg\u00e1 sin\u00f3nimos y us\u00e1 lenguaje natural. Trat\u00e1 de usar una sola palabra, siempre en plural. Si la etiqueta tiene m\u00e1s de una palabra, separalas por un espacio. Por ejemplo: \u201cdeclaraciones juradas\u201d. \u00c9stas son algunas preguntas \u00fatiles a la hora de pensar las etiquetas: \u00bfCu\u00e1l es el tema? \u00bfQu\u00e9 aspectos ser\u00e1n de inter\u00e9s para los usuarios? \u00bfDe qu\u00e9 otro modo buscar\u00eda el usuario esta informaci\u00f3n? \u00bfDe qu\u00e9 tipo de informaci\u00f3n se trata? \u00bfQu\u00e9 \u00e1rea la provee?","title":"Buenas pr\u00e1cticas al crear etiquetas"},{"location":"quickstart/#como-las-creo_1","text":"Al igual que con los Temas, cada vez que generes un nuevo dataset, el formulario te pedir\u00e1 que asignes un etiqueta. Record\u00e1 siempre reutilizar las que ya hayas creado y no repetirlas.","title":"\u00bfC\u00f3mo las creo?"},{"location":"quickstart/#personalizar-el-portal","text":"Hacer que tu portal represente tu organizaci\u00f3n es muy f\u00e1cil. Por favor, and\u00e1 a la P\u00e1gina principal Configuraci\u00f3n . Llegar\u00e1s a la secci\u00f3n que te permite cambiar c\u00f3mo luce la portada de tu cat\u00e1logo de datos y cada secci\u00f3n en particular.","title":"Personalizar el portal"},{"location":"quickstart/#integrar-andino-con-google-analytics","text":"Por favor, escribinos y contanos con qu\u00e9 casilla de e-mail quer\u00e9s tener permisos para ver las m\u00e9tricas de tu Andino.","title":"Integrar Andino con Google Analytics"},{"location":"quickstart/#consultas-sobre-andino","text":"Andino es un portal abierto en constante desarrollo para ser usado por toda la comunidad de datos. Por eso, cuando incorporamos una nueva mejora, cuidamos mucho su compatibilidad con la versi\u00f3n anterior . Como la comunidad de datos es grande, por ahora no podemos dar soporte t\u00e9cnico frente a modificaciones particulares del c\u00f3digo . Sin embargo, pod\u00e9s contactarnos para despejar dudas . Te invitamos a crear issues o enviarnos sugerencias en caso de que encuentren alg\u00fan bug o tengas feedback . Tambi\u00e9n pod\u00e9s mandarnos tu comentario o consulta a datos@modernizacion.gob.ar","title":"Consultas sobre Andino"},{"location":"quickstart/#otros-contenidos-utiles","text":"Gu\u00eda para el uso y la publicaci\u00f3n de metadatos Gu\u00eda para la identificaci\u00f3n y uso de entidades interoperables Gu\u00eda para la publicaci\u00f3n de datos en formatos abiertos","title":"Otros contenidos \u00fatiles"},{"location":"usage/","text":"","title":"Manual de uso"},{"location":"developers/checklist/","text":"Indice Recomendaciones para la puesta en producci\u00f3n de una instancia de Andino Verific\u00e1 que tu instancia de Andino tenga un nombre de dominio \u00fanico y bien configurado Verificar si mi Andino tiene el nombre de dominio configurado correctamente Actualizando el nombre de dominio asignado a Andino Verific\u00e1 que el contenedor portal pueda resolver el nombre de dominio asignado a la instancia Seguir las recomendaciones de seguridad Recomendaciones para la puesta en producci\u00f3n de una instancia de Andino Si est\u00e1s por configurar tu instancia de Andino para un ambiente productivo, tenemos algunas recomendaciones para que sigas y verifiques si tu instancia est\u00e1 bien configurada. Verific\u00e1 que tu instancia de Andino tenga un nombre de dominio \u00fanico y bien configurado Para el correcto funcionamiento de tu instancia de Andino, es recomendable que la misma tenga un \u00fanico nombre de dominio asignado. Una vez que tengas definido el nombre de dominio (ej: datos.ministerio.gob.ar ) y el mismo se resuelva a la IP p\u00fablica asignado al host de tu Andino (o al load balancer / frontend server que opcionalmente tengas) es importante que tu instancia de Andino conozca ese nombre de dominio y que est\u00e9 configurado para responder al mismo. Verificar si mi Andino tiene el nombre de dominio configurado correctamente Para saber si tu instancia de Andino tiene el nombre de dominio correctamente configurado segu\u00ed los siguientes pasos, ejecutando el comando en el directorio de instalaci\u00f3n de Andino (ej: /etc/portal ): docker-compose -f latest.yml exec portal grep ckan\\.site_url /etc/ckan/default/production.ini Si tu sitio est\u00e1 bien configurado, el valor del par\u00e1metro de configuraci\u00f3n ckan.site_url deber\u00e1 coincidir con el nombre de dominio de tu Andino (incluyendo el schema , http o https ): ckan.site_url=http://datos.ministerio.gob.ar/ Si \u00e9ste no coincide, deber\u00e1s modificar el valor del par\u00e1metro en la configuraci\u00f3n de tu Andino. Actualizando el nombre de dominio asignado a Andino Para actualizar el nombre de dominio que tiene tu andino (por ejemplo datos.ministerio.gob.ar ) deb\u00e9s ejecutar el siguiente comando: docker-compose -f latest . yml exec portal / etc / ckan_init . d / update_conf . sh ckan.site_url=http://datos.ministerio.gob.ar/ ; Verific\u00e1 que el contenedor portal pueda resolver el nombre de dominio asignado a la instancia Para asegurar el correcto funcionamiento de algunos componentes de la arquitectura de Andino, es necesario que desde dentro de los contenedores Docker que forman parte de la soluci\u00f3n, el nombre de dominio asignado a tu Andino pueda ser resuelto correctamente. La verificaci\u00f3n de tal condici\u00f3n est\u00e1 documentada en la secci\u00f3n DNS . Seguir las recomendaciones de seguridad La presente documentaci\u00f3n contiene un apartado acerca de recomendaciones de seguridad. Por favor leelas y segu\u00ed las recomendaciones .","title":"Recomendaciones para salir a producci\u00f3n"},{"location":"developers/checklist/#indice","text":"Recomendaciones para la puesta en producci\u00f3n de una instancia de Andino Verific\u00e1 que tu instancia de Andino tenga un nombre de dominio \u00fanico y bien configurado Verificar si mi Andino tiene el nombre de dominio configurado correctamente Actualizando el nombre de dominio asignado a Andino Verific\u00e1 que el contenedor portal pueda resolver el nombre de dominio asignado a la instancia Seguir las recomendaciones de seguridad","title":"Indice"},{"location":"developers/checklist/#recomendaciones-para-la-puesta-en-produccion-de-una-instancia-de-andino","text":"Si est\u00e1s por configurar tu instancia de Andino para un ambiente productivo, tenemos algunas recomendaciones para que sigas y verifiques si tu instancia est\u00e1 bien configurada.","title":"Recomendaciones para la puesta en producci\u00f3n de una instancia de Andino"},{"location":"developers/checklist/#verifica-que-tu-instancia-de-andino-tenga-un-nombre-de-dominio-unico-y-bien-configurado","text":"Para el correcto funcionamiento de tu instancia de Andino, es recomendable que la misma tenga un \u00fanico nombre de dominio asignado. Una vez que tengas definido el nombre de dominio (ej: datos.ministerio.gob.ar ) y el mismo se resuelva a la IP p\u00fablica asignado al host de tu Andino (o al load balancer / frontend server que opcionalmente tengas) es importante que tu instancia de Andino conozca ese nombre de dominio y que est\u00e9 configurado para responder al mismo.","title":"Verific\u00e1 que tu instancia de Andino tenga un nombre de dominio \u00fanico y bien configurado"},{"location":"developers/checklist/#verificar-si-mi-andino-tiene-el-nombre-de-dominio-configurado-correctamente","text":"Para saber si tu instancia de Andino tiene el nombre de dominio correctamente configurado segu\u00ed los siguientes pasos, ejecutando el comando en el directorio de instalaci\u00f3n de Andino (ej: /etc/portal ): docker-compose -f latest.yml exec portal grep ckan\\.site_url /etc/ckan/default/production.ini Si tu sitio est\u00e1 bien configurado, el valor del par\u00e1metro de configuraci\u00f3n ckan.site_url deber\u00e1 coincidir con el nombre de dominio de tu Andino (incluyendo el schema , http o https ): ckan.site_url=http://datos.ministerio.gob.ar/ Si \u00e9ste no coincide, deber\u00e1s modificar el valor del par\u00e1metro en la configuraci\u00f3n de tu Andino.","title":"Verificar si mi Andino tiene el nombre de dominio configurado correctamente"},{"location":"developers/checklist/#actualizando-el-nombre-de-dominio-asignado-a-andino","text":"Para actualizar el nombre de dominio que tiene tu andino (por ejemplo datos.ministerio.gob.ar ) deb\u00e9s ejecutar el siguiente comando: docker-compose -f latest . yml exec portal / etc / ckan_init . d / update_conf . sh ckan.site_url=http://datos.ministerio.gob.ar/ ;","title":"Actualizando el nombre de dominio asignado a Andino"},{"location":"developers/checklist/#verifica-que-el-contenedor-portal-pueda-resolver-el-nombre-de-dominio-asignado-a-la-instancia","text":"Para asegurar el correcto funcionamiento de algunos componentes de la arquitectura de Andino, es necesario que desde dentro de los contenedores Docker que forman parte de la soluci\u00f3n, el nombre de dominio asignado a tu Andino pueda ser resuelto correctamente. La verificaci\u00f3n de tal condici\u00f3n est\u00e1 documentada en la secci\u00f3n DNS .","title":"Verific\u00e1 que el contenedor portal pueda resolver el nombre de dominio asignado a la instancia"},{"location":"developers/checklist/#seguir-las-recomendaciones-de-seguridad","text":"La presente documentaci\u00f3n contiene un apartado acerca de recomendaciones de seguridad. Por favor leelas y segu\u00ed las recomendaciones .","title":"Seguir las recomendaciones de seguridad"},{"location":"developers/development/","text":"Indice Desarrollo Instalar un nuevo requerimiento en la imagen base Instalar nuevo requerimiento Configuraci\u00f3n Configuraci\u00f3n propia Inicio autom\u00e1tico Generaci\u00f3n del nuevo contenedor Desarrollo Instalar un nuevo requerimiento en la imagen base Instalar nuevo requerimiento Configuraci\u00f3n Configuraci\u00f3n propia Inicio autom\u00e1tico Generaci\u00f3n del nuevo contenedor Desarrollo Instalar un nuevo requerimiento en la imagen base Si necesitamos instalar y configurar un nuevo requerimiento para andino, lo recomendable es instalarlo en la imagen de datosgobar/portal-base. Esto permitir\u00e1 mantener el build de datosgobar/portal-andino m\u00e1s peque\u00f1o y r\u00e1pido. Para ejemplificar esto, supondremos que queremos levantar los workers de RQ usando supervisor. Esta implementaci\u00f3n, presente en ckan 2.7 , require levantar supervisor con una configuraci\u00f3n especial para levantar los workers. Instalar nuevo requerimiento Para instalar supervisor en el portal base, podemos hacer uso de la tarea de ansible encargada de instalar los requerimientos para la aplicaci\u00f3n. A la fecha, este c\u00f3digo se encuentra en dependencies.yml La parte que instala los requerimientos quedar\u00eda as\u00ed: - name : Install dependencies apt : name : {{ item }} state : present with_items : - libevent-dev # Otras dependencias - gettext - supervisor Al agregar supervisor , \u00e9ste ser\u00e1 instalado cuando la generaci\u00f3n de la imagen termine. Ahora, lo siguiente s\u00f3lo ser\u00eda agregar la configuraci\u00f3n para levantar las colas de rq, con la configuraci\u00f3n que trae ckan. Configuraci\u00f3n El mejor punto para agregar esta configuraci\u00f3n es en el archivo configure.yml . El mismo es utilizado despu\u00e9s de que ckan es instalado, por lo que el archivo de configuraci\u00f3n ya est\u00e1 presente en el sistema. Para eso, a\u00f1adiremos una tarea m\u00e1s de ansible, usaremos el m\u00f3dulo copy . Al final de configure.yml , agregaremos algo como: # Otras tareas - name : Copy supervisor configuration copy : src : /usr/lib/ckan/default/src/ckan/ckan/config/supervisor-ckan-worker.conf dest : /etc/supervisor/conf.d/ remote_src : yes Configuraci\u00f3n propia Algo que podr\u00edamos desear es tener nuestra propia configuraci\u00f3n de supervisor, que se basa en la que nos provee ckan. Para esto, copiamos el archivo supervisor-ckan-worker.conf desde dentro del contenedor y lo colocamos al lado de production.ini.j2 , dentro del directorio templates/ckan . Luego, cambiamos la tarea de ansible para que copie nuestro archivo: # Otras tareas - name : Copy supervisor configuration copy : src : ckan/supervisor-ckan-worker.conf dest : /etc/supervisor/conf.d/ Inicio autom\u00e1tico Para lograr que supervisor se inicie autom\u00e1tiamente cada vez que se levante el portal, debemos correr service supervisor restart mientras esta se levanta, en \"runtime\". El mejor lugar para esto es el script que se corre por defecto: start_ckan.sh.j2 . En este script, agregamos los comandos que queremos antes de que la aplicaci\u00f3n sea iniciada: # otros comandos ... echo Iniciando Supervisor service supervisor restart service apache2 stop exec {{ CKAN_INIT }} /run_andino.sh Generaci\u00f3n del nuevo contenedor Ahora, para probar estos cambios, generamos una nueva imagen de datosgobar/portal-base : base_image= datosgobar/portal-base:test cd portal-base/; docker build base_portal -t $base_image ; Esto generar\u00e1 una imagen con el tag (o nombre) \"datosgobar/portal-base:test\". Para hacer una prueba r\u00e1pida, podemos correr: docker run --rm -it datosgobar/portal-base:test supervisord -n Este comando iniciar\u00e1 un contenedor con supervisor corriendo. Deber\u00edamos ver en consola los siguiente mensajes (podemos salir del contenedor usando Ctrl+c ): 2018-06-22 18:55:46,593 CRIT Supervisor running as root (no user in config file) 2018-06-22 18:55:46,593 WARN Included extra file /etc/supervisor/conf.d/supervisor-ckan-worker.conf during parsing 2018-06-22 18:55:46,615 INFO RPC interface supervisor initialized Para probar esto directamente en el contenedor de portl-andino , debemos generar una nueva imagen del contenedor en base a la imagen del portal base . Para esto, en el archivo Dockerfile del portal, cambiamos el FROM , utilizando la imagen temporal que acabamos de crear: FROM datosgobar/portal-base:test # ... otros comandos Ahora, generamos la nueva imagen: cd portal-andino/ docker build -t portal-andino:test . Luego, iniciamos la aplicaci\u00f3n en modo desarrollo: cd portal-andino/ ./dev.sh setup; Una vez iniciada la aplicaci\u00f3n, entramos al contenedor y verificamos que supervisor est\u00e9 corriendo: cd portal-andino/ ./dev.sh console # Una vez en el contenedor supervisorctl En este momento, deber\u00edamos ver el estado de supervisor. Para salir, usamos Ctrl + C . Si comprobamos que el nuevo requerimiento est\u00e1 instalado y configurado, volvemos el Dockerfile a su estado anterior (deshaciendo el cambio en el FROM ). Luego, debemos sacar una nueva imagen del portal-base y, finalmente, una nueva de portal-andino que se base en la anterior.","title":"Desarrollo"},{"location":"developers/development/#indice","text":"Desarrollo Instalar un nuevo requerimiento en la imagen base Instalar nuevo requerimiento Configuraci\u00f3n Configuraci\u00f3n propia Inicio autom\u00e1tico Generaci\u00f3n del nuevo contenedor Desarrollo Instalar un nuevo requerimiento en la imagen base Instalar nuevo requerimiento Configuraci\u00f3n Configuraci\u00f3n propia Inicio autom\u00e1tico Generaci\u00f3n del nuevo contenedor","title":"Indice"},{"location":"developers/development/#desarrollo","text":"","title":"Desarrollo"},{"location":"developers/development/#instalar-un-nuevo-requerimiento-en-la-imagen-base","text":"Si necesitamos instalar y configurar un nuevo requerimiento para andino, lo recomendable es instalarlo en la imagen de datosgobar/portal-base. Esto permitir\u00e1 mantener el build de datosgobar/portal-andino m\u00e1s peque\u00f1o y r\u00e1pido. Para ejemplificar esto, supondremos que queremos levantar los workers de RQ usando supervisor. Esta implementaci\u00f3n, presente en ckan 2.7 , require levantar supervisor con una configuraci\u00f3n especial para levantar los workers.","title":"Instalar un nuevo requerimiento en la imagen base"},{"location":"developers/development/#instalar-nuevo-requerimiento","text":"Para instalar supervisor en el portal base, podemos hacer uso de la tarea de ansible encargada de instalar los requerimientos para la aplicaci\u00f3n. A la fecha, este c\u00f3digo se encuentra en dependencies.yml La parte que instala los requerimientos quedar\u00eda as\u00ed: - name : Install dependencies apt : name : {{ item }} state : present with_items : - libevent-dev # Otras dependencias - gettext - supervisor Al agregar supervisor , \u00e9ste ser\u00e1 instalado cuando la generaci\u00f3n de la imagen termine. Ahora, lo siguiente s\u00f3lo ser\u00eda agregar la configuraci\u00f3n para levantar las colas de rq, con la configuraci\u00f3n que trae ckan.","title":"Instalar nuevo requerimiento"},{"location":"developers/development/#configuracion","text":"El mejor punto para agregar esta configuraci\u00f3n es en el archivo configure.yml . El mismo es utilizado despu\u00e9s de que ckan es instalado, por lo que el archivo de configuraci\u00f3n ya est\u00e1 presente en el sistema. Para eso, a\u00f1adiremos una tarea m\u00e1s de ansible, usaremos el m\u00f3dulo copy . Al final de configure.yml , agregaremos algo como: # Otras tareas - name : Copy supervisor configuration copy : src : /usr/lib/ckan/default/src/ckan/ckan/config/supervisor-ckan-worker.conf dest : /etc/supervisor/conf.d/ remote_src : yes","title":"Configuraci\u00f3n"},{"location":"developers/development/#configuracion-propia","text":"Algo que podr\u00edamos desear es tener nuestra propia configuraci\u00f3n de supervisor, que se basa en la que nos provee ckan. Para esto, copiamos el archivo supervisor-ckan-worker.conf desde dentro del contenedor y lo colocamos al lado de production.ini.j2 , dentro del directorio templates/ckan . Luego, cambiamos la tarea de ansible para que copie nuestro archivo: # Otras tareas - name : Copy supervisor configuration copy : src : ckan/supervisor-ckan-worker.conf dest : /etc/supervisor/conf.d/","title":"Configuraci\u00f3n propia"},{"location":"developers/development/#inicio-automatico","text":"Para lograr que supervisor se inicie autom\u00e1tiamente cada vez que se levante el portal, debemos correr service supervisor restart mientras esta se levanta, en \"runtime\". El mejor lugar para esto es el script que se corre por defecto: start_ckan.sh.j2 . En este script, agregamos los comandos que queremos antes de que la aplicaci\u00f3n sea iniciada: # otros comandos ... echo Iniciando Supervisor service supervisor restart service apache2 stop exec {{ CKAN_INIT }} /run_andino.sh","title":"Inicio autom\u00e1tico"},{"location":"developers/development/#generacion-del-nuevo-contenedor","text":"Ahora, para probar estos cambios, generamos una nueva imagen de datosgobar/portal-base : base_image= datosgobar/portal-base:test cd portal-base/; docker build base_portal -t $base_image ; Esto generar\u00e1 una imagen con el tag (o nombre) \"datosgobar/portal-base:test\". Para hacer una prueba r\u00e1pida, podemos correr: docker run --rm -it datosgobar/portal-base:test supervisord -n Este comando iniciar\u00e1 un contenedor con supervisor corriendo. Deber\u00edamos ver en consola los siguiente mensajes (podemos salir del contenedor usando Ctrl+c ): 2018-06-22 18:55:46,593 CRIT Supervisor running as root (no user in config file) 2018-06-22 18:55:46,593 WARN Included extra file /etc/supervisor/conf.d/supervisor-ckan-worker.conf during parsing 2018-06-22 18:55:46,615 INFO RPC interface supervisor initialized Para probar esto directamente en el contenedor de portl-andino , debemos generar una nueva imagen del contenedor en base a la imagen del portal base . Para esto, en el archivo Dockerfile del portal, cambiamos el FROM , utilizando la imagen temporal que acabamos de crear: FROM datosgobar/portal-base:test # ... otros comandos Ahora, generamos la nueva imagen: cd portal-andino/ docker build -t portal-andino:test . Luego, iniciamos la aplicaci\u00f3n en modo desarrollo: cd portal-andino/ ./dev.sh setup; Una vez iniciada la aplicaci\u00f3n, entramos al contenedor y verificamos que supervisor est\u00e9 corriendo: cd portal-andino/ ./dev.sh console # Una vez en el contenedor supervisorctl En este momento, deber\u00edamos ver el estado de supervisor. Para salir, usamos Ctrl + C . Si comprobamos que el nuevo requerimiento est\u00e1 instalado y configurado, volvemos el Dockerfile a su estado anterior (deshaciendo el cambio en el FROM ). Luego, debemos sacar una nueva imagen del portal-base y, finalmente, una nueva de portal-andino que se base en la anterior.","title":"Generaci\u00f3n del nuevo contenedor"},{"location":"developers/dns/","text":"Indice Configuraci\u00f3n de DNS Introducci\u00f3n C\u00f3mo diagnosticar si tu andino tiene el problema C\u00f3mo resolver el problema Configuraci\u00f3n de DNS p\u00fablicos Configurar andino con el nuevo nombre de dominio Configurar un alias en la red de Docker para el contenedor nginx Verificando que el problema fue resuelto Configuraci\u00f3n de DNS Introducci\u00f3n Algunas funcionalidades del Portal Andino requieren que la aplicaci\u00f3n web o procesos externos (ej: DataPusher) puedan navegar sin restricciones desde el proceso en el cual corre la aplicaci\u00f3n Python a la URL donde est\u00e1 publicado el sitio (definida por el setting ckan.site_url ). Esta URL debe poder ser accedida sin problemas de resoluci\u00f3n de nombres o de ruteo de IPs desde el mismo contenedor portal para el correcto funcionamiento del sitio. Algunas instancias de Andino han reportado problemas de funcionamiento debido a que la infraestructura donde est\u00e1n alojados no permite esta resoluci\u00f3n de nombres de manera correcta. Este art\u00edculo describe c\u00f3mo diagnosticar el problema y propone soluciones al mismo. Record\u00e1 que todos los comandos de este art\u00edculo deben ser ejecutados en el directorio donde instalaste andino, por ejemplo /etc/portal . C\u00f3mo diagnosticar si tu andino tiene el problema Para saber si es necesario realizar las configuraciones detalladas en este art\u00edculo, pod\u00e9s realizar los siguientes pasos detallados abajo. Obtener el valor de ckan.site_url : el valor se puede obtener ejecutando el siguiente comando: docker-compose -f latest.yml exec portal grep ckan\\.site_url /etc/ckan/default/production.ini . Ese comando deber\u00eda devolver ckan.site_url = URL de tu Andino . Evaluar si tu andino puede navegar hasta la URL del sitio. Ejecut\u00e1 el siguiente comando: docker-compose -f latest.yml exec portal curl URL de tu Andino /data.json . Si el segundo paso no devuelve una respuesta en formato json con la informaci\u00f3n del cat\u00e1logo de tu instancia id\u00e9ntica a la que obtendr\u00edas navegando desde tu navegador a URL de tu Andino /data.json (por ejemplo, luego de un rato obten\u00e9s curl: (7) Failed to connect to URL de tu Andino port 80: Connection timed out ), entonces deb\u00e9s aplicar la configuraci\u00f3n recomendada en este art\u00edculo . C\u00f3mo resolver el problema La soluci\u00f3n del problema se basa en asegurar que dentro de la red de Docker el nombre de dominio de Andino pueda resolverse correctamente a la IP p\u00fablica del host, a la IP privada dentro de la red en la que est\u00e1 o a la IP interna dentro de la red de Docker. Para lograrlo, planteamos distintas alternativas. Configuraci\u00f3n de DNS p\u00fablicos Este paso no est\u00e1 cubierto por esta documentaci\u00f3n, ya que puede ser resuelto mediante formas diversas, dependiendo de la infraestructura con la que cont\u00e1s. Lo que deb\u00e9s hacer es contactarte con tu administrador de infraestructura y solicitar una IP p\u00fablica fija y un nombre de dominio para la instancia de tu andino. Probablemente ya tengas un nombre de dominio asignado a tu instancia de andino, con lo cual pod\u00e9s saltar este paso. Configurar andino con el nuevo nombre de dominio Si ya ten\u00e9s un nombre de dominio asignado para acceder a tu andino, y cuando lo instalaste lo configuraste usando ese nombre de dominio, pod\u00e9s saltar este paso. Para configurar el nuevo nombre de dominio es necesario actualizar el setting ckan.site_url de la instancia de Andino. Esto lo pod\u00e9s lograr con el siguiente comando: docker-compose -f latest.yml exec portal /etc/ckan_init.d/update_conf.sh \"ckan.site_url=http:// tu nombre de dominio \" . Pod\u00e9s verificar que haya quedado bien configurado ejecutando: docker-compose -f latest.yml exec portal grep ckan\\.site_url /etc/ckan/default/production.ini . Para reflejar los cambios, es neceario reiniciar la aplicaci\u00f3n web del contenedor portal : docker-compose -f latest.yml exec portal apachectl restart . Finalmente, si ya ten\u00edas datos cargados en tu andino, necesit\u00e1s regenerar el \u00edndice de b\u00fasqueda, usando el siguiente comando: docker-compose -f latest.yml exec portal /etc/ckan_init.d/run_rebuild_search.sh Configurar un alias en la red de Docker para el contenedor nginx Si, a\u00fan teniendo un nombre de dominio asignado, tu portal no puede resolver el mismo a la IP p\u00fablica del servidor, pod\u00e9s modificar la configuraci\u00f3n de la red de Docker usada por Andino para mapear el nombre de dominio de tu instancia al contenedor nginx . Acalaraci\u00f3n: Esta configuraci\u00f3n se realiza por defecto para todas las instancias de Andino desde la versi\u00f3n 2.5. Si tu instancia de Andino fue creada antes de la versi\u00f3n 2.5 , seguramente quieras realizar estos pasos. Para asegurarte de que la red interna de los contenedores de Docker que conforman Andino tienen la configuraci\u00f3n necesaria para la correcta resoluci\u00f3n de nombres, pod\u00e9s seguir los siguientes pasos (todos en el directorio de instalaci\u00f3n de Andino, por ejemplo /etc/portal ): Edit\u00e1 el archivo .env y asegurate que el valor del atributo SITE_HOST tenga el valor del hostname de tu instancia de Andino, sin http . Si no encontr\u00e1s una entrada para SITE_HOST en tu archivo .env , agregala al final. Por ejemplo deber\u00eda ser SITE_HOST=mi-andino.mi-ministerio.gob.ar . Descarg\u00e1 la \u00faltima versi\u00f3n de latest.yml : mv latest.yml latest.yml.bak wget https://raw.githubusercontent.com/datosgobar/portal-andino/master/latest.yml . Probablemente ya tengas esta misma versi\u00f3n si actualizaste a Andino 2.5, pero para asegurarnos de que tengas los \u00faltimos cambios necesarios para esta configuraci\u00f3n es necesario realizar este paso. Recre\u00e1 el contenedor nginx : docker-compose -f latest.yml up -d nginx . Record\u00e1 que este paso puede generar algo de downtime , por lo que quiz\u00e1s sea prudente realizarlo en alg\u00fan horario con poco tr\u00e1fico en Andino. Verificando que el problema fue resuelto Si el problema fue resuelto, ahora podr\u00edas realizar el procedimiento detallado en C\u00f3mo diagnosticar si tu andino tiene el problema y deber\u00edas obtener un json como respuesta.","title":"Configuraci\u00f3n de DNS"},{"location":"developers/dns/#indice","text":"Configuraci\u00f3n de DNS Introducci\u00f3n C\u00f3mo diagnosticar si tu andino tiene el problema C\u00f3mo resolver el problema Configuraci\u00f3n de DNS p\u00fablicos Configurar andino con el nuevo nombre de dominio Configurar un alias en la red de Docker para el contenedor nginx Verificando que el problema fue resuelto","title":"Indice"},{"location":"developers/dns/#configuracion-de-dns","text":"","title":"Configuraci\u00f3n de DNS"},{"location":"developers/dns/#introduccion","text":"Algunas funcionalidades del Portal Andino requieren que la aplicaci\u00f3n web o procesos externos (ej: DataPusher) puedan navegar sin restricciones desde el proceso en el cual corre la aplicaci\u00f3n Python a la URL donde est\u00e1 publicado el sitio (definida por el setting ckan.site_url ). Esta URL debe poder ser accedida sin problemas de resoluci\u00f3n de nombres o de ruteo de IPs desde el mismo contenedor portal para el correcto funcionamiento del sitio. Algunas instancias de Andino han reportado problemas de funcionamiento debido a que la infraestructura donde est\u00e1n alojados no permite esta resoluci\u00f3n de nombres de manera correcta. Este art\u00edculo describe c\u00f3mo diagnosticar el problema y propone soluciones al mismo. Record\u00e1 que todos los comandos de este art\u00edculo deben ser ejecutados en el directorio donde instalaste andino, por ejemplo /etc/portal .","title":"Introducci\u00f3n"},{"location":"developers/dns/#como-diagnosticar-si-tu-andino-tiene-el-problema","text":"Para saber si es necesario realizar las configuraciones detalladas en este art\u00edculo, pod\u00e9s realizar los siguientes pasos detallados abajo. Obtener el valor de ckan.site_url : el valor se puede obtener ejecutando el siguiente comando: docker-compose -f latest.yml exec portal grep ckan\\.site_url /etc/ckan/default/production.ini . Ese comando deber\u00eda devolver ckan.site_url = URL de tu Andino . Evaluar si tu andino puede navegar hasta la URL del sitio. Ejecut\u00e1 el siguiente comando: docker-compose -f latest.yml exec portal curl URL de tu Andino /data.json . Si el segundo paso no devuelve una respuesta en formato json con la informaci\u00f3n del cat\u00e1logo de tu instancia id\u00e9ntica a la que obtendr\u00edas navegando desde tu navegador a URL de tu Andino /data.json (por ejemplo, luego de un rato obten\u00e9s curl: (7) Failed to connect to URL de tu Andino port 80: Connection timed out ), entonces deb\u00e9s aplicar la configuraci\u00f3n recomendada en este art\u00edculo .","title":"C\u00f3mo diagnosticar si tu andino tiene el problema"},{"location":"developers/dns/#como-resolver-el-problema","text":"La soluci\u00f3n del problema se basa en asegurar que dentro de la red de Docker el nombre de dominio de Andino pueda resolverse correctamente a la IP p\u00fablica del host, a la IP privada dentro de la red en la que est\u00e1 o a la IP interna dentro de la red de Docker. Para lograrlo, planteamos distintas alternativas.","title":"C\u00f3mo resolver el problema"},{"location":"developers/dns/#configuracion-de-dns-publicos","text":"Este paso no est\u00e1 cubierto por esta documentaci\u00f3n, ya que puede ser resuelto mediante formas diversas, dependiendo de la infraestructura con la que cont\u00e1s. Lo que deb\u00e9s hacer es contactarte con tu administrador de infraestructura y solicitar una IP p\u00fablica fija y un nombre de dominio para la instancia de tu andino. Probablemente ya tengas un nombre de dominio asignado a tu instancia de andino, con lo cual pod\u00e9s saltar este paso.","title":"Configuraci\u00f3n de DNS p\u00fablicos"},{"location":"developers/dns/#configurar-andino-con-el-nuevo-nombre-de-dominio","text":"Si ya ten\u00e9s un nombre de dominio asignado para acceder a tu andino, y cuando lo instalaste lo configuraste usando ese nombre de dominio, pod\u00e9s saltar este paso. Para configurar el nuevo nombre de dominio es necesario actualizar el setting ckan.site_url de la instancia de Andino. Esto lo pod\u00e9s lograr con el siguiente comando: docker-compose -f latest.yml exec portal /etc/ckan_init.d/update_conf.sh \"ckan.site_url=http:// tu nombre de dominio \" . Pod\u00e9s verificar que haya quedado bien configurado ejecutando: docker-compose -f latest.yml exec portal grep ckan\\.site_url /etc/ckan/default/production.ini . Para reflejar los cambios, es neceario reiniciar la aplicaci\u00f3n web del contenedor portal : docker-compose -f latest.yml exec portal apachectl restart . Finalmente, si ya ten\u00edas datos cargados en tu andino, necesit\u00e1s regenerar el \u00edndice de b\u00fasqueda, usando el siguiente comando: docker-compose -f latest.yml exec portal /etc/ckan_init.d/run_rebuild_search.sh","title":"Configurar andino con el nuevo nombre de dominio"},{"location":"developers/dns/#configurar-un-alias-en-la-red-de-docker-para-el-contenedor-nginx","text":"Si, a\u00fan teniendo un nombre de dominio asignado, tu portal no puede resolver el mismo a la IP p\u00fablica del servidor, pod\u00e9s modificar la configuraci\u00f3n de la red de Docker usada por Andino para mapear el nombre de dominio de tu instancia al contenedor nginx . Acalaraci\u00f3n: Esta configuraci\u00f3n se realiza por defecto para todas las instancias de Andino desde la versi\u00f3n 2.5. Si tu instancia de Andino fue creada antes de la versi\u00f3n 2.5 , seguramente quieras realizar estos pasos. Para asegurarte de que la red interna de los contenedores de Docker que conforman Andino tienen la configuraci\u00f3n necesaria para la correcta resoluci\u00f3n de nombres, pod\u00e9s seguir los siguientes pasos (todos en el directorio de instalaci\u00f3n de Andino, por ejemplo /etc/portal ): Edit\u00e1 el archivo .env y asegurate que el valor del atributo SITE_HOST tenga el valor del hostname de tu instancia de Andino, sin http . Si no encontr\u00e1s una entrada para SITE_HOST en tu archivo .env , agregala al final. Por ejemplo deber\u00eda ser SITE_HOST=mi-andino.mi-ministerio.gob.ar . Descarg\u00e1 la \u00faltima versi\u00f3n de latest.yml : mv latest.yml latest.yml.bak wget https://raw.githubusercontent.com/datosgobar/portal-andino/master/latest.yml . Probablemente ya tengas esta misma versi\u00f3n si actualizaste a Andino 2.5, pero para asegurarnos de que tengas los \u00faltimos cambios necesarios para esta configuraci\u00f3n es necesario realizar este paso. Recre\u00e1 el contenedor nginx : docker-compose -f latest.yml up -d nginx . Record\u00e1 que este paso puede generar algo de downtime , por lo que quiz\u00e1s sea prudente realizarlo en alg\u00fan horario con poco tr\u00e1fico en Andino.","title":"Configurar un alias en la red de Docker para el contenedor nginx"},{"location":"developers/dns/#verificando-que-el-problema-fue-resuelto","text":"Si el problema fue resuelto, ahora podr\u00edas realizar el procedimiento detallado en C\u00f3mo diagnosticar si tu andino tiene el problema y deber\u00edas obtener un json como respuesta.","title":"Verificando que el problema fue resuelto"},{"location":"developers/docker/","text":"Generaci\u00f3n de im\u00e1genes Docker Generaci\u00f3n de im\u00e1genes Docker Para generar las im\u00e1genes, ejecutar la aplicaci\u00f3n y levantarla, previamente es necesario instalar Docker y docker-compose : Instalar Docker Instalar docker-compose Actualmente, el repositorio contiene 1 arhivo Dockerfile y 2 archivos docker-compose Dockerfile : Se usa para generar la imagen de la aplicaci\u00f3n dev.yml : Archivo de docker-compose para levantar los servicios necesarios y generar la imagen de la aplicaci\u00f3n. latest.yml : Archivo de docker-compose para levantar la aplicaci\u00f3n a su \u00faltima version. (ver instalaci\u00f3n ) Para levantar toda la aplicacion, se puede correr: $ docker-compose -f dev.yml up -d nginx Si es la primera vez que se corre este comando, puede llegar a tardar bastante en descargar las im\u00e1genes. Una vez terminado, dejar en el puerto localhost:80 la aplicacion ejecut\u00e1ndose, pero antes se debe correr un comando para inicializar el desarrollo: $ docker exec -it andino /etc/ckan_init.d/init_dev.sh Tambi\u00e9n se pueden levantar los servicios por separado de la aplicaci\u00f3n: Los servicios : $ docker-compose -f dev.yml up --build --abort-on-container-exit db sol redis postfix La aplicaci\u00f3n andino que tendr\u00e1 el puerto 8080 y en el 8800 el datapusher. $ docker-compose -f dev.yml up --abort-on-container-exit --build --no-deps portal Nginx que estar\u00e1 en el puerto 80 : $ docker-compose -f dev.yml up -d --no-deps nginx Eso levantar\u00e1 la aplicaci\u00f3n con el directorio actual ( $PWD ) disponible dentro del directorio /dev-app del container. Para acceder a la aplicaci\u00f3n, hacer modificaciones en runtime , basta con correr el comando: $ docker-compose -f dev.yml exec andino /bin/bash","title":"Generaci\u00f3n de im\u00e1genes Docker"},{"location":"developers/docker/#generacion-de-imagenes-docker","text":"Generaci\u00f3n de im\u00e1genes Docker Para generar las im\u00e1genes, ejecutar la aplicaci\u00f3n y levantarla, previamente es necesario instalar Docker y docker-compose : Instalar Docker Instalar docker-compose Actualmente, el repositorio contiene 1 arhivo Dockerfile y 2 archivos docker-compose Dockerfile : Se usa para generar la imagen de la aplicaci\u00f3n dev.yml : Archivo de docker-compose para levantar los servicios necesarios y generar la imagen de la aplicaci\u00f3n. latest.yml : Archivo de docker-compose para levantar la aplicaci\u00f3n a su \u00faltima version. (ver instalaci\u00f3n ) Para levantar toda la aplicacion, se puede correr: $ docker-compose -f dev.yml up -d nginx Si es la primera vez que se corre este comando, puede llegar a tardar bastante en descargar las im\u00e1genes. Una vez terminado, dejar en el puerto localhost:80 la aplicacion ejecut\u00e1ndose, pero antes se debe correr un comando para inicializar el desarrollo: $ docker exec -it andino /etc/ckan_init.d/init_dev.sh Tambi\u00e9n se pueden levantar los servicios por separado de la aplicaci\u00f3n: Los servicios : $ docker-compose -f dev.yml up --build --abort-on-container-exit db sol redis postfix La aplicaci\u00f3n andino que tendr\u00e1 el puerto 8080 y en el 8800 el datapusher. $ docker-compose -f dev.yml up --abort-on-container-exit --build --no-deps portal Nginx que estar\u00e1 en el puerto 80 : $ docker-compose -f dev.yml up -d --no-deps nginx Eso levantar\u00e1 la aplicaci\u00f3n con el directorio actual ( $PWD ) disponible dentro del directorio /dev-app del container. Para acceder a la aplicaci\u00f3n, hacer modificaciones en runtime , basta con correr el comando: $ docker-compose -f dev.yml exec andino /bin/bash","title":"Generaci\u00f3n de im\u00e1genes Docker"},{"location":"developers/https/","text":"Indice Configuraci\u00f3n HTTPS Certificado SSL Configuraci\u00f3n de SSL Modificar el puerto Realizar cambios en un Andino instalado Probar la configuraci\u00f3n Renovar certificados SSL Deshabilitar SSL Configuraci\u00f3n HTTPS Certificado SSL Andino cuenta con soporte builtin de certificados SSL. Es posible instalar Andino con SSL, actualizar una versi\u00f3n de Andino sin SSL y agregarle el soporte para SSL, e inclusive deshabilitar SSL a una instancia con SSL. Lo \u00fanico que un administrador de Andino necesita para habilitar SSL es contar con los certificados .key y .crt para nuestra aplicaci\u00f3n y la elecci\u00f3n de un puerto libre del host para usar SSL. C\u00f3mo obtener estos archivos est\u00e1 fuera del \"scope\" de esta documentaci\u00f3n. Configuraci\u00f3n de SSL Tanto la instalaci\u00f3n como la actualizaci\u00f3n de un Andino emplean el uso de un par\u00e1metro llamado nginx_ssl , el cual puede ser utilizado para especificar que se desea utilizar SSL. Para especificar el path de los archivos del certificado, se debe utilizar los par\u00e1metros ssl_key_path y ssl_crt_path . Los archivos dentro del contenedor nginx se llamar\u00e1n andino.key y andino.crt respectivamente, y el proceso de instalaci\u00f3n o actualizaci\u00f3n los copiar\u00e1 en el directorio /etc/nginx/ssl . En caso de que al menos uno de estos archivos no est\u00e9, no se podr\u00e1 utilizar el archivo de configuraci\u00f3n para SSL y se elegir\u00e1 el default en su lugar. Hay que asegurarse de que el path de cada archivo sea v\u00e1lido (exista en el host), y que est\u00e9n especificados en la instalaci\u00f3n/actualizaci\u00f3n. Un navegador web no deber\u00eda mostrarnos ninguna advertencia si los certificados son correctos. Un ejemplo de uso dentro del comando de instalaci\u00f3n de Andino para los par\u00e1metros mencionados: --nginx_ssl --ssl_key_path= /home/miusuario/Desktop/mi_archivo_key.key --ssl_crt_path= /home/miusuario/Desktop/mi_archivo_crt.crt Estos par\u00e1metros de configuraci\u00f3n deben ser especificados en cada actualizaci\u00f3n de Andino, para mantener SSL habilitado. Modificar el puerto Para la instalaci\u00f3n de Andino, el puerto a ser utilizado por default es el 443, pero \u00e9ste puede ser cambiado mediante el par\u00e1metro nginx_ssl_port y un valor a elecci\u00f3n. Ejemplo: --nginx_ssl_port=8443 Es importante para los administradores saber que Andino tomar\u00e1 el puerto especificado (o el default) ya sea que el portal use o no use HTTPS. En caso de no querer usar HTTPS y que el host tenga erl puerto 443 tomado por un servidor web, es requisito especificar un puerto distinto (ejemplo: 8443) que ser\u00e1 reservado por Andino, pero no utilizado. Realizar cambios en un Andino instalado Para lograr que Andino implemente la configuraci\u00f3n HTTPS, es necesario realizar una actualizaci\u00f3n de andino y especificar las opciones detalladas en la secci\u00f3n Configuraci\u00f3n de SSL . Estas opciones solo son v\u00e1lidas a partir de Andino release-2.5.2 . Probar la configuraci\u00f3n Para asegurarse de que Nginx est\u00e9 utilizando la configuraci\u00f3n HTTPS, ejecutar el siguiente comando deber\u00eda mostrar nginx_ssl.conf : docker exec -it andino-nginx bash -c 'echo $NGINX_CONFIG_FILE' . Si se est\u00e1 implementando la configuraci\u00f3n HTTPS y los certificados fueron creados correctamente, el explorador deber\u00eda redirigir cualquier llamada HTTP a HTTPS. Si se especific\u00f3 un puerto para SSL, el portal deber\u00eda permitir el ingreso si el puerto es parte de la URL. Tambi\u00e9n deber\u00edas poder navegar el portal en el puerto SSL seleccionado. Renovar certificados SSL Para renovar los certificados SSL de tu instancia de Andino es tan sencillo como ejecutar una actualizaci\u00f3n de Andino. Para llevarlo a cabo es necesario que subas los dos archivos que componen el certificado ( .cer y .key ) y que ejecutes el comando de actualizaci\u00f3n de Andino, especificando la opci\u00f3n --nginx_ssl y las opciones que permiten configurar los archivos del certificado como esta\u00e1 especificado en la secci\u00f3n Configuraci\u00f3n de SSL . Si dese\u00e1s mantener la versi\u00f3n de Andino que ten\u00e9s, deb\u00e9s especificar la opci\u00f3n --andino_version con la versi\u00f3n de tu instancia de Andino. Deshabilitar SSL El proceso de deshabilitaci\u00f3n de SSL se puede lograr mediante la ejecuci\u00f3n del proceso de actualizaci\u00f3n de Andino update.py especificando el par\u00e1metro --andino_version a una versi\u00f3n igual a la del portal a configurar (es decir, se mantendr\u00e1 la misma versi\u00f3n), pero no especificando el par\u00e1metro --nginx_ssl . De esta manera el script de actualizaci\u00f3n usar\u00e1 la configuraci\u00f3n de Andino que no habilita HTTPS y se habilitar\u00e1 el acceso por el puerto 80. Ejemplo de uso: sudo wget https://raw.github.com/datosgobar/portal-andino/master/install/update.py sudo python update.py --andino_version= lt;versi\u00f3n del andino del portal gt;","title":"Configuraci\u00f3n HTTPS"},{"location":"developers/https/#indice","text":"Configuraci\u00f3n HTTPS Certificado SSL Configuraci\u00f3n de SSL Modificar el puerto Realizar cambios en un Andino instalado Probar la configuraci\u00f3n Renovar certificados SSL Deshabilitar SSL","title":"Indice"},{"location":"developers/https/#configuracion-https","text":"","title":"Configuraci\u00f3n HTTPS"},{"location":"developers/https/#certificado-ssl","text":"Andino cuenta con soporte builtin de certificados SSL. Es posible instalar Andino con SSL, actualizar una versi\u00f3n de Andino sin SSL y agregarle el soporte para SSL, e inclusive deshabilitar SSL a una instancia con SSL. Lo \u00fanico que un administrador de Andino necesita para habilitar SSL es contar con los certificados .key y .crt para nuestra aplicaci\u00f3n y la elecci\u00f3n de un puerto libre del host para usar SSL. C\u00f3mo obtener estos archivos est\u00e1 fuera del \"scope\" de esta documentaci\u00f3n.","title":"Certificado SSL"},{"location":"developers/https/#configuracion-de-ssl","text":"Tanto la instalaci\u00f3n como la actualizaci\u00f3n de un Andino emplean el uso de un par\u00e1metro llamado nginx_ssl , el cual puede ser utilizado para especificar que se desea utilizar SSL. Para especificar el path de los archivos del certificado, se debe utilizar los par\u00e1metros ssl_key_path y ssl_crt_path . Los archivos dentro del contenedor nginx se llamar\u00e1n andino.key y andino.crt respectivamente, y el proceso de instalaci\u00f3n o actualizaci\u00f3n los copiar\u00e1 en el directorio /etc/nginx/ssl . En caso de que al menos uno de estos archivos no est\u00e9, no se podr\u00e1 utilizar el archivo de configuraci\u00f3n para SSL y se elegir\u00e1 el default en su lugar. Hay que asegurarse de que el path de cada archivo sea v\u00e1lido (exista en el host), y que est\u00e9n especificados en la instalaci\u00f3n/actualizaci\u00f3n. Un navegador web no deber\u00eda mostrarnos ninguna advertencia si los certificados son correctos. Un ejemplo de uso dentro del comando de instalaci\u00f3n de Andino para los par\u00e1metros mencionados: --nginx_ssl --ssl_key_path= /home/miusuario/Desktop/mi_archivo_key.key --ssl_crt_path= /home/miusuario/Desktop/mi_archivo_crt.crt Estos par\u00e1metros de configuraci\u00f3n deben ser especificados en cada actualizaci\u00f3n de Andino, para mantener SSL habilitado.","title":"Configuraci\u00f3n de SSL"},{"location":"developers/https/#modificar-el-puerto","text":"Para la instalaci\u00f3n de Andino, el puerto a ser utilizado por default es el 443, pero \u00e9ste puede ser cambiado mediante el par\u00e1metro nginx_ssl_port y un valor a elecci\u00f3n. Ejemplo: --nginx_ssl_port=8443 Es importante para los administradores saber que Andino tomar\u00e1 el puerto especificado (o el default) ya sea que el portal use o no use HTTPS. En caso de no querer usar HTTPS y que el host tenga erl puerto 443 tomado por un servidor web, es requisito especificar un puerto distinto (ejemplo: 8443) que ser\u00e1 reservado por Andino, pero no utilizado.","title":"Modificar el puerto"},{"location":"developers/https/#realizar-cambios-en-un-andino-instalado","text":"Para lograr que Andino implemente la configuraci\u00f3n HTTPS, es necesario realizar una actualizaci\u00f3n de andino y especificar las opciones detalladas en la secci\u00f3n Configuraci\u00f3n de SSL . Estas opciones solo son v\u00e1lidas a partir de Andino release-2.5.2 .","title":"Realizar cambios en un Andino instalado"},{"location":"developers/https/#probar-la-configuracion","text":"Para asegurarse de que Nginx est\u00e9 utilizando la configuraci\u00f3n HTTPS, ejecutar el siguiente comando deber\u00eda mostrar nginx_ssl.conf : docker exec -it andino-nginx bash -c 'echo $NGINX_CONFIG_FILE' . Si se est\u00e1 implementando la configuraci\u00f3n HTTPS y los certificados fueron creados correctamente, el explorador deber\u00eda redirigir cualquier llamada HTTP a HTTPS. Si se especific\u00f3 un puerto para SSL, el portal deber\u00eda permitir el ingreso si el puerto es parte de la URL. Tambi\u00e9n deber\u00edas poder navegar el portal en el puerto SSL seleccionado.","title":"Probar la configuraci\u00f3n"},{"location":"developers/https/#renovar-certificados-ssl","text":"Para renovar los certificados SSL de tu instancia de Andino es tan sencillo como ejecutar una actualizaci\u00f3n de Andino. Para llevarlo a cabo es necesario que subas los dos archivos que componen el certificado ( .cer y .key ) y que ejecutes el comando de actualizaci\u00f3n de Andino, especificando la opci\u00f3n --nginx_ssl y las opciones que permiten configurar los archivos del certificado como esta\u00e1 especificado en la secci\u00f3n Configuraci\u00f3n de SSL . Si dese\u00e1s mantener la versi\u00f3n de Andino que ten\u00e9s, deb\u00e9s especificar la opci\u00f3n --andino_version con la versi\u00f3n de tu instancia de Andino.","title":"Renovar certificados SSL"},{"location":"developers/https/#deshabilitar-ssl","text":"El proceso de deshabilitaci\u00f3n de SSL se puede lograr mediante la ejecuci\u00f3n del proceso de actualizaci\u00f3n de Andino update.py especificando el par\u00e1metro --andino_version a una versi\u00f3n igual a la del portal a configurar (es decir, se mantendr\u00e1 la misma versi\u00f3n), pero no especificando el par\u00e1metro --nginx_ssl . De esta manera el script de actualizaci\u00f3n usar\u00e1 la configuraci\u00f3n de Andino que no habilita HTTPS y se habilitar\u00e1 el acceso por el puerto 80. Ejemplo de uso: sudo wget https://raw.github.com/datosgobar/portal-andino/master/install/update.py sudo python update.py --andino_version= lt;versi\u00f3n del andino del portal gt;","title":"Deshabilitar SSL"},{"location":"developers/install/","text":"Indice Instalaci\u00f3n Dependencias Instalaci\u00f3n simplificada de andino Instalaci\u00f3n avanzada de andino Desinstalar andino Instalaci\u00f3n Teniendo en cuenta la dificultad de implementaci\u00f3n e incluso la cantidad de pasos para lograr un deploy existoso, existen dos formas de instalar esta distribuci\u00f3n de CKAN . Si no ten\u00e9s muchos conocimientos de CKAN, Docker o de administraci\u00e9n de servidores en general, es recomendable usar la instalaci\u00f3n simplificada de Andino . Est\u00e1 pensada para que, en la menor cantidad de pasos y de manera sencilla, tengas un portal de datos funcionando. Si ya conoc\u00e9s la plataforma, ten\u00e9s experiencia con Docker o, simplemente, quer\u00e9s entender c\u00f3mo funciona esta implementaci\u00f3n, te sugiero que revises la instalacion avanzada de Andino Dependencias DOCKER: Gu\u00eda de instalaci\u00f3n . Versi\u00f3n m\u00ednima testeada : 1.13.1 Docker Compose: Gu\u00eda de instalaci\u00f3n . Versi\u00f3n m\u00ednima testeada : 1.12.0 Instalaci\u00f3n simplificada de andino La idea detr\u00e1s de esta implementaci\u00f3n de CKAN es que s\u00f3lo te encargues de tus datos , nada m\u00e1s. Por eso, si \"copi\u00e1s y peg\u00e1s\" el comando de consola, en s\u00f3lo unos momentos, tendr\u00e1s un Andino listo para usar. Esta clase de instalaci\u00f3n no requiere que clones el repositorio, ya que usamos contenedores alojados en DockerHub Ubuntu|Debian|RHEL|CentOS: Instalaci\u00f3n: Para la instalaci\u00f3n, usamos un script de python llamado install.py . El mismo requiere algunos par\u00e1metros espec\u00edficos, y existen otros que son opcionales: # Parametros de install.py [ -h ] Mostrar la ayuda del script --error_email Email donde se mandaran los errores del portal de ser necesario --site_host Dominio o IP del la aplicaci\u00f3n *sin el protocolo* --database_user Nombre del usuario de la base de datos a crear --database_password Contrase\u00f1a de la base de datos a crear --datastore_user Nombre del usuario de la base de datos del datastore a crear --datastore_password Contrase\u00f1a de la base de datos del datastore a crear [ --nginx-extended-cache ] Configura nginx con una configuraci\u00f3n extendida y configura el hook de invalidaci\u00f3n de cache de Andino para notificar a nginx [ --nginx_ssl ] Aplica la configuraci\u00f3n HTTPS en nginx. Requiere ambos archivos del certificado SSL para poder lograrlo ; en caso contrario, se utilizar\u00e1 la configuraci\u00f3n default [ --ssl_key_path SSL_KEY_PATH ] Path dentro del host donde est\u00e1 ubicado el archivo .key para el certificado SSL ; ser\u00e1 copiado al contenedor de nginx si tanto \u00e9ste como el .crt pueden ser encontrados [ --ssl_crt_path SSL_CRT_PATH ] Path dentro del host donde est\u00e1 ubicado el archivo .crt para el certificado SSL ; ser\u00e1 copiado al contenedor de nginx si tanto \u00e9ste como el .key pueden ser encontrados [ --nginx_port NGINX_PORT ] Puerto del servidor Host que se desea que se tome para recibir llamadas HTTP. Por defecto es el 80 . [ --nginx_ssl_port NGINX_SSL_PORT ] Puerto del servidor Host que se desea que se tome para recibir llamadas HTTPS. Por defecto es el 443 . Es importante para los administradores saber que Andino tomar\u00e1 el puerto especificado ( o el default ) ya sea que el portal use o no use HTTPS. En caso de no querer usar HTTPS y que el host tenga erl puerto 443 tomado por un servidor web, es requisito especificar un puerto distinto ( ejemplo: 8443 ) que ser\u00e1 reservado por Andino, pero no utilizado. [ --datastore_port DATASTORE_PORT ] Puerto del servidor Host que se desea que se tome para recibir llamadas HTTP al datastore . Por defecto es el 8800 . [ --install_directory INSTALL_DIRECTORY ] Directorio donde se desea instalar la aplicaci\u00f3n. Por defecto es ` /etc/portal ` ( recomendado ) Para esta instalaci\u00f3n de ejemplo, usaremos estos par\u00e1metros para la aplicaci\u00f3n. Para los dem\u00e1s, usaremos los valores por defecto: Email donde se mandar\u00e1n los errores. EMAIL=admin@example.com Dominio o IP de la aplicaci\u00f3n sin el protocolo : HOST=datos.gob.ar Usuario de la base de datos: DB_USER= my db user Password de la base de datos: DB_PASS= my db pass Usuario del datastore: STORE_USER= my datastore user Password del datastore: STORE_PASS= my datastore password NOTA: Si usamos una IP para la variable HOST , el envio de mails no funcionar\u00e1. Postfix require un \"fully-qualified domain name (FQDN)\". Ver la documentaci\u00f3n de Postfix para m\u00e1s detalles. # Primero especificamos los valores necesarios EMAIL = admin@example.com HOST = andino.midominio.com.ar DB_USER = my_database_user DB_PASS = my_database_pass STORE_USER = my_data_user STORE_PASS = my_data_pass wget https://raw.github.com/datosgobar/portal-andino/master/install/install.py sudo python ./install.py \\ --error_email $EMAIL \\ --site_host = $HOST \\ --database_user = $DB_USER \\ --database_password = $DB_PASS \\ --datastore_user = $STORE_USER \\ --datastore_password = $STORE_PASS Instalaci\u00f3n avanzada de andino La instalaci\u00f3n avanzada est\u00e1 pensada para usuarios que quieren ver c\u00f3mo funciona internamente Andino Para instalar y ejecutar Andino, seguiremos estos pasos: Paso 1: Clonar repositorio. sudo mkdir /etc/portal cd /etc/portal sudo git clone https://github.com/datosgobar/portal-andino.git . Paso 2: Especificar las variables de entorno para el contenedor de postgresql. NOTA: Debemos usar un dominio v\u00e1lido para la variable DOMINIO , de otra forma el envio de mails no funcionar\u00e1. Postfix require un \"fully-qualified domain name (FQDN)\". Ver la documentaci\u00f3n de Postfix para m\u00e1s detalles. DB_USER = my user DB_PASS = my pass DOMINIO = andino.midominio.com.ar ANDINO_VERSION = version que deseamos instalar sudo su -c echo POSTGRES_USER= $DB_USER .env sudo su -c echo POSTGRES_PASSWORD= $DB_PASS .env sudo su -c echo NGINX_HOST_PORT=80 .env sudo su -c echo DATASTORE_HOST_PORT=8800 .env sudo su -c echo maildomain= $DOMINIO .env sudo su -c echo ANDINO_TAG= $ANDINO_VERSION .env Paso 3: Construir y lanzar los contenedor de servicios usando el archivo latest.yml docker-compose -f latest.yml up -d db postfix redis solr Paso 4: Construir y lanzar el contenedor de andino usando el archivo latest.yml docker-compose -f latest.yml up -d portal Paso 5: Inicializar la base de datos y la configuraci\u00f3n de la aplicaci\u00f3n: EMAIL = admin@example.com HOST = datos.gob.ar DB_USER = my db user DB_PASS = my db pass STORE_USER = my datastore user STORE_PASS = my datastore password docker-compose -f latest.yml exec portal /etc/ckan_init.d/init.sh -e $EMAIL -h $HOST \\ -p $DB_USER -P $DB_PASS \\ -d $STORE_USER -D $STORE_PASS Paso 8: Construir el contenedor de nginx usando el archivo latest.yml $ docker-compose -f latest.yml up -d nginx Desinstalar andino Esta secuencia de comandos va a ELIMINAR TODOS LOS CONTENEDORES, IM\u00c1GENES y VOLUMENES de la aplicaci\u00f3n de la vm donde est\u00e1 instalada la plataforma. Esta operaci\u00f3n no es reversible. Perder\u00e1s todos tus datos si realizas esta operaci\u00f3n . app_dir = /etc/portal/ cd $app_dir docker-compose -f latest.yml down -v cd ~/ sudo rm $app_dir -r","title":"Instalaci\u00f3n"},{"location":"developers/install/#indice","text":"Instalaci\u00f3n Dependencias Instalaci\u00f3n simplificada de andino Instalaci\u00f3n avanzada de andino Desinstalar andino","title":"Indice"},{"location":"developers/install/#instalacion","text":"Teniendo en cuenta la dificultad de implementaci\u00f3n e incluso la cantidad de pasos para lograr un deploy existoso, existen dos formas de instalar esta distribuci\u00f3n de CKAN . Si no ten\u00e9s muchos conocimientos de CKAN, Docker o de administraci\u00e9n de servidores en general, es recomendable usar la instalaci\u00f3n simplificada de Andino . Est\u00e1 pensada para que, en la menor cantidad de pasos y de manera sencilla, tengas un portal de datos funcionando. Si ya conoc\u00e9s la plataforma, ten\u00e9s experiencia con Docker o, simplemente, quer\u00e9s entender c\u00f3mo funciona esta implementaci\u00f3n, te sugiero que revises la instalacion avanzada de Andino","title":"Instalaci\u00f3n"},{"location":"developers/install/#dependencias","text":"DOCKER: Gu\u00eda de instalaci\u00f3n . Versi\u00f3n m\u00ednima testeada : 1.13.1 Docker Compose: Gu\u00eda de instalaci\u00f3n . Versi\u00f3n m\u00ednima testeada : 1.12.0","title":"Dependencias"},{"location":"developers/install/#instalacion-simplificada-de-andino","text":"La idea detr\u00e1s de esta implementaci\u00f3n de CKAN es que s\u00f3lo te encargues de tus datos , nada m\u00e1s. Por eso, si \"copi\u00e1s y peg\u00e1s\" el comando de consola, en s\u00f3lo unos momentos, tendr\u00e1s un Andino listo para usar. Esta clase de instalaci\u00f3n no requiere que clones el repositorio, ya que usamos contenedores alojados en DockerHub Ubuntu|Debian|RHEL|CentOS: Instalaci\u00f3n: Para la instalaci\u00f3n, usamos un script de python llamado install.py . El mismo requiere algunos par\u00e1metros espec\u00edficos, y existen otros que son opcionales: # Parametros de install.py [ -h ] Mostrar la ayuda del script --error_email Email donde se mandaran los errores del portal de ser necesario --site_host Dominio o IP del la aplicaci\u00f3n *sin el protocolo* --database_user Nombre del usuario de la base de datos a crear --database_password Contrase\u00f1a de la base de datos a crear --datastore_user Nombre del usuario de la base de datos del datastore a crear --datastore_password Contrase\u00f1a de la base de datos del datastore a crear [ --nginx-extended-cache ] Configura nginx con una configuraci\u00f3n extendida y configura el hook de invalidaci\u00f3n de cache de Andino para notificar a nginx [ --nginx_ssl ] Aplica la configuraci\u00f3n HTTPS en nginx. Requiere ambos archivos del certificado SSL para poder lograrlo ; en caso contrario, se utilizar\u00e1 la configuraci\u00f3n default [ --ssl_key_path SSL_KEY_PATH ] Path dentro del host donde est\u00e1 ubicado el archivo .key para el certificado SSL ; ser\u00e1 copiado al contenedor de nginx si tanto \u00e9ste como el .crt pueden ser encontrados [ --ssl_crt_path SSL_CRT_PATH ] Path dentro del host donde est\u00e1 ubicado el archivo .crt para el certificado SSL ; ser\u00e1 copiado al contenedor de nginx si tanto \u00e9ste como el .key pueden ser encontrados [ --nginx_port NGINX_PORT ] Puerto del servidor Host que se desea que se tome para recibir llamadas HTTP. Por defecto es el 80 . [ --nginx_ssl_port NGINX_SSL_PORT ] Puerto del servidor Host que se desea que se tome para recibir llamadas HTTPS. Por defecto es el 443 . Es importante para los administradores saber que Andino tomar\u00e1 el puerto especificado ( o el default ) ya sea que el portal use o no use HTTPS. En caso de no querer usar HTTPS y que el host tenga erl puerto 443 tomado por un servidor web, es requisito especificar un puerto distinto ( ejemplo: 8443 ) que ser\u00e1 reservado por Andino, pero no utilizado. [ --datastore_port DATASTORE_PORT ] Puerto del servidor Host que se desea que se tome para recibir llamadas HTTP al datastore . Por defecto es el 8800 . [ --install_directory INSTALL_DIRECTORY ] Directorio donde se desea instalar la aplicaci\u00f3n. Por defecto es ` /etc/portal ` ( recomendado ) Para esta instalaci\u00f3n de ejemplo, usaremos estos par\u00e1metros para la aplicaci\u00f3n. Para los dem\u00e1s, usaremos los valores por defecto: Email donde se mandar\u00e1n los errores. EMAIL=admin@example.com Dominio o IP de la aplicaci\u00f3n sin el protocolo : HOST=datos.gob.ar Usuario de la base de datos: DB_USER= my db user Password de la base de datos: DB_PASS= my db pass Usuario del datastore: STORE_USER= my datastore user Password del datastore: STORE_PASS= my datastore password NOTA: Si usamos una IP para la variable HOST , el envio de mails no funcionar\u00e1. Postfix require un \"fully-qualified domain name (FQDN)\". Ver la documentaci\u00f3n de Postfix para m\u00e1s detalles. # Primero especificamos los valores necesarios EMAIL = admin@example.com HOST = andino.midominio.com.ar DB_USER = my_database_user DB_PASS = my_database_pass STORE_USER = my_data_user STORE_PASS = my_data_pass wget https://raw.github.com/datosgobar/portal-andino/master/install/install.py sudo python ./install.py \\ --error_email $EMAIL \\ --site_host = $HOST \\ --database_user = $DB_USER \\ --database_password = $DB_PASS \\ --datastore_user = $STORE_USER \\ --datastore_password = $STORE_PASS","title":"Instalaci\u00f3n simplificada de andino"},{"location":"developers/install/#instalacion-avanzada-de-andino","text":"La instalaci\u00f3n avanzada est\u00e1 pensada para usuarios que quieren ver c\u00f3mo funciona internamente Andino Para instalar y ejecutar Andino, seguiremos estos pasos: Paso 1: Clonar repositorio. sudo mkdir /etc/portal cd /etc/portal sudo git clone https://github.com/datosgobar/portal-andino.git . Paso 2: Especificar las variables de entorno para el contenedor de postgresql. NOTA: Debemos usar un dominio v\u00e1lido para la variable DOMINIO , de otra forma el envio de mails no funcionar\u00e1. Postfix require un \"fully-qualified domain name (FQDN)\". Ver la documentaci\u00f3n de Postfix para m\u00e1s detalles. DB_USER = my user DB_PASS = my pass DOMINIO = andino.midominio.com.ar ANDINO_VERSION = version que deseamos instalar sudo su -c echo POSTGRES_USER= $DB_USER .env sudo su -c echo POSTGRES_PASSWORD= $DB_PASS .env sudo su -c echo NGINX_HOST_PORT=80 .env sudo su -c echo DATASTORE_HOST_PORT=8800 .env sudo su -c echo maildomain= $DOMINIO .env sudo su -c echo ANDINO_TAG= $ANDINO_VERSION .env Paso 3: Construir y lanzar los contenedor de servicios usando el archivo latest.yml docker-compose -f latest.yml up -d db postfix redis solr Paso 4: Construir y lanzar el contenedor de andino usando el archivo latest.yml docker-compose -f latest.yml up -d portal Paso 5: Inicializar la base de datos y la configuraci\u00f3n de la aplicaci\u00f3n: EMAIL = admin@example.com HOST = datos.gob.ar DB_USER = my db user DB_PASS = my db pass STORE_USER = my datastore user STORE_PASS = my datastore password docker-compose -f latest.yml exec portal /etc/ckan_init.d/init.sh -e $EMAIL -h $HOST \\ -p $DB_USER -P $DB_PASS \\ -d $STORE_USER -D $STORE_PASS Paso 8: Construir el contenedor de nginx usando el archivo latest.yml $ docker-compose -f latest.yml up -d nginx","title":"Instalaci\u00f3n avanzada de andino"},{"location":"developers/install/#desinstalar-andino","text":"Esta secuencia de comandos va a ELIMINAR TODOS LOS CONTENEDORES, IM\u00c1GENES y VOLUMENES de la aplicaci\u00f3n de la vm donde est\u00e1 instalada la plataforma. Esta operaci\u00f3n no es reversible. Perder\u00e1s todos tus datos si realizas esta operaci\u00f3n . app_dir = /etc/portal/ cd $app_dir docker-compose -f latest.yml down -v cd ~/ sudo rm $app_dir -r","title":"Desinstalar andino"},{"location":"developers/maintenance/","text":"Indice Mantenimiento Exploraci\u00f3n de la instancia de andino \u00bfQu\u00e9 est\u00e1 corriendo docker? Ingresar al contendor principal de andino Listar todas las Propiedades de cada contenedor Administraci\u00f3n de usuarios Crear un usuario ADMIN Listar mis usuarios Ver los datos de un usuario Crear un nuevo usuario Crear un nuevo usuario extendido Eliminar un usuario Cambiar password de un usuario Configuraciones de andino Modificar el archivo de configuraci\u00f3n Cambiar la configuraci\u00f3n del SMTP Cambiar el remitente de los correos electr\u00f3nicos que env\u00eda Andino Cambiar el id del container de Google Tag Manager Google Tag Manager Cambiar el id del tag de Google Analytics Deshabilitar la URL /catalog.xlsx Configuraci\u00f3n de la llamada de invalidaci\u00f3n de cach\u00e9 Cach\u00e9 externa Configuraci\u00f3n de CORS Configuraci\u00f3n del explorador de series de tiempo Acceso a los datos de andino Encontrar los vol\u00famenes de mi andino dentro del filesystem del host Ver las direcciones IP de mis contenedores Ver las variables de entorno que tienen mis contenedores Acceder con un cliente de PostgreSQL a las bases de datos Eliminar objetos definitivamente Purgar Organizaciones Borradas Purgar Grupos Borrados Purgar Datasets Borrados Listar nombres de los datasets contenidos en Andino Backups Backup de la base de datos Realizar un backup del file system Realizar un backup de la configuraci\u00f3n Recomendaciones de Seguridad y Optimizaciones HTTPS Sistema y librer\u00edas Firewall SSH Optimizaci\u00f3n de logging Configurar otro logging driver Eliminar logs antiguos de Docker Eliminar logs dentro de Andino Mantenimiento Exploraci\u00f3n de la instancia de andino \u00bfQu\u00e9 est\u00e1 corriendo docker? Para obtener una lista de lo que est\u00e1 corriendo actualmente Docker, podemos usar el siguiente comando: docker ps # Tabla de ejecucion actual docker ps -q # Listado de IDs de cada contenedor docker ps -aq # Listado de IDs de todos los contenedores disponibles. Ingresar al contendor principal de andino El contenedor principal de andino, donde se ejecuta la aplicaci\u00f3n CKAN, es denominado portal . Para ingresar en una sesi\u00f3n de consola en el contenedor, ejecutar: docker-compose -f /etc/portal/latest.yml exec portal /bin/bash Listar todas las Propiedades de cada contenedor docker-compose -f /etc/portal/latest.yml ps -q portal solr db | xargs -n 1 | while read container; do docker inspect $container; done Administraci\u00f3n de usuarios Crear un usuario ADMIN docker-compose -f /etc/portal/latest.yml exec portal /etc/ckan_init.d/add_admin.sh mi_nuevo_usuario_admin email_del_usuario_admin El comando solicitar\u00e1 la contrase\u00f1a del usuario administrador. Listar mis usuarios docker-compose -f /etc/portal/latest.yml exec portal /etc/ckan_init.d/paster.sh --plugin=ckan user list Ver los datos de un usuario docker-compose -f /etc/portal/latest.yml exec portal /etc/ckan_init.d/paster.sh --plugin=ckan user nombre-de-usuario Crear un nuevo usuario docker-compose -f /etc/portal/latest.yml exec portal /etc/ckan_init.d/paster.sh --plugin=ckan user add nombre-de-usuario Crear un nuevo usuario extendido docker-compose -f /etc/portal/latest.yml exec portal /etc/ckan_init.d/paster.sh --plugin=ckan user add nomber [email=mi-usuario@host.com password=mi-contrase\u00f1a-rara apikey=unsecretomisticonoleible] Eliminar un usuario docker-compose -f /etc/portal/latest.yml exec portal /etc/ckan_init.d/paster.sh --plugin=ckan user remove nombre-de-usuario Cambiar password de un usuario docker-compose -f /etc/portal/latest.yml exec portal /etc/ckan_init.d/paster.sh --plugin=ckan user setpass nombre-de-usuario Configuraciones de andino Modificar el archivo de configuraci\u00f3n El archivo de configuraci\u00f3n de andino se llama production.ini , y se lo puede encontrar y modificar de la siguiente manera: # Ingresar al contenedor cd /etc/portal docker-compose -f latest.yml exec portal /bin/bash # Una vez adentro, abrimos el archivo production.ini, y buscamos la secci\u00f3n que necesita ser modificada vim /etc/ckan/default/production.ini # Editamos y, luego de salir del contenedor, lo reiniciamos docker-compose -f latest.yml restart portal nginx Cambiar la configuraci\u00f3n del SMTP Por defecto, andino usar\u00e1 un servidor postfix integrado para el env\u00edo de emails. Para usar un servidor SMTP propio, debemos cambiar la configuraci\u00f3n del archivo production.ini . Para lograrlo, podemos hacerlo de dos formas: 1 ) Ingresando al contenedor. Debemos buscar y editar en el archivo production.ini la configuraci\u00f3n de email que luce como: ## Email settings error_email_from=admin@example.com smtp.server = postfix #smtp.starttls = False smtp.user = portal smtp.password = portal smtp.mail_from = administrador Para saber c\u00f3mo hacerlo, leer la secci\u00f3n que explica c\u00f3mo modificar el archivo de configuraci\u00f3n 2 ) Ejecutando comandos paster Suponiendo que nuestro servidor SMTP est\u00e1 en smtp.gmail.com, la direcci\u00f3n de correo del usuario es smtp_user_mail@gmail.com , la contrase\u00f1a de esa direcci\u00f3n de correo mi_pass y queremos usar \"tls\", podemos ejecutar los siguientes comandos: docker-compose -f latest . yml exec portal / etc / ckan_init . d / update_conf . sh smtp.server=smtp.gmail.com:587 ; docker-compose -f latest . yml exec portal / etc / ckan_init . d / update_conf . sh smtp.user=smtp_user_mail@gmail.com ; docker-compose -f latest . yml exec portal / etc / ckan_init . d / update_conf . sh smtp.password=mi_pass ; docker-compose -f latest . yml exec portal / etc / ckan_init . d / update_conf . sh smtp.starttls=True ; docker-compose -f latest . yml exec portal / etc / ckan_init . d / update_conf . sh smtp.mail_from=smtp_user_mail@gmail.com ; # Finalmente reiniciamos el contenedor docker-compose -f latest . yml restart portal nginx Tener en cuenta que si se utiliza un servidor SMTP, se debe setear la configuraci\u00f3n con un correo electr\u00f3nico de @gmail.com , y que starttls debe estar en True . Cambiar el remitente de los correos electr\u00f3nicos que env\u00eda Andino Para modificar el remitente de los correos electr\u00f3nicos que el sistema env\u00eda (por ejemplo los de creaci\u00f3n de usuarios nuevos o los de olvido de contrase\u00f1a), se deben seguir los pasos de la secci\u00f3n Cambiar la configuraci\u00f3n del SMTP pero modificando el atributo de configuraci\u00f3n smtp.mail_from . Cambiar el id del container de Google Tag Manager Ser\u00e1 necesario modificar la configuraci\u00f3n en el archivo production.ini . Para saber c\u00f3mo hacerlo, leer la secci\u00f3n que explica c\u00f3mo modificar el archivo de configuraci\u00f3n . Esta vez, buscaremos la configuraci\u00f3n debajo de la secci\u00f3n [app:main] (vas a encontrar campos como \"superThemeTaxonomy\" y \"ckan.site.title\"). El campo que estamos buscando es ckan.google_tag_manager.gtm_container_id . En caso de no encontrar el campo mencionado, lo podemos agregar: ckan.google_tag_manager.gtm_container_id = { id que necesit\u00e1s guardar } Google Tag Manager Para configurar el c\u00f3digo se seguimiento de Google Tag Manager ejecutar el siguiente comando: docker-compose -f latest.yml exec portal /etc/ckan_init.d/update_conf.sh ckan.google_tag_manager.gtm_container_id= lt;tu c\u00f3digo de seguimiento GTM gt; ; # Finalmente reiniciamos el contenedor docker-compose -f latest.yml restart portal nginx Cambiar el id del tag de Google Analytics Ser\u00e1 necesario modificar el archivo de configuraci\u00f3n production.ini . Para saber c\u00f3mo hacerlo, leer la secci\u00f3n que explica c\u00f3mo modificar el archivo de configuraci\u00f3n . La secci\u00f3n a buscar luce de esta manera: ## Google Analytics googleanalytics.id = { un id } googleanalytics_resource_prefix = { un prefix } googleanalytics.domain = { un dominio } Lo que se debe modificar es el campo googleanalytics.id . Deshabilitar la URL /catalog.xlsx En caso de desear deshabilitar la URL /catalog.xlsx , se puede ejecutar el siguiente comando: docker-compose -f latest.yml exec portal /etc/ckan_init.d/update_conf.sh andino.disable_catalog_xlsx_url=True ; En caso de querer restaurarlo, se debe configurar el atributo andino.disable_catalog_xlsx_url con el valor False . Configuraci\u00f3n de la llamada de invalidaci\u00f3n de cach\u00e9 La aplicaci\u00f3n puede ser configurada para hacer una llamada HTTP ante cada cambio en los metadatos del portal. Esta llamada (A.K.A. \"hook\") puede configurarse para ser a cualquier URL, y usando cualquier m\u00e9todo HTTP. Se deber\u00e1 utilizar un campo llamado andino.cache_clean_hook , que tendr\u00e1 asignada la URL a la cual queremos enviarle requests HTTP que lograr\u00e1n ese efecto. Adem\u00e1s, el paquete \"Andino\" provee una configuraci\u00f3n de nginx que permite recibir esta llamada e invalidar la cach\u00e9. Para configurar internamente nginx y andino, s\u00f3lo es necesario parar la opci\u00f3n --nginx-extended-cache al momento de usar el script de instalaci\u00f3n. Si nuestra aplicaci\u00f3n ya est\u00e1 instalada, podemos seguir los siguientes pasos: Actualizar a la ultima versi\u00f3n de la aplicaci\u00f3n, con el script de actualizaci\u00f3n. Ir al directorio de instalaci\u00f3n cd /etc/portal Editar el archivo .env Agregar una l\u00ednea nueva que sea: NGINX_CONFIG_FILE=nginx_extended.conf Reiniciar el contenedor de nginx docker-compose -f latest.yml up -d nginx Luego configuramos el hook de invalidaci\u00f3n: Entramos al contenedor del portal: docker-compose -f latest.yml exec portal bash Configuramos el hook: /etc/ckan_init.d/update_conf.sh andino.cache_clean_hook=http://nginx/meta/cache/purge Salimos exit Reiniciamos el portal: docker-compose -f latest.yml restart portal nginx Nota: tener en cuenta que, por defecto, se emplea el m\u00e9todo PURGE para disparar el hook, lo cual se puede cambiar editando el campo andino.cache_clean_hook_method dentro del archivo de configuraci\u00f3n production.ini . Para saber c\u00f3mo hacerlo, leer la secci\u00f3n que explica c\u00f3mo modificar el archivo de configuraci\u00f3n . Cach\u00e9 externa Es posible implementar la cach\u00e9 externa por fuera del paquete andino. Para esto, en el servidor que servir\u00e1 de cach\u00e9, necesitamos instalar openresty . Esta plataforma web nos permite correr nginx y modificar su comportamiento usando lua . Luego de instalar openresty , debemos activarlo para que empiece cada vez que se prenda el servidor: systemctl enable openresty systemctl restart openresty Luego de instalar operesty , debemos agregar los archivos de configuraci\u00f3n. Primero borramos la configuraci\u00f3n de nginx que viene por defecto en /etc/openresty/nginx.conf y agregamos la nuestra: #user nobody; worker_processes 1; #error_log logs/error.log; #error_log logs/error.log notice; #error_log logs/error.log info; #pid logs/nginx.pid; events { worker_connections 1024; } http { include mime.types; default_type application/octet-stream; #log_format main $remote_addr - $remote_user [$time_local] $request # $status $body_bytes_sent $http_referer # $http_user_agent $http_x_forwarded_for ; #access_log logs/access.log main; sendfile on; #tcp_nopush on; #keepalive_timeout 0; keepalive_timeout 65; #gzip on; include /etc/nginx/conf.d/*.conf; } Luego, creamos el directorio donde pondremos la configuraci\u00f3n de nuestra cach\u00e9 y creamos el archivo. mkdir -p /etc/nginx/conf.d/ touch /etc/nginx/conf.d/000-andino-cache.conf El archivo 000-andino-cache.conf contendr\u00e1 lo siguiente. Es necesario cambiar la palabre IP_A_ANDINO por la IP donde est\u00e1 andino. proxy_cache_path / tmp / nginx_cache / levels = 1 : 2 keys_zone = cache : 30m max_size = 250m ; proxy_temp_path / tmp / nginx_proxy 1 2 ; server_tokens off ; server { client_max_body_size 100M ; location / { proxy_pass http : // IP_A_ANDINO : 80 / ; proxy_set_header X-Forwarded-For $remote_addr ; proxy_set_header Host $host ; proxy_cache cache ; # Disable cache for logged-in users proxy_cache_bypass $cookie_auth_tkt ; proxy_no_cache $cookie_auth_tkt ; proxy_cache_valid 30m ; proxy_cache_key $host$scheme$proxy_host$request_uri ; # Ignore apache Cache-Control header # See https : // lists . okfn . org / pipermail / ckan-dev / 2016 - March / 009864 . html proxy_ignore_headers Cache-Control ; # In emergency comment out line to force caching # proxy_ignore_headers X-Accel-Expires Expires ; # Show cache status add_header X-Cache-Status $upstream_cache_status ; } location / meta / cache / purge { allow 192.168.0.0/16 ; allow 172.16.0.0/12 ; allow 10.0.0.0/8 ; allow 127.0.0.1 ; deny all ; if ($request_method = PURGE ) { content_by_lua_block { filename = /tmp/nginx_cache/ local f = io.open(filename, r ) if (f~=nil) then io.close(f) os.execute( rm -rf ..filename.. ) end ngx.say( OK ) ngx.exit(ngx.OK) } } } } Finalmente, reiniciamos openresty : systemctl restart openresty . Ahora que tenemos la cach\u00e9 configurada, necesitamos configurar la llamada, o hook, de invalidaci\u00f3n de cach\u00e9. Para esto, entramos al servidor donde est\u00e1 corriendo andino y corremos: IP_INTERNA_CACHE = ip interna del servidor de cach\u00e9 cd /etc/portal docker-compose -f latest.yml exec portal /etc/ckan_init.d/update_conf.sh andino.cache_clean_hook=http:// $IP_INTERNA_CACHE /meta/cache/purge ; docker-compose -f latest.yml restart portal nginx Si queremos probar la integraci\u00f3n, podemos entrar al contenedor de andino y probar invalidar la cach\u00e9: IP_INTERNA_CACHE = ip interna del servidor de cach \u00e9 cd / etc / portal docker-compose -f latest . yml exec portal curl -X PURGE http://$IP_INTERNA_CACHE/meta/cache/purge ; # = OK NOTA: Si estamos usando nuestro andino con un IP y no con un dominio, tendremos que cambiar la configuraci\u00f3n ckan.site_url para que use la IP del servidor donde se encuentra la cach\u00e9 externa. IP_PUBLICA_CACHE = ip publica del servidor cach\u00e9 cd /etc/portal docker-compose -f latest.yml exec portal /etc/ckan_init.d/update_conf.sh ckan.site_url=http:// $IP_PUBLICA_CACHE ; docker-compose -f latest.yml restart portal nginx Configuraci\u00f3n de CORS Cuando es necesario acceder a Andino desde URLs distintas que apuntan a una misma instancia (ej: accediendo a trav\u00e9s de un gateway/cach\u00e9 o directamente a la instancia de Andino o usando la IP p\u00fablica del servidor host ) es necesario, para el correcto funcionamiento de Andino, configurar par\u00e1metros para habilitar CORS ( Cross-Origin Resource Sharing ). Esto se debe a que un Andino debe tener una URL can\u00f3nica, por lo tanto, las dem\u00e1s URLs utilizadas deben estar en el whitelist de CORS de Andino. Para poder navegar tu Andino usando como URL una que no es la can\u00f3nica de tu instancia, ten\u00e9s que realizar dos acciones (los comandos deben ser ejecutados desde el directorio de instalaci\u00f3n de Andino; por default , /etc/portal ): Habilitar el comportamiento CORS: docker-compose -f latest.yml exec portal /etc/ckan_init.d/update_conf.sh \"ckan.cors.origin_allow_all = false\" (si bien el par\u00e1metro de configuraci\u00f3n tiene el valor false , esto habilita el control de URLs contra el whitelist ). Agregar las URLs al whitelist : docker-compose -f latest.yml exec portal /etc/ckan_init.d/update_conf.sh \"ckan.cors.origin_whitelist=http://localhost:8080 http://127.0.0.1 http://127.0.0.1:8080\" (en el ejemplo se habilitan las URLs http://localhost:8080 , http://127.0.0.1 y http://127.0.0.1:8080 ). Luego reinici\u00e1 los contenedores portal y nginx : docker-compose -f latest.yml restart nginx portal . Si dese\u00e1s habilitar todas las URLs para CORS (no recomendado), en el paso 1 deb\u00e9s pasar el valor true para el atributo de configuraci\u00f3n ckan.cors.origin_allow_all . Para ver m\u00e1s acerca del funcionamiento de CORS en CKAN ver la documentaci\u00f3n oficial de CKAN (en ingl\u00e9s) . Configuraci\u00f3n del explorador de series de tiempo Andino tiene instalado el plugin ckanext-seriestiempoarexplorer , pero no se encuentra presente entre los plugins activos. Para activarlo, debemos entrar al contenedor de andino, editar el archivo /etc/ckan/default/production.ini y agregar el seriestiempoarexplorer a la lista de plugins. Luego de agregarlo, debemos reinicar el servidor. cd /etc/portal docker-compose -f latest.yml exec portal bash; vim /etc/ckan/default/production.ini # ... apachectl restart Luego, si vamos a la configuraci\u00f3n del sitio, podremos apreciar que se agrego una nueva secci\u00f3n \"Series\" en el apartado \"Otras secciones del portal\". Acceso a los datos de andino Encontrar los vol\u00famenes de mi andino dentro del filesystem del host docker-compose -f /etc/portal/latest.yml ps -q andino solr db | xargs -n 1 | while read container; do docker inspect -f {{ .Name }} : {{ range .Mounts }}{{ .Source }} : {{ .Destination }} {{ end }} $container; done Ver las direcciones IP de mis contenedores docker-compose -f /etc/portal/latest.yml ps -q andino solr db | xargs -n 1 | while read container; do docker inspect -f {{ .Name }} : {{ range .NetworkSettings.Networks }}{{ .IPAddress }}{{ end }} $container; done Ver las variables de entorno que tienen mis contenedores docker-compose -f /etc/portal/latest.yml ps -q andino solr db | xargs -n 1 | while read container; do docker inspect -f {{ range $ index , $ value := .Config.Env }} export {{ $ value }}{{ println }}{{ end }} $container; done Acceder con un cliente de PostgreSQL a las bases de datos docker-compose -f dev.yml exec db psql -U postgres # psql \\c ckan db default CKAN # psql \\c datastore_default db datastore CKAN Eliminar objetos definitivamente Es bien sabido que, dentro de CKAN, cada vez que borranmos algun elemento, en verdad no se borra, sino que pasa a estar inactivo; por lo tanto, tener alguna forma de eliminar elementos de manera definitiva resulta altamente necesario. Purgar Organizaciones Borradas curl -X POST http://tu-host/api/3/action/organization_purge -H Authorization:tu-api-key -F id=id-o-nombre-que-se-desea-borrar Purgar Grupos Borrados curl -X POST http://tu-host/api/3/action/group_purge -H Authorization:tu-api-key -F id=id-o-nombre-que-se-desea-borrar Purgar Datasets Borrados curl -X POST http://tu-host/api/3/action/dataset_purge -H Authorization:tu-api-key -F id=id-o-nombre-que-se-desea-borrar Listar nombres de los datasets contenidos en Andino docker-compose -f /etc/portal/latest.yml exec portal /etc/ckan_init.d/paster.sh --plugin = ckan dataset list | grep -v DEBUG | grep -v count | grep -v Datasets | xargs -n2 | while read id name ; do echo $name ; done Backups Es altamente recomendable hacer copias de seguridad de los datos de la aplicaci\u00f3n, tanto la base de datos como los archivos de configuraci\u00f3n y subidos por los usuarios. Backup de la base de datos Un ejemplo f\u00e1cil de hacer un backup de la base de datos ser\u00eda: container=$(docker-compose -f latest.yml ps -q db) today=`date +%Y-%m-%d.%H:%M:%S` filename= backup-$today.gz # Creo un directorio temporal y defino d\u00f3nde generar\u00e9 el backup backupdir=$(mktemp -d) backupfile= $backupdir/$filename # Exporto la base de datos docker exec $container pg_dumpall -c -U postgres | gzip gt; $backupfile # Copio el archivo al directorio actual y borro el original # Podr\u00eda reemplazar $PWD con mi directorio de backups, como /etc/portal/backups mv $backupfile $PWD Y para los dem\u00e1s archivos de la aplicaci\u00f3n (requiere jq ): backupdir=$(mktemp -d) today=`date +%Y-%m-%d.%H:%M:%S` appbackupdir= $backupdir/application/ mkdir $appbackupdir container=$(docker-compose -f latest.yml ps -q portal) docker inspect --format {{ json .Mounts }} $container | jq -r .[]|[.Name, .Source, .Destination] | @tsv | while IFS=$ \\t read -r name source destination; do if ls $source/* 1 gt; /dev/null 2 gt; amp;1; then dest= $appbackupdir$name mkdir -p $dest tar -C $source -zcvf $dest/backup_$today.tar.gz $(ls $source) else echo No file at $source fi done tar -C $appbackupdir../ -zcvf backup.tar.gz application/ Podria colocarse esos scripts en el directorio donde se instal\u00f3 la aplicaci\u00f3n (ejemplo : /etc/portal/backup.sh ) y luego agregar un cron : Para correr el script cada domingo, podr\u00edamos usar la configuraci\u00f3n 0 0 * * 0 (ver cron para m\u00e1s informaci\u00f3n), correr el comando crontab -e y agregar la l\u00ednea: 0 0 * * 0 cd /etc/portal/ amp; amp; bash /etc/portal/backup.sh Realizar un backup del file system # Exporto el path al almacenamiento del volumen export CKAN_FS_STORAGE=$(docker inspect --format {{ range .Mounts }}{{ if eq .Destination /var/lib/ckan }}{{ .Source }}{{ end }}{{ end }} andino) # Creo un tar.gz con la info. tar -C $(dirname $CKAN_FS_STORAGE ) -zcvf /ruta/para/guardar/mis/bkps/mi_andino.fs-data_$(date +%F).tar.gz $(basename $CKAN_FS_STORAGE ) Realizar un backup de la configuraci\u00f3n # Exporto el path al almacenamiento del volumen export ANDINO_CONFIG=$(docker inspect --format {{ range .Mounts }}{{ if eq .Destination /etc/ckan/default }}{{ .Source }}{{ end }}{{ end }} andino) # Creo un tar.gz con la info. tar -C $(dirname $ANDINO_CONFIG ) -zcvf /ruta/para/guardar/mis/bkps/mi_andino.config-data_$(date +%F).tar.gz $(basename $ANDINO_CONFIG ) Recomendaciones de Seguridad y Optimizaciones Mantener seguro un servidor web puede ser una tarea ardua, pero sobre todo es constante , ya que constantemente se detectan nuevas vulnerabilidades en los distintos softwares. Y un servidor web no es la excepci\u00f3n! En este breve apartado, se dar\u00e1n peque\u00f1as recomendaciones para mantener seguro el servidor, no solo antes posibles atacantes, sino tambien ante posibles fallos del sistema y como efectuar mitigaciones. Las siguientes recomendaciones puden ser implementadas f\u00e1cilmente en un sistema Ubuntu 16.04, el cual es el recomendado (a la fecha), para correr la aplicaci\u00f3n. HTTPS HTTPS permite que la conexi\u00f3n entre el browser y el servidor sea encriptada y de esta manera segura. Es altamente recomendable usar HTTPS, para mantener la privacidad de los usuarios. El portal de documentaci\u00f3n para desarrolladores de Google provee buena informaci\u00f3n sobre esto: https://developers.google.com/web/fundamentals/security/encrypt-in-transit/why-https Sistema y librer\u00edas Es altamente recomendable mantener el sistema operativo y las aplicaciones que usemos actualizadas. Constantemente se est\u00e1n subiendo fixes de seguridad y posibles intrusos podr\u00edan aprovechar que las aplicaciones o el mismo sistema operativo est\u00e9n desactualizados. Peri\u00f3dicamente, podr\u00edamos constatar las nuevas versiones de nuestro software y actualizar dentro de lo posible. Como ejemplo, podemos ver que para Ubuntu 16.04 sali\u00f3 Ubuntu 16.04.2, con algunas correcciones de seguridad. Ver . Firewall Todo servidor debe tener activado el firewall. El firewall permitir\u00e1 denegar (o permitr) el acceso a la red. En un servidor web, el puerto abierto al p\u00fablico deber\u00edan ser s\u00f3lo el 80 (http) y el 443 (https). Adem\u00e1s de ese puerto, si la m\u00e1quina es accedida remotamente mediante un servidor SSH, deber\u00edamos abrir este puerto tambi\u00e9n, pero con un l\u00edmite de acceso. La soluci\u00f3n es f\u00e1cilmente implementable con el programa ufw . SSH Los servidores ssh permiten el acceso al servidor remotamente. No debe permitirse el acceso por ssh mediante usuario y password . S\u00f3lo debe permitirse el acceso mediante clave publica. DigitalOcean tiene una buena gu\u00eda de c\u00f3mo configurar las claves p\u00fablicas Ver . Optimizaci\u00f3n de logging Configurar otro logging driver Por default, docker escribe a un archivo con formato json , lo cual puede llevar a que se acumulen los logs de la aplicaci\u00f3n, y estos archivos crezcan indefinidamente. Para evitar esto, se puede configurar el logging driver de docker. La recomendacion es usar journald y configurarlo para que los logs sean persistentes. Eliminar logs antiguos de Docker Dentro del normal funcionamiento de la plataforma, se genera una gran cantidad de logs, los cuales, ante un incidencia, son sumamente \u00fatiles. Pero, luego de un tiempo, y sabiendo que los mismos se almacenan internamente en Andino, podr\u00eda ser necesario eliminarlos. sudo su -c ls /var/lib/docker/containers/ | xargs -n1 | while read docker_id; do truncate -s 0 /var/lib/docker/containers/ ${ docker_id %/* } / ${ docker_id %/* } -json.log; done Eliminar logs dentro de Andino docker-compose -f /etc/portal/latest.yml exec portal truncate -s 0 /var/log/apache2/*.log","title":"Mantenimiento"},{"location":"developers/maintenance/#indice","text":"Mantenimiento Exploraci\u00f3n de la instancia de andino \u00bfQu\u00e9 est\u00e1 corriendo docker? Ingresar al contendor principal de andino Listar todas las Propiedades de cada contenedor Administraci\u00f3n de usuarios Crear un usuario ADMIN Listar mis usuarios Ver los datos de un usuario Crear un nuevo usuario Crear un nuevo usuario extendido Eliminar un usuario Cambiar password de un usuario Configuraciones de andino Modificar el archivo de configuraci\u00f3n Cambiar la configuraci\u00f3n del SMTP Cambiar el remitente de los correos electr\u00f3nicos que env\u00eda Andino Cambiar el id del container de Google Tag Manager Google Tag Manager Cambiar el id del tag de Google Analytics Deshabilitar la URL /catalog.xlsx Configuraci\u00f3n de la llamada de invalidaci\u00f3n de cach\u00e9 Cach\u00e9 externa Configuraci\u00f3n de CORS Configuraci\u00f3n del explorador de series de tiempo Acceso a los datos de andino Encontrar los vol\u00famenes de mi andino dentro del filesystem del host Ver las direcciones IP de mis contenedores Ver las variables de entorno que tienen mis contenedores Acceder con un cliente de PostgreSQL a las bases de datos Eliminar objetos definitivamente Purgar Organizaciones Borradas Purgar Grupos Borrados Purgar Datasets Borrados Listar nombres de los datasets contenidos en Andino Backups Backup de la base de datos Realizar un backup del file system Realizar un backup de la configuraci\u00f3n Recomendaciones de Seguridad y Optimizaciones HTTPS Sistema y librer\u00edas Firewall SSH Optimizaci\u00f3n de logging Configurar otro logging driver Eliminar logs antiguos de Docker Eliminar logs dentro de Andino","title":"Indice"},{"location":"developers/maintenance/#mantenimiento","text":"","title":"Mantenimiento"},{"location":"developers/maintenance/#exploracion-de-la-instancia-de-andino","text":"","title":"Exploraci\u00f3n de la instancia de andino"},{"location":"developers/maintenance/#que-esta-corriendo-docker","text":"Para obtener una lista de lo que est\u00e1 corriendo actualmente Docker, podemos usar el siguiente comando: docker ps # Tabla de ejecucion actual docker ps -q # Listado de IDs de cada contenedor docker ps -aq # Listado de IDs de todos los contenedores disponibles.","title":"\u00bfQu\u00e9 est\u00e1 corriendo docker?"},{"location":"developers/maintenance/#ingresar-al-contendor-principal-de-andino","text":"El contenedor principal de andino, donde se ejecuta la aplicaci\u00f3n CKAN, es denominado portal . Para ingresar en una sesi\u00f3n de consola en el contenedor, ejecutar: docker-compose -f /etc/portal/latest.yml exec portal /bin/bash","title":"Ingresar al contendor principal de andino"},{"location":"developers/maintenance/#listar-todas-las-propiedades-de-cada-contenedor","text":"docker-compose -f /etc/portal/latest.yml ps -q portal solr db | xargs -n 1 | while read container; do docker inspect $container; done","title":"Listar todas las Propiedades de cada contenedor"},{"location":"developers/maintenance/#administracion-de-usuarios","text":"","title":"Administraci\u00f3n de usuarios"},{"location":"developers/maintenance/#crear-un-usuario-admin","text":"docker-compose -f /etc/portal/latest.yml exec portal /etc/ckan_init.d/add_admin.sh mi_nuevo_usuario_admin email_del_usuario_admin El comando solicitar\u00e1 la contrase\u00f1a del usuario administrador.","title":"Crear un usuario ADMIN"},{"location":"developers/maintenance/#listar-mis-usuarios","text":"docker-compose -f /etc/portal/latest.yml exec portal /etc/ckan_init.d/paster.sh --plugin=ckan user list","title":"Listar mis usuarios"},{"location":"developers/maintenance/#ver-los-datos-de-un-usuario","text":"docker-compose -f /etc/portal/latest.yml exec portal /etc/ckan_init.d/paster.sh --plugin=ckan user nombre-de-usuario","title":"Ver los datos de un usuario"},{"location":"developers/maintenance/#crear-un-nuevo-usuario","text":"docker-compose -f /etc/portal/latest.yml exec portal /etc/ckan_init.d/paster.sh --plugin=ckan user add nombre-de-usuario","title":"Crear un nuevo usuario"},{"location":"developers/maintenance/#crear-un-nuevo-usuario-extendido","text":"docker-compose -f /etc/portal/latest.yml exec portal /etc/ckan_init.d/paster.sh --plugin=ckan user add nomber [email=mi-usuario@host.com password=mi-contrase\u00f1a-rara apikey=unsecretomisticonoleible]","title":"Crear un nuevo usuario extendido"},{"location":"developers/maintenance/#eliminar-un-usuario","text":"docker-compose -f /etc/portal/latest.yml exec portal /etc/ckan_init.d/paster.sh --plugin=ckan user remove nombre-de-usuario","title":"Eliminar un usuario"},{"location":"developers/maintenance/#cambiar-password-de-un-usuario","text":"docker-compose -f /etc/portal/latest.yml exec portal /etc/ckan_init.d/paster.sh --plugin=ckan user setpass nombre-de-usuario","title":"Cambiar password de un usuario"},{"location":"developers/maintenance/#configuraciones-de-andino","text":"","title":"Configuraciones de andino"},{"location":"developers/maintenance/#modificar-el-archivo-de-configuracion","text":"El archivo de configuraci\u00f3n de andino se llama production.ini , y se lo puede encontrar y modificar de la siguiente manera: # Ingresar al contenedor cd /etc/portal docker-compose -f latest.yml exec portal /bin/bash # Una vez adentro, abrimos el archivo production.ini, y buscamos la secci\u00f3n que necesita ser modificada vim /etc/ckan/default/production.ini # Editamos y, luego de salir del contenedor, lo reiniciamos docker-compose -f latest.yml restart portal nginx","title":"Modificar el archivo de configuraci\u00f3n"},{"location":"developers/maintenance/#cambiar-la-configuracion-del-smtp","text":"Por defecto, andino usar\u00e1 un servidor postfix integrado para el env\u00edo de emails. Para usar un servidor SMTP propio, debemos cambiar la configuraci\u00f3n del archivo production.ini . Para lograrlo, podemos hacerlo de dos formas: 1 ) Ingresando al contenedor. Debemos buscar y editar en el archivo production.ini la configuraci\u00f3n de email que luce como: ## Email settings error_email_from=admin@example.com smtp.server = postfix #smtp.starttls = False smtp.user = portal smtp.password = portal smtp.mail_from = administrador Para saber c\u00f3mo hacerlo, leer la secci\u00f3n que explica c\u00f3mo modificar el archivo de configuraci\u00f3n 2 ) Ejecutando comandos paster Suponiendo que nuestro servidor SMTP est\u00e1 en smtp.gmail.com, la direcci\u00f3n de correo del usuario es smtp_user_mail@gmail.com , la contrase\u00f1a de esa direcci\u00f3n de correo mi_pass y queremos usar \"tls\", podemos ejecutar los siguientes comandos: docker-compose -f latest . yml exec portal / etc / ckan_init . d / update_conf . sh smtp.server=smtp.gmail.com:587 ; docker-compose -f latest . yml exec portal / etc / ckan_init . d / update_conf . sh smtp.user=smtp_user_mail@gmail.com ; docker-compose -f latest . yml exec portal / etc / ckan_init . d / update_conf . sh smtp.password=mi_pass ; docker-compose -f latest . yml exec portal / etc / ckan_init . d / update_conf . sh smtp.starttls=True ; docker-compose -f latest . yml exec portal / etc / ckan_init . d / update_conf . sh smtp.mail_from=smtp_user_mail@gmail.com ; # Finalmente reiniciamos el contenedor docker-compose -f latest . yml restart portal nginx Tener en cuenta que si se utiliza un servidor SMTP, se debe setear la configuraci\u00f3n con un correo electr\u00f3nico de @gmail.com , y que starttls debe estar en True .","title":"Cambiar la configuraci\u00f3n del SMTP"},{"location":"developers/maintenance/#cambiar-el-remitente-de-los-correos-electronicos-que-envia-andino","text":"Para modificar el remitente de los correos electr\u00f3nicos que el sistema env\u00eda (por ejemplo los de creaci\u00f3n de usuarios nuevos o los de olvido de contrase\u00f1a), se deben seguir los pasos de la secci\u00f3n Cambiar la configuraci\u00f3n del SMTP pero modificando el atributo de configuraci\u00f3n smtp.mail_from .","title":"Cambiar el remitente de los correos electr\u00f3nicos que env\u00eda Andino"},{"location":"developers/maintenance/#cambiar-el-id-del-container-de-google-tag-manager","text":"Ser\u00e1 necesario modificar la configuraci\u00f3n en el archivo production.ini . Para saber c\u00f3mo hacerlo, leer la secci\u00f3n que explica c\u00f3mo modificar el archivo de configuraci\u00f3n . Esta vez, buscaremos la configuraci\u00f3n debajo de la secci\u00f3n [app:main] (vas a encontrar campos como \"superThemeTaxonomy\" y \"ckan.site.title\"). El campo que estamos buscando es ckan.google_tag_manager.gtm_container_id . En caso de no encontrar el campo mencionado, lo podemos agregar: ckan.google_tag_manager.gtm_container_id = { id que necesit\u00e1s guardar }","title":"Cambiar el id del container de Google Tag Manager"},{"location":"developers/maintenance/#google-tag-manager","text":"Para configurar el c\u00f3digo se seguimiento de Google Tag Manager ejecutar el siguiente comando: docker-compose -f latest.yml exec portal /etc/ckan_init.d/update_conf.sh ckan.google_tag_manager.gtm_container_id= lt;tu c\u00f3digo de seguimiento GTM gt; ; # Finalmente reiniciamos el contenedor docker-compose -f latest.yml restart portal nginx","title":"Google Tag Manager"},{"location":"developers/maintenance/#cambiar-el-id-del-tag-de-google-analytics","text":"Ser\u00e1 necesario modificar el archivo de configuraci\u00f3n production.ini . Para saber c\u00f3mo hacerlo, leer la secci\u00f3n que explica c\u00f3mo modificar el archivo de configuraci\u00f3n . La secci\u00f3n a buscar luce de esta manera: ## Google Analytics googleanalytics.id = { un id } googleanalytics_resource_prefix = { un prefix } googleanalytics.domain = { un dominio } Lo que se debe modificar es el campo googleanalytics.id .","title":"Cambiar el id del tag de Google Analytics"},{"location":"developers/maintenance/#deshabilitar-la-url-catalogxlsx","text":"En caso de desear deshabilitar la URL /catalog.xlsx , se puede ejecutar el siguiente comando: docker-compose -f latest.yml exec portal /etc/ckan_init.d/update_conf.sh andino.disable_catalog_xlsx_url=True ; En caso de querer restaurarlo, se debe configurar el atributo andino.disable_catalog_xlsx_url con el valor False .","title":"Deshabilitar la URL /catalog.xlsx"},{"location":"developers/maintenance/#configuracion-de-la-llamada-de-invalidacion-de-cache","text":"La aplicaci\u00f3n puede ser configurada para hacer una llamada HTTP ante cada cambio en los metadatos del portal. Esta llamada (A.K.A. \"hook\") puede configurarse para ser a cualquier URL, y usando cualquier m\u00e9todo HTTP. Se deber\u00e1 utilizar un campo llamado andino.cache_clean_hook , que tendr\u00e1 asignada la URL a la cual queremos enviarle requests HTTP que lograr\u00e1n ese efecto. Adem\u00e1s, el paquete \"Andino\" provee una configuraci\u00f3n de nginx que permite recibir esta llamada e invalidar la cach\u00e9. Para configurar internamente nginx y andino, s\u00f3lo es necesario parar la opci\u00f3n --nginx-extended-cache al momento de usar el script de instalaci\u00f3n. Si nuestra aplicaci\u00f3n ya est\u00e1 instalada, podemos seguir los siguientes pasos: Actualizar a la ultima versi\u00f3n de la aplicaci\u00f3n, con el script de actualizaci\u00f3n. Ir al directorio de instalaci\u00f3n cd /etc/portal Editar el archivo .env Agregar una l\u00ednea nueva que sea: NGINX_CONFIG_FILE=nginx_extended.conf Reiniciar el contenedor de nginx docker-compose -f latest.yml up -d nginx Luego configuramos el hook de invalidaci\u00f3n: Entramos al contenedor del portal: docker-compose -f latest.yml exec portal bash Configuramos el hook: /etc/ckan_init.d/update_conf.sh andino.cache_clean_hook=http://nginx/meta/cache/purge Salimos exit Reiniciamos el portal: docker-compose -f latest.yml restart portal nginx Nota: tener en cuenta que, por defecto, se emplea el m\u00e9todo PURGE para disparar el hook, lo cual se puede cambiar editando el campo andino.cache_clean_hook_method dentro del archivo de configuraci\u00f3n production.ini . Para saber c\u00f3mo hacerlo, leer la secci\u00f3n que explica c\u00f3mo modificar el archivo de configuraci\u00f3n .","title":"Configuraci\u00f3n de la llamada de invalidaci\u00f3n de cach\u00e9"},{"location":"developers/maintenance/#cache-externa","text":"Es posible implementar la cach\u00e9 externa por fuera del paquete andino. Para esto, en el servidor que servir\u00e1 de cach\u00e9, necesitamos instalar openresty . Esta plataforma web nos permite correr nginx y modificar su comportamiento usando lua . Luego de instalar openresty , debemos activarlo para que empiece cada vez que se prenda el servidor: systemctl enable openresty systemctl restart openresty Luego de instalar operesty , debemos agregar los archivos de configuraci\u00f3n. Primero borramos la configuraci\u00f3n de nginx que viene por defecto en /etc/openresty/nginx.conf y agregamos la nuestra: #user nobody; worker_processes 1; #error_log logs/error.log; #error_log logs/error.log notice; #error_log logs/error.log info; #pid logs/nginx.pid; events { worker_connections 1024; } http { include mime.types; default_type application/octet-stream; #log_format main $remote_addr - $remote_user [$time_local] $request # $status $body_bytes_sent $http_referer # $http_user_agent $http_x_forwarded_for ; #access_log logs/access.log main; sendfile on; #tcp_nopush on; #keepalive_timeout 0; keepalive_timeout 65; #gzip on; include /etc/nginx/conf.d/*.conf; } Luego, creamos el directorio donde pondremos la configuraci\u00f3n de nuestra cach\u00e9 y creamos el archivo. mkdir -p /etc/nginx/conf.d/ touch /etc/nginx/conf.d/000-andino-cache.conf El archivo 000-andino-cache.conf contendr\u00e1 lo siguiente. Es necesario cambiar la palabre IP_A_ANDINO por la IP donde est\u00e1 andino. proxy_cache_path / tmp / nginx_cache / levels = 1 : 2 keys_zone = cache : 30m max_size = 250m ; proxy_temp_path / tmp / nginx_proxy 1 2 ; server_tokens off ; server { client_max_body_size 100M ; location / { proxy_pass http : // IP_A_ANDINO : 80 / ; proxy_set_header X-Forwarded-For $remote_addr ; proxy_set_header Host $host ; proxy_cache cache ; # Disable cache for logged-in users proxy_cache_bypass $cookie_auth_tkt ; proxy_no_cache $cookie_auth_tkt ; proxy_cache_valid 30m ; proxy_cache_key $host$scheme$proxy_host$request_uri ; # Ignore apache Cache-Control header # See https : // lists . okfn . org / pipermail / ckan-dev / 2016 - March / 009864 . html proxy_ignore_headers Cache-Control ; # In emergency comment out line to force caching # proxy_ignore_headers X-Accel-Expires Expires ; # Show cache status add_header X-Cache-Status $upstream_cache_status ; } location / meta / cache / purge { allow 192.168.0.0/16 ; allow 172.16.0.0/12 ; allow 10.0.0.0/8 ; allow 127.0.0.1 ; deny all ; if ($request_method = PURGE ) { content_by_lua_block { filename = /tmp/nginx_cache/ local f = io.open(filename, r ) if (f~=nil) then io.close(f) os.execute( rm -rf ..filename.. ) end ngx.say( OK ) ngx.exit(ngx.OK) } } } } Finalmente, reiniciamos openresty : systemctl restart openresty . Ahora que tenemos la cach\u00e9 configurada, necesitamos configurar la llamada, o hook, de invalidaci\u00f3n de cach\u00e9. Para esto, entramos al servidor donde est\u00e1 corriendo andino y corremos: IP_INTERNA_CACHE = ip interna del servidor de cach\u00e9 cd /etc/portal docker-compose -f latest.yml exec portal /etc/ckan_init.d/update_conf.sh andino.cache_clean_hook=http:// $IP_INTERNA_CACHE /meta/cache/purge ; docker-compose -f latest.yml restart portal nginx Si queremos probar la integraci\u00f3n, podemos entrar al contenedor de andino y probar invalidar la cach\u00e9: IP_INTERNA_CACHE = ip interna del servidor de cach \u00e9 cd / etc / portal docker-compose -f latest . yml exec portal curl -X PURGE http://$IP_INTERNA_CACHE/meta/cache/purge ; # = OK NOTA: Si estamos usando nuestro andino con un IP y no con un dominio, tendremos que cambiar la configuraci\u00f3n ckan.site_url para que use la IP del servidor donde se encuentra la cach\u00e9 externa. IP_PUBLICA_CACHE = ip publica del servidor cach\u00e9 cd /etc/portal docker-compose -f latest.yml exec portal /etc/ckan_init.d/update_conf.sh ckan.site_url=http:// $IP_PUBLICA_CACHE ; docker-compose -f latest.yml restart portal nginx","title":"Cach\u00e9 externa"},{"location":"developers/maintenance/#configuracion-de-cors","text":"Cuando es necesario acceder a Andino desde URLs distintas que apuntan a una misma instancia (ej: accediendo a trav\u00e9s de un gateway/cach\u00e9 o directamente a la instancia de Andino o usando la IP p\u00fablica del servidor host ) es necesario, para el correcto funcionamiento de Andino, configurar par\u00e1metros para habilitar CORS ( Cross-Origin Resource Sharing ). Esto se debe a que un Andino debe tener una URL can\u00f3nica, por lo tanto, las dem\u00e1s URLs utilizadas deben estar en el whitelist de CORS de Andino. Para poder navegar tu Andino usando como URL una que no es la can\u00f3nica de tu instancia, ten\u00e9s que realizar dos acciones (los comandos deben ser ejecutados desde el directorio de instalaci\u00f3n de Andino; por default , /etc/portal ): Habilitar el comportamiento CORS: docker-compose -f latest.yml exec portal /etc/ckan_init.d/update_conf.sh \"ckan.cors.origin_allow_all = false\" (si bien el par\u00e1metro de configuraci\u00f3n tiene el valor false , esto habilita el control de URLs contra el whitelist ). Agregar las URLs al whitelist : docker-compose -f latest.yml exec portal /etc/ckan_init.d/update_conf.sh \"ckan.cors.origin_whitelist=http://localhost:8080 http://127.0.0.1 http://127.0.0.1:8080\" (en el ejemplo se habilitan las URLs http://localhost:8080 , http://127.0.0.1 y http://127.0.0.1:8080 ). Luego reinici\u00e1 los contenedores portal y nginx : docker-compose -f latest.yml restart nginx portal . Si dese\u00e1s habilitar todas las URLs para CORS (no recomendado), en el paso 1 deb\u00e9s pasar el valor true para el atributo de configuraci\u00f3n ckan.cors.origin_allow_all . Para ver m\u00e1s acerca del funcionamiento de CORS en CKAN ver la documentaci\u00f3n oficial de CKAN (en ingl\u00e9s) .","title":"Configuraci\u00f3n de CORS"},{"location":"developers/maintenance/#configuracion-del-explorador-de-series-de-tiempo","text":"Andino tiene instalado el plugin ckanext-seriestiempoarexplorer , pero no se encuentra presente entre los plugins activos. Para activarlo, debemos entrar al contenedor de andino, editar el archivo /etc/ckan/default/production.ini y agregar el seriestiempoarexplorer a la lista de plugins. Luego de agregarlo, debemos reinicar el servidor. cd /etc/portal docker-compose -f latest.yml exec portal bash; vim /etc/ckan/default/production.ini # ... apachectl restart Luego, si vamos a la configuraci\u00f3n del sitio, podremos apreciar que se agrego una nueva secci\u00f3n \"Series\" en el apartado \"Otras secciones del portal\".","title":"Configuraci\u00f3n del explorador de series de tiempo"},{"location":"developers/maintenance/#acceso-a-los-datos-de-andino","text":"","title":"Acceso a los datos de andino"},{"location":"developers/maintenance/#encontrar-los-volumenes-de-mi-andino-dentro-del-filesystem-del-host","text":"docker-compose -f /etc/portal/latest.yml ps -q andino solr db | xargs -n 1 | while read container; do docker inspect -f {{ .Name }} : {{ range .Mounts }}{{ .Source }} : {{ .Destination }} {{ end }} $container; done","title":"Encontrar los vol\u00famenes de mi andino dentro del filesystem del host"},{"location":"developers/maintenance/#ver-las-direcciones-ip-de-mis-contenedores","text":"docker-compose -f /etc/portal/latest.yml ps -q andino solr db | xargs -n 1 | while read container; do docker inspect -f {{ .Name }} : {{ range .NetworkSettings.Networks }}{{ .IPAddress }}{{ end }} $container; done","title":"Ver las direcciones IP de mis contenedores"},{"location":"developers/maintenance/#ver-las-variables-de-entorno-que-tienen-mis-contenedores","text":"docker-compose -f /etc/portal/latest.yml ps -q andino solr db | xargs -n 1 | while read container; do docker inspect -f {{ range $ index , $ value := .Config.Env }} export {{ $ value }}{{ println }}{{ end }} $container; done","title":"Ver las variables de entorno que tienen mis contenedores"},{"location":"developers/maintenance/#acceder-con-un-cliente-de-postgresql-a-las-bases-de-datos","text":"docker-compose -f dev.yml exec db psql -U postgres # psql \\c ckan db default CKAN # psql \\c datastore_default db datastore CKAN","title":"Acceder con un cliente de PostgreSQL a las bases de datos"},{"location":"developers/maintenance/#eliminar-objetos-definitivamente","text":"Es bien sabido que, dentro de CKAN, cada vez que borranmos algun elemento, en verdad no se borra, sino que pasa a estar inactivo; por lo tanto, tener alguna forma de eliminar elementos de manera definitiva resulta altamente necesario.","title":"Eliminar objetos definitivamente"},{"location":"developers/maintenance/#purgar-organizaciones-borradas","text":"curl -X POST http://tu-host/api/3/action/organization_purge -H Authorization:tu-api-key -F id=id-o-nombre-que-se-desea-borrar","title":"Purgar Organizaciones Borradas"},{"location":"developers/maintenance/#purgar-grupos-borrados","text":"curl -X POST http://tu-host/api/3/action/group_purge -H Authorization:tu-api-key -F id=id-o-nombre-que-se-desea-borrar","title":"Purgar Grupos Borrados"},{"location":"developers/maintenance/#purgar-datasets-borrados","text":"curl -X POST http://tu-host/api/3/action/dataset_purge -H Authorization:tu-api-key -F id=id-o-nombre-que-se-desea-borrar","title":"Purgar Datasets Borrados"},{"location":"developers/maintenance/#listar-nombres-de-los-datasets-contenidos-en-andino","text":"docker-compose -f /etc/portal/latest.yml exec portal /etc/ckan_init.d/paster.sh --plugin = ckan dataset list | grep -v DEBUG | grep -v count | grep -v Datasets | xargs -n2 | while read id name ; do echo $name ; done","title":"Listar nombres de los datasets contenidos en Andino"},{"location":"developers/maintenance/#backups","text":"Es altamente recomendable hacer copias de seguridad de los datos de la aplicaci\u00f3n, tanto la base de datos como los archivos de configuraci\u00f3n y subidos por los usuarios.","title":"Backups"},{"location":"developers/maintenance/#backup-de-la-base-de-datos","text":"Un ejemplo f\u00e1cil de hacer un backup de la base de datos ser\u00eda: container=$(docker-compose -f latest.yml ps -q db) today=`date +%Y-%m-%d.%H:%M:%S` filename= backup-$today.gz # Creo un directorio temporal y defino d\u00f3nde generar\u00e9 el backup backupdir=$(mktemp -d) backupfile= $backupdir/$filename # Exporto la base de datos docker exec $container pg_dumpall -c -U postgres | gzip gt; $backupfile # Copio el archivo al directorio actual y borro el original # Podr\u00eda reemplazar $PWD con mi directorio de backups, como /etc/portal/backups mv $backupfile $PWD Y para los dem\u00e1s archivos de la aplicaci\u00f3n (requiere jq ): backupdir=$(mktemp -d) today=`date +%Y-%m-%d.%H:%M:%S` appbackupdir= $backupdir/application/ mkdir $appbackupdir container=$(docker-compose -f latest.yml ps -q portal) docker inspect --format {{ json .Mounts }} $container | jq -r .[]|[.Name, .Source, .Destination] | @tsv | while IFS=$ \\t read -r name source destination; do if ls $source/* 1 gt; /dev/null 2 gt; amp;1; then dest= $appbackupdir$name mkdir -p $dest tar -C $source -zcvf $dest/backup_$today.tar.gz $(ls $source) else echo No file at $source fi done tar -C $appbackupdir../ -zcvf backup.tar.gz application/ Podria colocarse esos scripts en el directorio donde se instal\u00f3 la aplicaci\u00f3n (ejemplo : /etc/portal/backup.sh ) y luego agregar un cron : Para correr el script cada domingo, podr\u00edamos usar la configuraci\u00f3n 0 0 * * 0 (ver cron para m\u00e1s informaci\u00f3n), correr el comando crontab -e y agregar la l\u00ednea: 0 0 * * 0 cd /etc/portal/ amp; amp; bash /etc/portal/backup.sh","title":"Backup de la base de datos"},{"location":"developers/maintenance/#realizar-un-backup-del-file-system","text":"# Exporto el path al almacenamiento del volumen export CKAN_FS_STORAGE=$(docker inspect --format {{ range .Mounts }}{{ if eq .Destination /var/lib/ckan }}{{ .Source }}{{ end }}{{ end }} andino) # Creo un tar.gz con la info. tar -C $(dirname $CKAN_FS_STORAGE ) -zcvf /ruta/para/guardar/mis/bkps/mi_andino.fs-data_$(date +%F).tar.gz $(basename $CKAN_FS_STORAGE )","title":"Realizar un backup del file system"},{"location":"developers/maintenance/#realizar-un-backup-de-la-configuracion","text":"# Exporto el path al almacenamiento del volumen export ANDINO_CONFIG=$(docker inspect --format {{ range .Mounts }}{{ if eq .Destination /etc/ckan/default }}{{ .Source }}{{ end }}{{ end }} andino) # Creo un tar.gz con la info. tar -C $(dirname $ANDINO_CONFIG ) -zcvf /ruta/para/guardar/mis/bkps/mi_andino.config-data_$(date +%F).tar.gz $(basename $ANDINO_CONFIG )","title":"Realizar un backup de la configuraci\u00f3n"},{"location":"developers/maintenance/#recomendaciones-de-seguridad-y-optimizaciones","text":"Mantener seguro un servidor web puede ser una tarea ardua, pero sobre todo es constante , ya que constantemente se detectan nuevas vulnerabilidades en los distintos softwares. Y un servidor web no es la excepci\u00f3n! En este breve apartado, se dar\u00e1n peque\u00f1as recomendaciones para mantener seguro el servidor, no solo antes posibles atacantes, sino tambien ante posibles fallos del sistema y como efectuar mitigaciones. Las siguientes recomendaciones puden ser implementadas f\u00e1cilmente en un sistema Ubuntu 16.04, el cual es el recomendado (a la fecha), para correr la aplicaci\u00f3n.","title":"Recomendaciones de Seguridad y Optimizaciones"},{"location":"developers/maintenance/#https","text":"HTTPS permite que la conexi\u00f3n entre el browser y el servidor sea encriptada y de esta manera segura. Es altamente recomendable usar HTTPS, para mantener la privacidad de los usuarios. El portal de documentaci\u00f3n para desarrolladores de Google provee buena informaci\u00f3n sobre esto: https://developers.google.com/web/fundamentals/security/encrypt-in-transit/why-https","title":"HTTPS"},{"location":"developers/maintenance/#sistema-y-librerias","text":"Es altamente recomendable mantener el sistema operativo y las aplicaciones que usemos actualizadas. Constantemente se est\u00e1n subiendo fixes de seguridad y posibles intrusos podr\u00edan aprovechar que las aplicaciones o el mismo sistema operativo est\u00e9n desactualizados. Peri\u00f3dicamente, podr\u00edamos constatar las nuevas versiones de nuestro software y actualizar dentro de lo posible. Como ejemplo, podemos ver que para Ubuntu 16.04 sali\u00f3 Ubuntu 16.04.2, con algunas correcciones de seguridad. Ver .","title":"Sistema y librer\u00edas"},{"location":"developers/maintenance/#firewall","text":"Todo servidor debe tener activado el firewall. El firewall permitir\u00e1 denegar (o permitr) el acceso a la red. En un servidor web, el puerto abierto al p\u00fablico deber\u00edan ser s\u00f3lo el 80 (http) y el 443 (https). Adem\u00e1s de ese puerto, si la m\u00e1quina es accedida remotamente mediante un servidor SSH, deber\u00edamos abrir este puerto tambi\u00e9n, pero con un l\u00edmite de acceso. La soluci\u00f3n es f\u00e1cilmente implementable con el programa ufw .","title":"Firewall"},{"location":"developers/maintenance/#ssh","text":"Los servidores ssh permiten el acceso al servidor remotamente. No debe permitirse el acceso por ssh mediante usuario y password . S\u00f3lo debe permitirse el acceso mediante clave publica. DigitalOcean tiene una buena gu\u00eda de c\u00f3mo configurar las claves p\u00fablicas Ver .","title":"SSH"},{"location":"developers/maintenance/#optimizacion-de-logging","text":"","title":"Optimizaci\u00f3n de logging"},{"location":"developers/maintenance/#configurar-otro-logging-driver","text":"Por default, docker escribe a un archivo con formato json , lo cual puede llevar a que se acumulen los logs de la aplicaci\u00f3n, y estos archivos crezcan indefinidamente. Para evitar esto, se puede configurar el logging driver de docker. La recomendacion es usar journald y configurarlo para que los logs sean persistentes.","title":"Configurar otro logging driver"},{"location":"developers/maintenance/#eliminar-logs-antiguos-de-docker","text":"Dentro del normal funcionamiento de la plataforma, se genera una gran cantidad de logs, los cuales, ante un incidencia, son sumamente \u00fatiles. Pero, luego de un tiempo, y sabiendo que los mismos se almacenan internamente en Andino, podr\u00eda ser necesario eliminarlos. sudo su -c ls /var/lib/docker/containers/ | xargs -n1 | while read docker_id; do truncate -s 0 /var/lib/docker/containers/ ${ docker_id %/* } / ${ docker_id %/* } -json.log; done","title":"Eliminar logs antiguos de Docker"},{"location":"developers/maintenance/#eliminar-logs-dentro-de-andino","text":"docker-compose -f /etc/portal/latest.yml exec portal truncate -s 0 /var/log/apache2/*.log","title":"Eliminar logs dentro de Andino"},{"location":"developers/migration/","text":"Migracion de version 1.0 de andino a 2.0 En el presente documento, se pretende explicar c\u00f3mo llevar a cabo una migraci\u00f3n de la versi\u00f3n 1.0 de andino a la versi\u00f3n 2.0 de andino. Indice 1) Requisitos 2) Script de migraci\u00f3n autom\u00e1tico. 3) Migraci\u00f3n manual 3.1) Backup de la base de datos 3.2) Backup de los archivos de la aplicaci\u00f3n 4) Instalaci\u00f3n 4.1) Detener la aplicaci\u00f3n 4.2) Instalar la aplicaci\u00f3n 5) Restores 5.1) Restaurar los archivos 5.2) Restaurar la base de datos 5.3) Regenerar el \u00edndice de b\u00fasquedas 1) Requisitos Se requiere tener instalado: jq = 1.5 docker docker-compose Se asume que, en el servidor, hay 3 containers de docker corriendo: app-ckan pg-ckan solr-ckan Adem\u00e1s, se debe conocer los usuarios y passwords de la base de datos (tanto de la usada por ckan como por el datastore ). 2) Script de migraci\u00f3n autom\u00e1tico. El repositorio cuenta con un script para correr la migraci\u00f3n autom\u00e1ticamente. (el mismo se puede encontrar en install/migrate.sh , dentro del repositorio). Ciertas variables de entorno y tener instalado docker y docker-compose . Debe ser ejecutado con sudo o root . Ejemplo: export EMAIL=admin@example.com export HOST=andino.midomionio.com.ar export DB_USER=usuario export DB_PASS=password export STORE_USER=dsuser export STORE_PASS=dspass sudo -E ./migrate.sh 3) Migraci\u00f3n manual Para realizar la migraci\u00f3n manual, debemos conocer las variables con las que se inicializ\u00f3 el portal. En este caso, ser\u00e1n las siguientes: export EMAIL=admin@example.com export HOST=andino.midomionio.com.ar export DB_USER=usuario export DB_PASS=password export STORE_USER=dsuser export STORE_PASS=dspass 3.1) Backup de la base de datos Es necesario hacer un backup de la base de datos antes de empezar con la migraci\u00f3n. La misma puede llevarse a cabo con el siguiente script: #!/usr/bin/env bash set -e ; old_db = pg-ckan database_backup = backup.gz echo Creando backup de la base de datos. backupdir = $( mktemp -d ) backupfile = $backupdir / $database_backup echo Iniciando backup de $old_db echo Usando directorio temporal: $backupdir docker exec $old_db pg_dumpall -c -U postgres | gzip $backupfile echo Copiando backup a $PWD cp $backupfile $PWD echo Backup listo. Este script dejar\u00e1 un archivo backup.gz en el directorio actual. 3.2) Backup de los archivos de la aplicaci\u00f3n Es necesario hacer un backup de los archivos de la aplicaci\u00f3n: configuraci\u00f3n y archivos subidos. El mismo puede llevarse a cabo con el siguiente script: Nota: Requiere jq = 1.5 #!/usr/bin/env bash set -e ; old_andino = app-ckan app_backup = backup.tar.gz echo Creando backup de los archivos de configuraci\u00f3n. backupdir = $( mktemp -d ) today = ` date +%Y-%m-%d.%H:%M:%S ` appbackupdir = $backupdir /application/ mkdir $appbackupdir echo Iniciando backup de los volumenes en $old_andino echo Usando directorio temporal: $backupdir docker inspect --format {{json .Mounts}} $old_andino | jq -r .[]|[.Name, .Source, .Destination] | @tsv | while IFS = $ \\t read -r name source destination ; do echo Guardando archivos de $destination if ls $source /* 1 /dev/null 2 1 ; then echo Nombre del volumen: $name . echo Directorio en el Host: $source echo Destino: $destination dest = $appbackupdir$name mkdir -p $dest echo $destination $dest /destination.txt tar -C $source -zcvf $dest /backup_ $today .tar.gz $( ls $source ) echo List backup de $destination else echo Ning\u00fan archivo para $destination ; fi done echo Generando backup en $app_backup tar -C $appbackupdir ../ -zcvf $app_backup application/ echo Backup listo. Este script dejar\u00e1 un archivo backup.tar.gz en el directorio actual. El mismo, una vez descomprimido, contendr\u00e1 la siguiente estructura (por ejemplo): - application/ \u251c\u2500\u2500 61ee6cc7dc974476fe3300cc4325d913ed2f949494419b11a5c7c897fa919106 \u2502 \u251c\u2500\u2500 backup_2017-05-19.10:56:09.tar.gz \u2502 \u2514\u2500\u2500 destination.txt \u2514\u2500\u2500 b1bf820976c3220e54136e4db229a67a9d9292896ad8d91623030e3b7171f210 \u251c\u2500\u2500 backup_2017-05-19.10:56:09.tar.gz \u2514\u2500\u2500 destination.txt Cada sub-directorio contiene el ID del volumen en docker usado; los n\u00fameros varian de volumen en volumen. Dentro de cada sub-directorio se encuentra un archivo .tar.gz junto con un archivo destination.txt. El archivo destination.txt indica d\u00f3nde corresponde la informaci\u00f3n dentro del container. El archivo .tar.gz contiene una carpeta _data con los archivos. 4) Instalaci\u00f3n 4.1) Detener la aplicaci\u00f3n Debemos detener la aplicaci\u00f3n para lograr que se liberen los puertos usados. Por ejemplo, el puerto 80. docker stop solr-ckan pg-ckan app-ckan 4.2) Instalar la aplicaci\u00f3n Ver la documentaci\u00f3n Aqu\u00ed Nota: Actualizar la versi\u00f3n de docker y docker-compose de ser necesario. Ahora, es necesario restaurar tanto la base de datos como los archivos de la aplicaci\u00f3n. 5) Restores 5.1) Restaurar los archivos Descomprimir el archivo backup.tar.gz . En cada subdirectorio encontraremos el archivo destination.txt; el contenido de este archivo nos ayudar\u00e1 a saber donde debemos copiar los archivos. Con el siguiete comando, podremos saber qu\u00e9 vol\u00famenes hay montados en el nuevo esquema y d\u00f3nde debemos copiar los archivos dentro del backup_*.tar.gz Correr docker inspect andino -f '{{ json .Mounts }}' | jq : El comando mostrar\u00e1, por ejemplo, lo siquiente: [ { Type : volume , Name : a1d87160a04e270302582849c9ce5c6dbb44719a94b702158aeaf23835f7862f , Source : /var/lib/docker/volumes/a1d87160a04e270302582849c9ce5c6dbb44719a94b702158aeaf23835f7862f/_data , Destination : /etc/ckan/default , Driver : local , Mode : , RW : true, Propagation : }, { Type : volume , Name : 7ab721966628bf692a3d451567c9a01b419ba5189b88ef05484de315c73f6275 , Source : /var/lib/docker/volumes/7ab721966628bf692a3d451567c9a01b419ba5189b88ef05484de315c73f6275/_data , Destination : /usr/lib/ckan/default/src/ckanext-gobar-theme/ckanext/gobar_theme/public/user_images , Driver : local , Mode : , RW : true, Propagation : }, ... Como podemos ver, hay una entrada \"Destination\" que coincidir\u00e1 con el contenido del archivo destination.txt en cada directorio. Debemos asegurarnos de no copiar el archivo production.ini, ya que el mismo cambio bastante de versi\u00f3n en versi\u00f3n. El restore puede ser llevado a cabo con el siguiente script: #!/usr/bin/env bash set -e ; echo Iniciando recuperaci\u00f3n de Archivos. install_dir = /etc/portal ; container = andino app_backup = backup.tar.gz containers = $( docker ps -q ) if [ -z $containers ] ; then echo No se encontr\u00f3 ningun contenedor corriendo. else docker stop $containers fi restoredir = $( mktemp -d ) echo Usando directorio temporal $restoredir tar zxvf $app_backup -C $restoredir docker inspect --format {{json .Mounts}} $container | jq -r .[]|[.Name, .Source, .Destination] | @tsv | while IFS = $ \\t read -r name source destination ; do for directory in $restoredir /application/* ; do dest = $( cat $directory /destination.txt ) if [ $dest == $destination ] ; then echo Recuperando archivos para $destination tar zxvf $directory / $( ls $directory | grep backup ) -C $source fi done done echo Restauraci\u00f3n lista. echo Reiniciando servicios. cd $install_dir ; docker-compose -f latest.yml restart ; cd - ; 5.2) Restaurar la base de datos Para restaurar la base de datos, se puede usar el siguiente script contra el archivo previamente generado (backup.gz): #!/usr/bin/env bash set -e ; install_dir = /etc/portal ; database_backup = backup.gz container = andino-db echo Iniciando restauraci\u00f3n de la base de datos. containers = $( docker ps -q ) if [ -z $containers ] ; then echo No se encontr\u00f3 ningun contenedor corriendo. else docker stop $containers fi docker restart $container sleep 10 ; restoredir = $( mktemp -d ) ; echo Usando directorio temporal $restoredir restorefile = $restoredir /dump.sql ; gzip -dkc $database_backup $restorefile ; echo Borrando base de datos actual. docker exec $container psql -U postgres -c DROP DATABASE IF EXISTS ckan; docker exec $container psql -U postgres -c DROP DATABASE IF EXISTS datastore_default; echo Restaurando la base de datos desde: $restorefile cat $restorefile | docker exec -i $container psql -U postgres echo Recuperando credenciales de los usuarios docker exec $container psql -U postgres -c ALTER USER $DB_USER WITH PASSWORD $DB_PASS ; docker exec $container psql -U postgres -c ALTER USER $STORE_USER WITH PASSWORD $STORE_PASS ; echo Restauraci\u00f3n lista. echo Reiniciando servicios. cd $install_dir ; docker-compose -f latest.yml restart ; cd - ; 5.3) Regenerar el \u00edndice de b\u00fasquedas Para regenerar el \u00edndice de b\u00fasquedas, debemos ir al directorio donde se instal\u00f3 la aplicaci\u00f3n y correr el siguiente comando: docker-compose -f latest.yml exec portal /etc/ckan_init.d/run_rebuild_search.sh","title":"Migracion"},{"location":"developers/migration/#migracion-de-version-10-de-andino-a-20","text":"En el presente documento, se pretende explicar c\u00f3mo llevar a cabo una migraci\u00f3n de la versi\u00f3n 1.0 de andino a la versi\u00f3n 2.0 de andino.","title":"Migracion de version 1.0 de andino a 2.0"},{"location":"developers/migration/#indice","text":"1) Requisitos 2) Script de migraci\u00f3n autom\u00e1tico. 3) Migraci\u00f3n manual 3.1) Backup de la base de datos 3.2) Backup de los archivos de la aplicaci\u00f3n 4) Instalaci\u00f3n 4.1) Detener la aplicaci\u00f3n 4.2) Instalar la aplicaci\u00f3n 5) Restores 5.1) Restaurar los archivos 5.2) Restaurar la base de datos 5.3) Regenerar el \u00edndice de b\u00fasquedas","title":"Indice"},{"location":"developers/migration/#1-requisitos","text":"Se requiere tener instalado: jq = 1.5 docker docker-compose Se asume que, en el servidor, hay 3 containers de docker corriendo: app-ckan pg-ckan solr-ckan Adem\u00e1s, se debe conocer los usuarios y passwords de la base de datos (tanto de la usada por ckan como por el datastore ).","title":"1) Requisitos"},{"location":"developers/migration/#2-script-de-migracion-automatico","text":"El repositorio cuenta con un script para correr la migraci\u00f3n autom\u00e1ticamente. (el mismo se puede encontrar en install/migrate.sh , dentro del repositorio). Ciertas variables de entorno y tener instalado docker y docker-compose . Debe ser ejecutado con sudo o root . Ejemplo: export EMAIL=admin@example.com export HOST=andino.midomionio.com.ar export DB_USER=usuario export DB_PASS=password export STORE_USER=dsuser export STORE_PASS=dspass sudo -E ./migrate.sh","title":"2) Script de migraci\u00f3n autom\u00e1tico."},{"location":"developers/migration/#3-migracion-manual","text":"Para realizar la migraci\u00f3n manual, debemos conocer las variables con las que se inicializ\u00f3 el portal. En este caso, ser\u00e1n las siguientes: export EMAIL=admin@example.com export HOST=andino.midomionio.com.ar export DB_USER=usuario export DB_PASS=password export STORE_USER=dsuser export STORE_PASS=dspass","title":"3) Migraci\u00f3n manual"},{"location":"developers/migration/#31-backup-de-la-base-de-datos","text":"Es necesario hacer un backup de la base de datos antes de empezar con la migraci\u00f3n. La misma puede llevarse a cabo con el siguiente script: #!/usr/bin/env bash set -e ; old_db = pg-ckan database_backup = backup.gz echo Creando backup de la base de datos. backupdir = $( mktemp -d ) backupfile = $backupdir / $database_backup echo Iniciando backup de $old_db echo Usando directorio temporal: $backupdir docker exec $old_db pg_dumpall -c -U postgres | gzip $backupfile echo Copiando backup a $PWD cp $backupfile $PWD echo Backup listo. Este script dejar\u00e1 un archivo backup.gz en el directorio actual.","title":"3.1) Backup de la base de datos"},{"location":"developers/migration/#32-backup-de-los-archivos-de-la-aplicacion","text":"Es necesario hacer un backup de los archivos de la aplicaci\u00f3n: configuraci\u00f3n y archivos subidos. El mismo puede llevarse a cabo con el siguiente script: Nota: Requiere jq = 1.5 #!/usr/bin/env bash set -e ; old_andino = app-ckan app_backup = backup.tar.gz echo Creando backup de los archivos de configuraci\u00f3n. backupdir = $( mktemp -d ) today = ` date +%Y-%m-%d.%H:%M:%S ` appbackupdir = $backupdir /application/ mkdir $appbackupdir echo Iniciando backup de los volumenes en $old_andino echo Usando directorio temporal: $backupdir docker inspect --format {{json .Mounts}} $old_andino | jq -r .[]|[.Name, .Source, .Destination] | @tsv | while IFS = $ \\t read -r name source destination ; do echo Guardando archivos de $destination if ls $source /* 1 /dev/null 2 1 ; then echo Nombre del volumen: $name . echo Directorio en el Host: $source echo Destino: $destination dest = $appbackupdir$name mkdir -p $dest echo $destination $dest /destination.txt tar -C $source -zcvf $dest /backup_ $today .tar.gz $( ls $source ) echo List backup de $destination else echo Ning\u00fan archivo para $destination ; fi done echo Generando backup en $app_backup tar -C $appbackupdir ../ -zcvf $app_backup application/ echo Backup listo. Este script dejar\u00e1 un archivo backup.tar.gz en el directorio actual. El mismo, una vez descomprimido, contendr\u00e1 la siguiente estructura (por ejemplo): - application/ \u251c\u2500\u2500 61ee6cc7dc974476fe3300cc4325d913ed2f949494419b11a5c7c897fa919106 \u2502 \u251c\u2500\u2500 backup_2017-05-19.10:56:09.tar.gz \u2502 \u2514\u2500\u2500 destination.txt \u2514\u2500\u2500 b1bf820976c3220e54136e4db229a67a9d9292896ad8d91623030e3b7171f210 \u251c\u2500\u2500 backup_2017-05-19.10:56:09.tar.gz \u2514\u2500\u2500 destination.txt Cada sub-directorio contiene el ID del volumen en docker usado; los n\u00fameros varian de volumen en volumen. Dentro de cada sub-directorio se encuentra un archivo .tar.gz junto con un archivo destination.txt. El archivo destination.txt indica d\u00f3nde corresponde la informaci\u00f3n dentro del container. El archivo .tar.gz contiene una carpeta _data con los archivos.","title":"3.2) Backup de los archivos de la aplicaci\u00f3n"},{"location":"developers/migration/#4-instalacion","text":"","title":"4) Instalaci\u00f3n"},{"location":"developers/migration/#41-detener-la-aplicacion","text":"Debemos detener la aplicaci\u00f3n para lograr que se liberen los puertos usados. Por ejemplo, el puerto 80. docker stop solr-ckan pg-ckan app-ckan","title":"4.1) Detener la aplicaci\u00f3n"},{"location":"developers/migration/#42-instalar-la-aplicacion","text":"Ver la documentaci\u00f3n Aqu\u00ed Nota: Actualizar la versi\u00f3n de docker y docker-compose de ser necesario. Ahora, es necesario restaurar tanto la base de datos como los archivos de la aplicaci\u00f3n.","title":"4.2) Instalar la aplicaci\u00f3n"},{"location":"developers/migration/#5-restores","text":"","title":"5) Restores"},{"location":"developers/migration/#51-restaurar-los-archivos","text":"Descomprimir el archivo backup.tar.gz . En cada subdirectorio encontraremos el archivo destination.txt; el contenido de este archivo nos ayudar\u00e1 a saber donde debemos copiar los archivos. Con el siguiete comando, podremos saber qu\u00e9 vol\u00famenes hay montados en el nuevo esquema y d\u00f3nde debemos copiar los archivos dentro del backup_*.tar.gz Correr docker inspect andino -f '{{ json .Mounts }}' | jq : El comando mostrar\u00e1, por ejemplo, lo siquiente: [ { Type : volume , Name : a1d87160a04e270302582849c9ce5c6dbb44719a94b702158aeaf23835f7862f , Source : /var/lib/docker/volumes/a1d87160a04e270302582849c9ce5c6dbb44719a94b702158aeaf23835f7862f/_data , Destination : /etc/ckan/default , Driver : local , Mode : , RW : true, Propagation : }, { Type : volume , Name : 7ab721966628bf692a3d451567c9a01b419ba5189b88ef05484de315c73f6275 , Source : /var/lib/docker/volumes/7ab721966628bf692a3d451567c9a01b419ba5189b88ef05484de315c73f6275/_data , Destination : /usr/lib/ckan/default/src/ckanext-gobar-theme/ckanext/gobar_theme/public/user_images , Driver : local , Mode : , RW : true, Propagation : }, ... Como podemos ver, hay una entrada \"Destination\" que coincidir\u00e1 con el contenido del archivo destination.txt en cada directorio. Debemos asegurarnos de no copiar el archivo production.ini, ya que el mismo cambio bastante de versi\u00f3n en versi\u00f3n. El restore puede ser llevado a cabo con el siguiente script: #!/usr/bin/env bash set -e ; echo Iniciando recuperaci\u00f3n de Archivos. install_dir = /etc/portal ; container = andino app_backup = backup.tar.gz containers = $( docker ps -q ) if [ -z $containers ] ; then echo No se encontr\u00f3 ningun contenedor corriendo. else docker stop $containers fi restoredir = $( mktemp -d ) echo Usando directorio temporal $restoredir tar zxvf $app_backup -C $restoredir docker inspect --format {{json .Mounts}} $container | jq -r .[]|[.Name, .Source, .Destination] | @tsv | while IFS = $ \\t read -r name source destination ; do for directory in $restoredir /application/* ; do dest = $( cat $directory /destination.txt ) if [ $dest == $destination ] ; then echo Recuperando archivos para $destination tar zxvf $directory / $( ls $directory | grep backup ) -C $source fi done done echo Restauraci\u00f3n lista. echo Reiniciando servicios. cd $install_dir ; docker-compose -f latest.yml restart ; cd - ;","title":"5.1) Restaurar los archivos"},{"location":"developers/migration/#52-restaurar-la-base-de-datos","text":"Para restaurar la base de datos, se puede usar el siguiente script contra el archivo previamente generado (backup.gz): #!/usr/bin/env bash set -e ; install_dir = /etc/portal ; database_backup = backup.gz container = andino-db echo Iniciando restauraci\u00f3n de la base de datos. containers = $( docker ps -q ) if [ -z $containers ] ; then echo No se encontr\u00f3 ningun contenedor corriendo. else docker stop $containers fi docker restart $container sleep 10 ; restoredir = $( mktemp -d ) ; echo Usando directorio temporal $restoredir restorefile = $restoredir /dump.sql ; gzip -dkc $database_backup $restorefile ; echo Borrando base de datos actual. docker exec $container psql -U postgres -c DROP DATABASE IF EXISTS ckan; docker exec $container psql -U postgres -c DROP DATABASE IF EXISTS datastore_default; echo Restaurando la base de datos desde: $restorefile cat $restorefile | docker exec -i $container psql -U postgres echo Recuperando credenciales de los usuarios docker exec $container psql -U postgres -c ALTER USER $DB_USER WITH PASSWORD $DB_PASS ; docker exec $container psql -U postgres -c ALTER USER $STORE_USER WITH PASSWORD $STORE_PASS ; echo Restauraci\u00f3n lista. echo Reiniciando servicios. cd $install_dir ; docker-compose -f latest.yml restart ; cd - ;","title":"5.2) Restaurar la base de datos"},{"location":"developers/migration/#53-regenerar-el-indice-de-busquedas","text":"Para regenerar el \u00edndice de b\u00fasquedas, debemos ir al directorio donde se instal\u00f3 la aplicaci\u00f3n y correr el siguiente comando: docker-compose -f latest.yml exec portal /etc/ckan_init.d/run_rebuild_search.sh","title":"5.3) Regenerar el \u00edndice de b\u00fasquedas"},{"location":"developers/tests/","text":"Tests Indice Tests de Ckan Probar la instalaci\u00f3n con SSL en Vagrant (Instalando nginx) Instalaci\u00f3n de andino Instalar y configurar nginx Para correr los tests de la aplicaci\u00f3n, se deben levantar todos los servicios, y luego inicializar la configuraci\u00f3n de test. Tests de Ckan $ docker-compose -f dev.yml up --build -d portal $ docker exec andino bash /etc/ckan_init.d/tests/install_solr4.sh $ docker exec andino bash /etc/ckan_init.d/tests/install_nodejs.sh $ docker exec andino bash -c su -c bash /etc/ckan_init.d/tests/run_all_tests.sh -l $USER Probar la instalaci\u00f3n con SSL en Vagrant (Instalando nginx) Instalaci\u00f3n de andino Primero, debemos evitar instalar la aplicaci\u00f3n en vagrant, ya que pasaremos un par\u00e1metro mas. Para eso, modificamos el Vagrantfile cambiando las l\u00edneas: -INSTALL_APP = true -UPDATE_APP = !INSTALL_APP +INSTALL_APP = false +UPDATE_APP = false Y luego levantar la VM con vagrant up . Luego entramos a la aplicaci\u00f3n y corremos el siguiente comando: sudo -E python ./install.py --error_email admin@example.com --site_host 192.168.23.10 --database_user db_user --database_password db_pass --datastore_user data_db_user --datastore_password data_db_pass --nginx_port 127.0.0.1:8000 Esto instalar\u00e1 la aplicaci\u00f3n, pero solo la har\u00e1 accesible desde localhost:8000 . Instalar y configurar nginx Luego, instalamos nginx en el host sudo apt install nginx . Generamos los certificados locales: sudo openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /etc/nginx/ssl/andino.key -out /etc/nginx/ssl/andino.crt Creamos la configuracion de nginx (no apta para producci\u00f3n) en /etc/nginx/sites-available/001-andino.conf : upstream wsgi_andino { # fail_timeout=0 means we always retry an upstream even if it failed # to return a good HTTP response (in case the gunicorn master nukes a # single worker for timing out). server 127.0.0.1:8000 fail_timeout=0 ; } server { listen 80 ; # example : server_name www . datos . gob . ar datos . gob . ar ; server_name dev.andino.gob.ar dev.andino.gob.ar ; return 301 https : // $ host $ request_uri ; } server { listen 443 ; server_name dev.andino.gob.ar ; ssl on ; ssl_certificate /etc/nginx/ssl/andino.crt ; ssl_certificate_key /etc/nginx/ssl/andino.key ; client_max_body_size 4G ; keepalive_timeout 5 ; location / { proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for ; proxy_set_header Host $http_host ; proxy_set_header X-Forwarded-Protocol https ; proxy_redirect off ; if (!-f $request_filename) { proxy_pass http : // wsgi_andino ; break ; } } gzip on ; gzip_disable msie6 ; gzip_comp_level 6 ; gzip_types text / plain text / css application / json application / x-javascript text / xml application / xml application / xml + rss text / javascript ; } Activamos el sitio: sudo rm /etc/nginx/sites-enabled/default -rf sudo ln -s /etc/nginx/sites-available/001-andino.conf /etc/nginx/sites-enabled/001-andino.conf sudo systemctl restart nginx Finalmente, accedemos al sitio en http://192.168.23.10:80, y el mismo nos deber\u00eda redireccionar a la versi\u00f3n https . El explorador nos mostrar\u00e1 una advertencia sobre el sitio, ya que no podr\u00e1 validar los certificados.","title":"Tests"},{"location":"developers/tests/#tests","text":"","title":"Tests"},{"location":"developers/tests/#indice","text":"Tests de Ckan Probar la instalaci\u00f3n con SSL en Vagrant (Instalando nginx) Instalaci\u00f3n de andino Instalar y configurar nginx Para correr los tests de la aplicaci\u00f3n, se deben levantar todos los servicios, y luego inicializar la configuraci\u00f3n de test.","title":"Indice"},{"location":"developers/tests/#tests-de-ckan","text":"$ docker-compose -f dev.yml up --build -d portal $ docker exec andino bash /etc/ckan_init.d/tests/install_solr4.sh $ docker exec andino bash /etc/ckan_init.d/tests/install_nodejs.sh $ docker exec andino bash -c su -c bash /etc/ckan_init.d/tests/run_all_tests.sh -l $USER","title":"Tests de Ckan"},{"location":"developers/tests/#probar-la-instalacion-con-ssl-en-vagrant-instalando-nginx","text":"","title":"Probar la instalaci\u00f3n con SSL en Vagrant (Instalando nginx)"},{"location":"developers/tests/#instalacion-de-andino","text":"Primero, debemos evitar instalar la aplicaci\u00f3n en vagrant, ya que pasaremos un par\u00e1metro mas. Para eso, modificamos el Vagrantfile cambiando las l\u00edneas: -INSTALL_APP = true -UPDATE_APP = !INSTALL_APP +INSTALL_APP = false +UPDATE_APP = false Y luego levantar la VM con vagrant up . Luego entramos a la aplicaci\u00f3n y corremos el siguiente comando: sudo -E python ./install.py --error_email admin@example.com --site_host 192.168.23.10 --database_user db_user --database_password db_pass --datastore_user data_db_user --datastore_password data_db_pass --nginx_port 127.0.0.1:8000 Esto instalar\u00e1 la aplicaci\u00f3n, pero solo la har\u00e1 accesible desde localhost:8000 .","title":"Instalaci\u00f3n de andino"},{"location":"developers/tests/#instalar-y-configurar-nginx","text":"Luego, instalamos nginx en el host sudo apt install nginx . Generamos los certificados locales: sudo openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /etc/nginx/ssl/andino.key -out /etc/nginx/ssl/andino.crt Creamos la configuracion de nginx (no apta para producci\u00f3n) en /etc/nginx/sites-available/001-andino.conf : upstream wsgi_andino { # fail_timeout=0 means we always retry an upstream even if it failed # to return a good HTTP response (in case the gunicorn master nukes a # single worker for timing out). server 127.0.0.1:8000 fail_timeout=0 ; } server { listen 80 ; # example : server_name www . datos . gob . ar datos . gob . ar ; server_name dev.andino.gob.ar dev.andino.gob.ar ; return 301 https : // $ host $ request_uri ; } server { listen 443 ; server_name dev.andino.gob.ar ; ssl on ; ssl_certificate /etc/nginx/ssl/andino.crt ; ssl_certificate_key /etc/nginx/ssl/andino.key ; client_max_body_size 4G ; keepalive_timeout 5 ; location / { proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for ; proxy_set_header Host $http_host ; proxy_set_header X-Forwarded-Protocol https ; proxy_redirect off ; if (!-f $request_filename) { proxy_pass http : // wsgi_andino ; break ; } } gzip on ; gzip_disable msie6 ; gzip_comp_level 6 ; gzip_types text / plain text / css application / json application / x-javascript text / xml application / xml application / xml + rss text / javascript ; } Activamos el sitio: sudo rm /etc/nginx/sites-enabled/default -rf sudo ln -s /etc/nginx/sites-available/001-andino.conf /etc/nginx/sites-enabled/001-andino.conf sudo systemctl restart nginx Finalmente, accedemos al sitio en http://192.168.23.10:80, y el mismo nos deber\u00eda redireccionar a la versi\u00f3n https . El explorador nos mostrar\u00e1 una advertencia sobre el sitio, ya que no podr\u00e1 validar los certificados.","title":"Instalar y configurar nginx"},{"location":"developers/update/","text":"Indice Actualizaci\u00f3n Versiones 2.x Actualizaci\u00f3n simple Actualizaci\u00f3n avanzada Andino con plugins ad-hoc Versiones 2.4.x a 2.5.x Versiones 1.x a 2.x Actualizaci\u00f3n Versiones 2.x Nota: si actualiz\u00e1s desde una versi\u00f3n 2.4.x a una versi\u00f3n 2.5.x ver Versiones 2.4.x a 2.5.x ANTES de proceder con la actualizaci\u00f3n Actualizaci\u00f3n simple Si instalamos la aplicaci\u00f3n con la \u00faltima versi\u00f3n del instalador ( este ), el mismo no requerir\u00e1 par\u00e1metros, pero contiene algunos opcionales: # Par\u00e1metros de update.py [ -h ] Mostrar la ayuda del script [ --install_directory INSTALL_DIRECTORY ] Directorio donde est\u00e1 instalada la aplicaci\u00f3n. Por defecto es ` /etc/portal ` [ --nginx-extended-cache ] Configura nginx con una configuraci\u00f3n extendida y configura el hook de invalidaci\u00f3n de cache de Andino para notificar a nginx [ --nginx_ssl ] Aplica la configuraci\u00f3n HTTPS en nginx. Requiere ambos archivos del certificado SSL para poder lograrlo ; en caso contrario, se utilizar\u00e1 la configuraci\u00f3n default [ --ssl_key_path SSL_KEY_PATH ] Path dentro del host donde est\u00e1 ubicado el archivo .key para el certificado SSL ; ser\u00e1 copiado al contenedor de nginx si tanto \u00e9ste como el .crt pueden ser encontrados [ --ssl_crt_path SSL_CRT_PATH ] Path dentro del host donde est\u00e1 ubicado el archivo .crt para el certificado SSL ; ser\u00e1 copiado al contenedor de nginx si tanto \u00e9ste como el .key pueden ser encontrados [ --nginx_port NGINX_PORT ] Puerto del servidor Host que se desea que se tome para recibir llamadas HTTP. Por defecto es el 80 . [ --nginx_ssl_port NGINX_SSL_PORT ] Puerto del servidor Host que se desea que se tome para recibir llamadas HTTPS. Por defecto es el 443 . Es importante para los administradores saber que Andino tomar\u00e1 el puerto especificado ( o el default ) ya sea que el portal use o no use HTTPS. En caso de no querer usar HTTPS y que el host tenga erl puerto 443 tomado por un servidor web, es requisito especificar un puerto distinto ( ejemplo: 8443 ) que ser\u00e1 reservado por Andino, pero no utilizado. Para esta actualizaci\u00f3n de ejemplo, usaremos los valores por defecto: sudo wget https://raw.github.com/datosgobar/portal-andino/master/install/update.py sudo python update.py De esta forma, el script asumir\u00e1 que instalamos la aplicaci\u00f3n en /etc/portal . Actualizaci\u00f3n avanzada Si instalamos la aplicaci\u00f3n en otro directorio distinto de /etc/portal , necesitamos correr el script de una manera diferente. Suponiendo que instalamos la aplicaci\u00f3n en /home/user/app/ , debemos correr los siguientes pasos: wget https://raw.github.com/datosgobar/portal-andino/master/install/update.py sudo python update.py --install_directory= /home/user/app/ Andino con plugins ad-hoc Si configuraste tu instancia de Andino con alg\u00fan plugin de CKAN que Andino no trae por defecto, es importante que antes de la instalaci\u00f3n elimines los mismos de la opcio\u00f3n de configuraci\u00f3n ckan.plugins del archivo /etc/ckan/default/production.ini del contenedor portal . Esto es importante, ya que el proceso de actualizaci\u00f3n descarga im\u00e1genes de Docker nuevas que no contendr\u00e1n los binarios de los plugins ad-hoc y si los mismos est\u00e1n en el archivo de configuraci\u00f3n de CKAN, la actualizaci\u00f3n fallar\u00e1. Los pasos adicionales que deber\u00e1s seguir si ten\u00e9s plugins ad-hoc son: Editar el archivo /etc/ckan/default/production.ini del contenedor portal y quitar de la lista de ckan.plugins los plugins ad-hoc . Actualizar Andino. Instalar los plugins ad-hoc dentro del virtualenv /usr/lib/ckan/default del contenedor portal . Editar el archivo /etc/ckan/default/production.ini del contenedor portal y agregar a la lista de ckan.plugins los plugins ad-hoc . Reiniciar Andino. Versiones 2.4.x a 2.5.x En el caso de actualizar un Andino de versi\u00f3n 2.4.x a 2.5.x existe un error conocido de CKAN 2.5.8 (Ver issue ckan/ckan#4168 ) que debe solucionarse ANTES de ejecutar la actualizaci\u00f3n . En el procedimiento normal, ocurrir\u00eda un error: sqlalchemy.exc.ProgrammingError: (ProgrammingError) column package.metadata_created does not exist Para poder solucionarlo, se debe correr el siguiente script antes de ejecutar el procedimiento normal de actualizaci\u00f3n : docker-compose -f latest.yml exec -u postgres db psql -c do \\$ $ begin IF NOT EXISTS(SELECT * FROM information_schema.columns WHERE table_name= package AND column_name= metadata_created ) OR NOT EXISTS(SELECT * FROM information_schema.columns WHERE table_name= package_revision AND column_name= metadata_created ) THEN IF NOT EXISTS(SELECT * FROM information_schema.columns WHERE table_name= package_revision AND column_name= metadata_created ) THEN ALTER TABLE package_revision ADD COLUMN metadata_created timestamp without time zone; END IF; IF NOT EXISTS(SELECT * FROM information_schema.columns WHERE table_name= package AND column_name= metadata_created ) THEN ALTER TABLE package ADD COLUMN metadata_created timestamp without time zone; END IF; UPDATE package SET metadata_created= (SELECT revision_timestamp FROM package_revision WHERE id=package.id ORDER BY revision_timestamp ASC LIMIT 1); END IF; end \\$ $ ckan Versiones 1.x a 2.x Ver documento de migraci\u00f3n","title":"Actualizaci\u00f3n"},{"location":"developers/update/#indice","text":"Actualizaci\u00f3n Versiones 2.x Actualizaci\u00f3n simple Actualizaci\u00f3n avanzada Andino con plugins ad-hoc Versiones 2.4.x a 2.5.x Versiones 1.x a 2.x","title":"Indice"},{"location":"developers/update/#actualizacion","text":"","title":"Actualizaci\u00f3n"},{"location":"developers/update/#versiones-2x","text":"Nota: si actualiz\u00e1s desde una versi\u00f3n 2.4.x a una versi\u00f3n 2.5.x ver Versiones 2.4.x a 2.5.x ANTES de proceder con la actualizaci\u00f3n","title":"Versiones 2.x"},{"location":"developers/update/#actualizacion-simple","text":"Si instalamos la aplicaci\u00f3n con la \u00faltima versi\u00f3n del instalador ( este ), el mismo no requerir\u00e1 par\u00e1metros, pero contiene algunos opcionales: # Par\u00e1metros de update.py [ -h ] Mostrar la ayuda del script [ --install_directory INSTALL_DIRECTORY ] Directorio donde est\u00e1 instalada la aplicaci\u00f3n. Por defecto es ` /etc/portal ` [ --nginx-extended-cache ] Configura nginx con una configuraci\u00f3n extendida y configura el hook de invalidaci\u00f3n de cache de Andino para notificar a nginx [ --nginx_ssl ] Aplica la configuraci\u00f3n HTTPS en nginx. Requiere ambos archivos del certificado SSL para poder lograrlo ; en caso contrario, se utilizar\u00e1 la configuraci\u00f3n default [ --ssl_key_path SSL_KEY_PATH ] Path dentro del host donde est\u00e1 ubicado el archivo .key para el certificado SSL ; ser\u00e1 copiado al contenedor de nginx si tanto \u00e9ste como el .crt pueden ser encontrados [ --ssl_crt_path SSL_CRT_PATH ] Path dentro del host donde est\u00e1 ubicado el archivo .crt para el certificado SSL ; ser\u00e1 copiado al contenedor de nginx si tanto \u00e9ste como el .key pueden ser encontrados [ --nginx_port NGINX_PORT ] Puerto del servidor Host que se desea que se tome para recibir llamadas HTTP. Por defecto es el 80 . [ --nginx_ssl_port NGINX_SSL_PORT ] Puerto del servidor Host que se desea que se tome para recibir llamadas HTTPS. Por defecto es el 443 . Es importante para los administradores saber que Andino tomar\u00e1 el puerto especificado ( o el default ) ya sea que el portal use o no use HTTPS. En caso de no querer usar HTTPS y que el host tenga erl puerto 443 tomado por un servidor web, es requisito especificar un puerto distinto ( ejemplo: 8443 ) que ser\u00e1 reservado por Andino, pero no utilizado. Para esta actualizaci\u00f3n de ejemplo, usaremos los valores por defecto: sudo wget https://raw.github.com/datosgobar/portal-andino/master/install/update.py sudo python update.py De esta forma, el script asumir\u00e1 que instalamos la aplicaci\u00f3n en /etc/portal .","title":"Actualizaci\u00f3n simple"},{"location":"developers/update/#actualizacion-avanzada","text":"Si instalamos la aplicaci\u00f3n en otro directorio distinto de /etc/portal , necesitamos correr el script de una manera diferente. Suponiendo que instalamos la aplicaci\u00f3n en /home/user/app/ , debemos correr los siguientes pasos: wget https://raw.github.com/datosgobar/portal-andino/master/install/update.py sudo python update.py --install_directory= /home/user/app/","title":"Actualizaci\u00f3n avanzada"},{"location":"developers/update/#andino-con-plugins-ad-hoc","text":"Si configuraste tu instancia de Andino con alg\u00fan plugin de CKAN que Andino no trae por defecto, es importante que antes de la instalaci\u00f3n elimines los mismos de la opcio\u00f3n de configuraci\u00f3n ckan.plugins del archivo /etc/ckan/default/production.ini del contenedor portal . Esto es importante, ya que el proceso de actualizaci\u00f3n descarga im\u00e1genes de Docker nuevas que no contendr\u00e1n los binarios de los plugins ad-hoc y si los mismos est\u00e1n en el archivo de configuraci\u00f3n de CKAN, la actualizaci\u00f3n fallar\u00e1. Los pasos adicionales que deber\u00e1s seguir si ten\u00e9s plugins ad-hoc son: Editar el archivo /etc/ckan/default/production.ini del contenedor portal y quitar de la lista de ckan.plugins los plugins ad-hoc . Actualizar Andino. Instalar los plugins ad-hoc dentro del virtualenv /usr/lib/ckan/default del contenedor portal . Editar el archivo /etc/ckan/default/production.ini del contenedor portal y agregar a la lista de ckan.plugins los plugins ad-hoc . Reiniciar Andino.","title":"Andino con plugins ad-hoc"},{"location":"developers/update/#versiones-24x-a-25x","text":"En el caso de actualizar un Andino de versi\u00f3n 2.4.x a 2.5.x existe un error conocido de CKAN 2.5.8 (Ver issue ckan/ckan#4168 ) que debe solucionarse ANTES de ejecutar la actualizaci\u00f3n . En el procedimiento normal, ocurrir\u00eda un error: sqlalchemy.exc.ProgrammingError: (ProgrammingError) column package.metadata_created does not exist Para poder solucionarlo, se debe correr el siguiente script antes de ejecutar el procedimiento normal de actualizaci\u00f3n : docker-compose -f latest.yml exec -u postgres db psql -c do \\$ $ begin IF NOT EXISTS(SELECT * FROM information_schema.columns WHERE table_name= package AND column_name= metadata_created ) OR NOT EXISTS(SELECT * FROM information_schema.columns WHERE table_name= package_revision AND column_name= metadata_created ) THEN IF NOT EXISTS(SELECT * FROM information_schema.columns WHERE table_name= package_revision AND column_name= metadata_created ) THEN ALTER TABLE package_revision ADD COLUMN metadata_created timestamp without time zone; END IF; IF NOT EXISTS(SELECT * FROM information_schema.columns WHERE table_name= package AND column_name= metadata_created ) THEN ALTER TABLE package ADD COLUMN metadata_created timestamp without time zone; END IF; UPDATE package SET metadata_created= (SELECT revision_timestamp FROM package_revision WHERE id=package.id ORDER BY revision_timestamp ASC LIMIT 1); END IF; end \\$ $ ckan","title":"Versiones 2.4.x a 2.5.x"},{"location":"developers/update/#versiones-1x-a-2x","text":"Ver documento de migraci\u00f3n","title":"Versiones 1.x a 2.x"}]}