sudo: required
env:
  DOCKER_COMPOSE_VERSION: 1.13.0

addons:
  apt:
    packages:
    - net-tools
    - openvpn

services:
- docker

before_install:
- docker info
- sudo apt-get remove docker docker-engine
- sudo apt-get update
- sudo apt-get install linux-image-extra-$(uname -r) linux-image-extra-virtual apt-transport-https ca-certificates curl software-properties-common
- curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
- sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
- sudo apt-get update
- sudo apt-get install docker-ce
- docker info
- sudo rm /usr/local/bin/docker-compose
- curl -L https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-`uname -s`-`uname -m` > docker-compose
- chmod +x docker-compose
- sudo mv docker-compose /usr/local/bin

before_script:
- sudo apt-get install openssl
- sudo mkdir -p /tmp/ssl
- sudo openssl req -x509 -nodes -days 365 -newkey rsa:2048 -subj '/CN=localhost/O=My Company Name LTD./C=AR' -keyout /tmp/ssl/andino.key -out /tmp/ssl/andino.crt
- docker build -t datosgobar/portal-andino:test-ssl .
- cd install/
#- env PORTAL_VERSION="${TRAVIS_TAG:-$TRAVIS_COMMIT}" docker-compose -f dev.yml up -d --build nginx
- EMAIL=admin@example.com
- HOST=localhost
- DB_USER=my_database_user
- DB_PASS=my_database_pass
- STORE_USER=my_data_user
- STORE_PASS=my_data_pass
- sudo python ./install.py --error_email "$EMAIL" --site_host="$HOST" --database_user="$DB_USER" --database_password="$DB_PASS" --datastore_user="$STORE_USER" --datastore_password="$STORE_PASS" --andino_version="test-ssl" --branch="179-configuracion-compose-para-ssl" --ssl_key_path="/tmp/ssl/andino.key" --ssl_crt_path="/tmp/ssl/andino.crt" --nginx_ssl --nginx_ssl_port="777"
- docker-compose -f dev.yml exec portal bash /etc/ckan_init.d/tests/install_nodejs.sh
- docker-compose -f dev.yml exec portal bash /etc/ckan_init.d/tests/install_solr4.sh
- docker ps
- docker exec -it andino-nginx bash -c 'ls $NGINX_SSL_CONFIG_DATA'

script:
- docker-compose -f dev.yml exec portal bash -c 'su -c "bash /etc/ckan_init.d/tests/run_all_tests.sh" -l $USER'

deploy:
- provider: script
  skip_cleanup: true
  script: "scripts/run_deploy.sh 'release-$TRAVIS_TAG' 'andino-stg;datosgobar-stg'"
  on:
    tags: true
- provider: script
  skip_cleanup: true
  script: "scripts/run_deploy.sh latest 'andino-dev;datosgobar-dev'"
  on:
    branch: master

git:
  depth:
     1
